{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Par",
				"Parameters"
			],
			[
				"multi",
				"MultiConsumer"
			],
			[
				"new",
				"new_node"
			],
			[
				"t2_",
				"t2_hit"
			],
			[
				"t1",
				"t1_hit"
			],
			[
				"fst",
				"fst_intersection"
			],
			[
				"inters",
				"intersection2"
			],
			[
				"intersect",
				"intersection1"
			],
			[
				"inter",
				"intersection1"
			],
			[
				"near",
				"nearest_intersection"
			],
			[
				"Inter",
				"Intersection"
			],
			[
				"t1_",
				"t1_max"
			],
			[
				"center",
				"center_i"
			],
			[
				"TriangleSou",
				"TrinangleSoup"
			],
			[
				"buil",
				"build_bvh"
			],
			[
				"first",
				"first_triangle_idx"
			],
			[
				"reo",
				"reorder_triangles_median"
			],
			[
				"num",
				"num_triangles"
			],
			[
				"tri",
				"triangle_idx"
			],
			[
				"trin",
				"triangle_index"
			],
			[
				"triangle",
				"triangle_soup"
			],
			[
				"firs",
				"first_triangle_idx"
			],
			[
				"get",
				"getPixel"
			],
			[
				"kernel",
				"kernel_center"
			],
			[
				"kern",
				"kernel_center"
			],
			[
				"kerne",
				"kernel_center"
			],
			[
				"kere",
				"kernel_size"
			],
			[
				"dnor",
				"dnorm_sum"
			],
			[
				"p",
				"p_values"
			],
			[
				"sym",
				"symbol_name"
			],
			[
				"as",
				"asarray"
			],
			[
				"arg",
				"arg_min"
			],
			[
				"sim",
				"simulated_annealing"
			],
			[
				"numb",
				"number_file"
			],
			[
				"max",
				"max_number"
			],
			[
				"nr_o",
				"nr_of_queries"
			],
			[
				"file",
				"filename"
			],
			[
				"nr",
				"nr_of_elements"
			],
			[
				"child",
				"children"
			],
			[
				"ap",
				"Appointments"
			],
			[
				"app",
				"appointments"
			],
			[
				"appoi",
				"Appointment"
			],
			[
				"coll",
				"Collatz"
			],
			[
				"package_",
				"package_url"
			],
			[
				"down",
				"download_dir"
			],
			[
				"end",
				"endswith"
			],
			[
				"pack",
				"package_analysis"
			],
			[
				"Not",
				"NotImplementedError"
			],
			[
				"pk",
				"pkg_resources_pkgs"
			],
			[
				"pkg",
				"pkg_utils"
			],
			[
				"sys",
				"system_modules"
			],
			[
				"requi",
				"requirements"
			],
			[
				"imp",
				"imported_packages"
			],
			[
				"lo",
				"logging"
			],
			[
				"setup",
				"setup_py_file"
			],
			[
				"setu",
				"setup_py_file"
			],
			[
				"id",
				"id_number"
			],
			[
				"get_pkg",
				"get_pkg_id_by_name"
			],
			[
				"packa",
				"package_id"
			],
			[
				"imported",
				"imported_packages"
			],
			[
				"pac",
				"package_id"
			],
			[
				"require",
				"required_packages"
			],
			[
				"get_",
				"get_requirements"
			],
			[
				"package",
				"package_url"
			],
			[
				"rot",
				"rotationMatrix"
			],
			[
				"isec",
				"isectPos"
			],
			[
				"deh",
				"dehomogenCoords"
			],
			[
				"max_",
				"max_v"
			],
			[
				"int",
				"intersection"
			],
			[
				"mip",
				"mip_levels"
			],
			[
				"eva",
				"evaluate_bilinear"
			],
			[
				"size",
				"size_y"
			],
			[
				"i_hi",
				"i_hity"
			],
			[
				"i_",
				"i_hitx"
			],
			[
				"mu_",
				"mu_upper"
			],
			[
				"mu",
				"mu_upper"
			],
			[
				"stich",
				"stichprobe"
			],
			[
				"sub",
				"subdir"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"PT",
				"PTCA_fail"
			],
			[
				"X_nor",
				"X_normal_mean"
			],
			[
				"norm",
				"normalize"
			],
			[
				"et",
				"eta_of_channel"
			],
			[
				"handle_t",
				"handle_transmissive_material_single_ior"
			],
			[
				"ev",
				"evaluate_transmission"
			],
			[
				"fre",
				"fresnel_term"
			],
			[
				"model",
				"model_folder"
			],
			[
				"line_s",
				"line_segments_b"
			],
			[
				"arpa",
				"arpa_str"
			],
			[
				"pro",
				"probability"
			],
			[
				"symbol",
				"symbolbla"
			],
			[
				"symb",
				"symbol_filename"
			],
			[
				"hand",
				"handwriting_datasets"
			],
			[
				"destin",
				"destination_path"
			],
			[
				"_g",
				"_get_writemath_id"
			],
			[
				"hypot",
				"hypotheses"
			],
			[
				"seg",
				"segmentation"
			],
			[
				"resul",
				"results_json"
			],
			[
				"Pr",
				"Println	n int, err error ƒ"
			],
			[
				"ma",
				"max_"
			],
			[
				"k_",
				"k_a"
			],
			[
				"mat",
				"material"
			],
			[
				"lm_",
				"lm_probability"
			],
			[
				"msic",
				"misc_path"
			],
			[
				"hypoth",
				"hypothesis"
			],
			[
				"sy",
				"symbol_id"
			],
			[
				"str",
				"stroke_nr"
			],
			[
				"at_",
				"at_least_total"
			],
			[
				"stroke",
				"stroke_count"
			],
			[
				"at_l",
				"at_least_rel"
			],
			[
				"rec",
				"recordings"
			],
			[
				"for",
				"for	for …"
			],
			[
				"part",
				"partial_answers"
			],
			[
				"xy",
				"xyz"
			],
			[
				"inte",
				"integrate_trapezoidal"
			],
			[
				"gl",
				"glColor3f"
			],
			[
				"lower",
				"lowerLeft"
			],
			[
				"upp",
				"upperRight"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"toggle",
				"View: Toggle Tabs"
			],
			[
				"toggle min",
				"View: Toggle Minimap"
			],
			[
				"set syntax c++",
				"Set Syntax: C++"
			],
			[
				"set syntax: c++",
				"Set Syntax: C++"
			],
			[
				"",
				"Build With: LaTeX"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"build",
				"Build With: make"
			],
			[
				"proj",
				"Project: Save As"
			],
			[
				"color",
				"Colorsublime: Browse Themes"
			],
			[
				"theme",
				"Colorsublime: Install Theme"
			],
			[
				"set syntax: late",
				"Set Syntax: LaTeX"
			],
			[
				"makr",
				"Set Syntax: Markdown"
			],
			[
				"wrap",
				"Wrap Plus: Wrap Lines"
			],
			[
				"align",
				"Preferences: Alignment File Settings – Syntax Specific – User"
			],
			[
				"lis",
				"Package Control: List Packages"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"json",
				"JsonTree: Show Tree"
			],
			[
				"isnta",
				"Package Control: Install Package"
			],
			[
				"alignment",
				"Preferences: Alignment File Settings – Syntax Specific – User"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"latextools:",
				"LaTeXTools: Build cache for LaTeX packages"
			],
			[
				"latex",
				"LaTeXTools: Build cache for LaTeX packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instllth",
				"Colorsublime: Install Theme"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 320.0,
		"history":
		[
			"ls",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/moose/GitHub/MartinThoma.github.io"
	],
	"file_history":
	[
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2015-11-09-machine-learning-1-course.md",
		"/home/moose/GitHub/write-math/tools/language_model/parse_mathmode.py",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/03-traditional-approaches-svm.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Martin/READING_LIST.md",
		"/home/moose/Desktop/todo/gpuc.py",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/vorlage.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Proseminar-Netzwerkanalyse/DYCOS-Algorithmus.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Proseminar-Netzwerkanalyse/Ausarbeitung-Thoma.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/facharbeit-rsa/facharbeit-rsa.tex",
		"/home/moose/GitHub/MartinThoma.github.io/_includes/head.html",
		"/home/moose/GitHub/MartinThoma.github.io/_layouts/default-wp.html",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2015-04-27-mustererkennung-klausur.md",
		"/home/moose/GitHub/tensorflow-deepq/README.md",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/booka4.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/Angriffe.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/Makefile",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/00README.XXX",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/literatur.bib",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/Standards.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/Verteidigung.tex",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2014-12-02-the-impact-of-strong-ais.md",
		"/home/moose/GitHub/write-math/tools/language_model/parse_arxiv.py",
		"/home/moose/Desktop/reg/nnetstest.py",
		"/home/moose/GitHub/write-math/tools/language_model/language-model-building/latex-parser.py",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2015-04-27-neuronale-netze-vorlesung.md",
		"/home/moose/GitHub/neuralnetmusic/keras_test.py",
		"/home/moose/GitHub/neuralnetmusic/README.md",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/2015-12-23-educational-websites.md",
		"/home/moose/GitHub/neuralnetmusic/.gitignore",
		"/home/moose/GitHub/neuralnetmusic/requirements.txt",
		"/home/moose/GitHub/neuralnetmusic/DBN.py",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/content/materialsammlung.md",
		"/home/moose/Desktop/todo.md",
		"/home/moose/Desktop/nn-faq.md",
		"/home/moose/Desktop/Paperdisc.md",
		"/home/moose/Desktop/bla.bib",
		"/media/moose/4F02-27B7/README.md",
		"/home/moose/Desktop/todo/Raquel-essen.md",
		"/home/moose/Desktop/todo/TODO.md",
		"/home/moose/GitHub/LaTeX-examples/tikz/venn-diagramm-ml/venn-diagramm-ml.tex",
		"/home/moose/GitHub/deepAutoController/README.md",
		"/home/moose/GitHub/deepAutoController/requirements.txt",
		"/home/moose/GitHub/deepAutoController/autocontrol.py",
		"/home/moose/GitHub/deepAutoController/icmc.py",
		"/home/moose/GitHub/LaTeX-examples/tikz/venn-diagramm-ml/README.md",
		"/home/moose/GitHub/LaTeX-examples/tikz/venn-diagramm-ml/Makefile",
		"/home/moose/GitHub/deepAutoController/extract_features.py",
		"/home/moose/GitHub/deepAutoController/template.yaml",
		"/home/moose/Desktop/kernel.py",
		"/home/moose/GitHub/informatik-2011/Master/Computergrafik/Uebungsblaetter/cg_exercise_04/cglib/include/cglib/rt/ray.h",
		"/home/moose/GitHub/informatik-2011/Master/Computergrafik/Uebungsblaetter/cg_exercise_04/cglib/include/cglib/rt/aabb.h",
		"/home/moose/Desktop/cg-other-4-3wi0Rn5ek.cpp",
		"/home/moose/GitHub/informatik-2011/Master/Computergrafik/Uebungsblaetter/cg_exercise_04/04_bvh/src/exercise_04.cpp",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Martin/Tipps_fuer_Marvin.md",
		"/home/moose/GitHub/ML-KA/protokolle/2015-11-25-Monatstreffen2.md",
		"/home/moose/GitHub/deepAutoController/template_orig.yaml",
		"/home/moose/Desktop/cg-other-4-2.cpp",
		"/home/moose/Desktop/cg-other-4.cpp",
		"/home/moose/GitHub/informatik-2011/Master/Computergrafik/Uebungsblaetter/cg_exercise_04/cglib/include/cglib/rt/bvh.h",
		"/home/moose/GitHub/informatik-2011/Master/Computergrafik/Uebungsblaetter/cg_exercise_04/cglib/src/core/image.cpp",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/martin.bib",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/01-taxonomy.tex",
		"/home/moose/Downloads/ar_bioeng2_315.bib",
		"/home/moose/Downloads/ar_bioeng2_315 (1).bib",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/01-introduction.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Martin/README.md",
		"/home/moose/GitHub/pst-antrag/Waibel-e-mail.md",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/content/paper-discussion-group.md",
		"/home/moose/GitHub/OverFeat/src/modules.hpp",
		"/home/moose/GitHub/OverFeat/src/overfeat",
		"/home/moose/GitHub/pst-antrag/BVLC-e-mail.md",
		"/home/moose/GitHub/informatik-2011/Master/Computergrafik/Uebungsblaetter/cg_exercise_04/Kompilieren.txt",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/03-tranditional-approaches-markov-random-fields.tex",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/2015-06-24-difficulties-of-language.md",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/03-traditional-approaches.tex",
		"/home/moose/GitHub/GRUV/train.py",
		"/home/moose/GitHub/GRUV/convert_directory.py",
		"/home/moose/GitHub/GRUV/generate.py",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch5-audio.tex",
		"/home/moose/GitHub/hwrt/bin/convert.py",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/03-tranditional-approaches-cfm.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/03-traditional-approaches-random-forests.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/Makefile",
		"/home/moose/GitHub/LaTeX-examples/images/side-by-side-subfig/side-by-side-subfig.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/art-in-machine-learning.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch1-introduction.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch2-ml-basics.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch3-images.tex",
		"/home/moose/GitHub/LaTeX-examples/images/side-by-side/side-by-side.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/art-in-machine-learning.log",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/r-lang.md",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-8/a22.r",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/booka4.log",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-7/Washer.txt",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-6/a-17.r",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-6/a-16.r",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-7/a19.r",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-7/a20.r",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-7/a21.r",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-2/Tag2-Aufgabe-2.r",
		"/home/moose/GitHub/informatik-2011/Master/Ergaenzungsfach/Statistik/Statistik-Praktikum/Tag-2/Tag2-Aufgabe-1.r",
		"/home/moose/GitHub/LaTeX-examples/documents/nice-url-breaks/vorlage.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/Einleitung.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/abstract.tex",
		"/home/moose/GitHub/ml-abschlusspaper/pixel-wise-street-segmentation.tex",
		"/home/moose/GitHub/bsthesis/thesisclass.cls",
		"/home/moose/GitHub/bsthesis/thesis.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/exploit-buffer-overflow/simple.c",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/exploit-buffer-overflow/exploitable.c",
		"/home/moose/GitHub/ml-abschlusspaper/abstract.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/content/Angriffe.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/preface/abstract.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/content/exploit-buffer-overflow/simple.c",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/content/Verteidigung.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/content/exploit-buffer-overflow/exploitable.c",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/graphics/README.md",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/content/Standards.tex",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/content/Einleitung.tex",
		"/home/moose/GitHub/ml-abschlusspaper/Makefile",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/README.md",
		"/home/moose/GitHub/ML-KA/kaggle-digit-recognizer-tf-tutorial/mnisttf.py",
		"/home/moose/GitHub/hwrt/hwrt/datasets/inkml.py",
		"/home/moose/GitHub/hwrt/.gitignore",
		"/home/moose/GitHub/seminar-kognitive-automobile/UVKABoA4.cls",
		"/home/moose/GitHub/LaTeX-examples/publications/Proseminar-Netzwerkanalyse/Makefile",
		"/home/moose/GitHub/LaTeX-examples/publications/Seminar-Kognitive-Automobile/kontaktiert.md",
		"/home/moose/GitHub/LaTeX-examples/documents/nice-url-breaks/Makefile",
		"/home/moose/Downloads/10.1023%2FA%3A1022643204877.bib"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"langua",
			"set",
			"itemize",
			"MultiConsumer",
			"Consumer",
			"self.splitting",
			"Consumer",
			"Block",
			"Token",
			"svm",
			"b",
			"caption",
			"vmargin",
			"GM",
			"rates",
			"month",
			"ford",
			"bmw",
			"can-exter",
			"unknown_extensions_t",
			"parse_mathmode",
			"np",
			"midi",
			"theano",
			"training_epochs",
			"bagging",
			"boosting",
			"hdf",
			"second_node",
			"first_node",
			"nodeLeft",
			"min",
			"	",
			"reorder_triangles_median",
			"build_bvh",
			"reorder_triangles_median",
			"triangleSorter",
			"trin",
			"trinangleSorter",
			"triangleSort",
			"trinangleSorter",
			"triangleSort",
			"trinangleSorter",
			"TrinangleSoup",
			"triangleSort",
			"dim",
			"triangleSort",
			"sort",
			"triangleSort",
			"depth",
			"triangle_index",
			"first_triangle",
			"triangle_indices",
			"i",
			"/*\n * Convolve an image with a 2d gaussian filter kernel, but separate\n * the filter.\n *\n * Parameters:\n *  - sigma:       the parameter of the gaussian\n *  - kernel_size: the size of the kernel\n *  - wrap_mode:   needs to be known to handle repeating \n *                 textures correctly\n */\nstd::shared_ptr<Image> Image::\nfilter_gaussian_sep(float sigma, int kernel_size, WrapMode wrap_mode) const\n{\n	cg_assert (kernel_size%2==1 && \"kernel size should be odd.\");\n	cg_assert (kernel_size > 0 && \"kernel size should be greater than 0.\");\n\n	std::shared_ptr<Image> dst_image_vertical = std::make_shared<Image>(m_width, m_height);\n\n	std::vector<float> kernel(kernel_size);\n	create_1d_kernel(sigma, kernel_size, kernel.data());\n\n	// TODO: realize the 2d convolution with two\n	// convolutions of the image with a 1d gauss kernel.\n	// convolve the image horizontally and then convolve\n	// the result vertically (or vise-versa).\n	//\n	// use the methods getPixel(x, y, wrap_mode) and\n	// setPixel(x, y, value) to get and set pixels of an image\n  \n  int middle = (kernel_size + 1) / 2;\n  int pixel_x;\n  // filter horizontally\n  // iterate through all pixels of the image\n  for (int x = 0; x < m_width; x++) {\n    for (int y = 0; y < m_height; y++) {\n      glm::vec4 newPixel = glm::vec4(0.f);\n      // iterate through each kernel-pixel\n      for (int a = 1; a < kernel_size; a++) {\n        pixel_x = x + a - middle;\n        newPixel += kernel[a] * getPixel(pixel_x, y, wrap_mode);\n      }\n      dst_image_vertical->setPixel(x, y, newPixel);\n    }\n  }\n  \n  std::shared_ptr<Image> dst_image_horizontal = std::make_shared<Image>(m_width, m_height);\n  \n  int pixel_y;\n  // filter dst_image vertically\n  for (int x = 0; x < m_width; x++) {\n    for (int y = 0; y < m_height; y++) {\n      glm::vec4 newPixel = glm::vec4(0.f);\n      // iterate through each kernel-pixel\n      for (int a = 1; a < kernel_size; a++) {\n        pixel_y = y + a - middle;\n        newPixel += kernel[a] * dst_image_vertical->getPixel(x, pixel_y, wrap_mode);\n      }\n      dst_image_horizontal->setPixel(x, y, newPixel);\n    }\n  }\n  \n	return dst_image_horizontal;\n}",
			"i",
			"width",
			"get",
			"getW",
			"Image::\nfilter",
			"cg_assert (kernel_size%2==1",
			"::filter",
			"	",
			"gruv",
			"keyw",
			"sub",
			"error",
			"warning",
			"error",
			"nag",
			"zufallszahlen",
			"warning",
			"error",
			"nag",
			"kapitel",
			"hyperre",
			"\\chapter",
			"\\section",
			"content",
			"cleveref",
			"hyperr",
			" CT ",
			"CT ",
			"rng",
			"3rng",
			"\nrng",
			"build_model",
			"training_epochs",
			"bib",
			"decision",
			"forest",
			"http://www.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/",
			"snake",
			"graph",
			"sequence",
			"random",
			"crf",
			"Shotton",
			"scene parsing",
			"cancer",
			"medi",
			"cited by ",
			"-",
			"Textonboost",
			"Textonboost: Joint",
			"interact",
			"Rich feature hierarchies",
			"cluster",
			"spectral",
			"todo",
			"temp",
			"todo",
			"pca",
			"pixel",
			"typicall",
			"semantic",
			"L",
			"A",
			"lagrage_i",
			"Li",
			"germanDeck",
			"newCard",
			"frenchDeck",
			"frenc",
			"rightChild",
			"leftChild",
			"namesValues",
			"nameVal"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"    ",
			"\\section",
			"\\subsection",
			"    ",
			"\\\\[\\1\\\\]",
			"\\[\\1\\]",
			"\\\\\\\\(\\1\\\\\\\\)",
			"\\\\\\(\\1\\\\\\)",
			"\\\\(\\1\\\\)",
			"\\\\[\\1\\\\]",
			"\\[\\1\\]",
			"    ",
			"\\\\\\(\\1\\\\\\)",
			"\\(\\1\\)",
			"    ",
			"\\n```\\1\\n\\2\\n```\\n",
			"\\n```\\1\\n\\2\\n```",
			"    "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "blog.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"machine",
				"_posts/2015-11-09-machine-learning-1-course.md"
			],
			[
				"aabb.",
				"cglib/include/cglib/rt/aabb.h"
			],
			[
				".h",
				"cglib/include/cglib/rt/ray.h"
			],
			[
				"bvh",
				"cglib/include/cglib/rt/bvh.h"
			],
			[
				"intro",
				"Proseminar_Medizin_Vorlage/01-introduction.tex"
			],
			[
				"tra",
				"Proseminar_Medizin_Vorlage/03-traditional-approaches.tex"
			],
			[
				"03",
				"Proseminar_Medizin_Vorlage/03-traditional-approaches.tex"
			],
			[
				"reading",
				"Martin/READING_LIST.md"
			],
			[
				"trad",
				"Proseminar_Medizin_Vorlage/03-traditional-approaches.tex"
			],
			[
				"readi",
				"Martin/READING_LIST.md"
			],
			[
				"int",
				"Proseminar_Medizin_Vorlage/01-introduction.tex"
			],
			[
				"quali",
				"Proseminar_Medizin_Vorlage/02-1-quality-measures.tex"
			],
			[
				"marv",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"glo",
				"Proseminar_Medizin_Vorlage/glossary.tex"
			],
			[
				"tax",
				"Proseminar_Medizin_Vorlage/01-taxonomy.tex"
			],
			[
				"tip",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"gloss",
				"Proseminar_Medizin_Vorlage/glossary.tex"
			],
			[
				"tran",
				"Proseminar_Medizin_Vorlage/03-traditional-approaches.tex"
			],
			[
				"marvin",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"re",
				"Martin/READING_LIST.md"
			],
			[
				"enh",
				"Proseminar_Medizin_Vorlage/07-image-enhancement.tex"
			],
			[
				"mar",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"tipp",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"glos",
				"Proseminar_Medizin_Vorlage/glossary.tex"
			],
			[
				"qual",
				"Proseminar_Medizin_Vorlage/02-1-quality-measures.tex"
			],
			[
				"probl",
				"Proseminar_Medizin_Vorlage/05-typical-problems.tex"
			],
			[
				"rea",
				"Martin/READING_LIST.md"
			],
			[
				"evalu",
				"Proseminar_Medizin_Vorlage/02-0-evaluation-and-datasets.tex"
			],
			[
				"read",
				"Martin/READING_LIST.md"
			],
			[
				"01-",
				"Proseminar_Medizin_Vorlage/01-introduction.tex"
			],
			[
				"taxo",
				"Proseminar_Medizin_Vorlage/01-taxonomy.tex"
			],
			[
				"que",
				"QUESTIONS.md"
			],
			[
				"ques",
				"QUESTIONS.md"
			],
			[
				"readin",
				"Martin/READING_LIST.md"
			],
			[
				"javascript",
				"_drafts/2015-12-01-javascript-a-strange-language.md"
			],
			[
				"vorlage.te",
				"Proseminar_Medizin_Vorlage/vorlage.tex"
			],
			[
				"log",
				"Proseminar_Medizin_Vorlage/vorlage.log"
			],
			[
				"make",
				"Proseminar_Medizin_Vorlage/Makefile"
			],
			[
				".gi",
				".gitignore"
			],
			[
				"typ",
				"05-typical-problems.tex"
			],
			[
				"vorl",
				"vorlage.tex"
			],
			[
				"object",
				"cglib/src/rt/object.cpp"
			],
			[
				"transform.",
				"cglib/include/cglib/rt/transform.h"
			],
			[
				"image.h",
				"cglib/include/cglib/core/image.h"
			],
			[
				"epsi",
				"cglib/include/cglib/rt/epsilon.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/GitHub/MartinThoma.github.io/blog.sublime-project"
			],
			[
				"blo",
				"~/GitHub/MartinThoma.github.io/blog.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 140.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
