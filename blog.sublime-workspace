{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Error",
				"NotImplementedError"
			],
			[
				"release",
				"release_id"
			],
			[
				"package",
				"package_id"
			],
			[
				"pack",
				"package_id"
			],
			[
				"down",
				"downloaded_bytes"
			],
			[
				"numb",
				"number_file"
			],
			[
				"max",
				"max_number"
			],
			[
				"nr_o",
				"nr_of_queries"
			],
			[
				"file",
				"filename"
			],
			[
				"nr",
				"nr_of_elements"
			],
			[
				"child",
				"children"
			],
			[
				"ap",
				"Appointments"
			],
			[
				"app",
				"appointments"
			],
			[
				"appoi",
				"Appointment"
			],
			[
				"coll",
				"Collatz"
			],
			[
				"package_",
				"package_url"
			],
			[
				"end",
				"endswith"
			],
			[
				"Not",
				"NotImplementedError"
			],
			[
				"pk",
				"pkg_resources_pkgs"
			],
			[
				"pkg",
				"pkg_utils"
			],
			[
				"sys",
				"system_modules"
			],
			[
				"requi",
				"requirements"
			],
			[
				"imp",
				"imported_packages"
			],
			[
				"lo",
				"logging"
			],
			[
				"setup",
				"setup_py_file"
			],
			[
				"setu",
				"setup_py_file"
			],
			[
				"id",
				"id_number"
			],
			[
				"get_pkg",
				"get_pkg_id_by_name"
			],
			[
				"packa",
				"package_id"
			],
			[
				"imported",
				"imported_packages"
			],
			[
				"pac",
				"package_id"
			],
			[
				"require",
				"required_packages"
			],
			[
				"get_",
				"get_requirements"
			],
			[
				"rot",
				"rotationMatrix"
			],
			[
				"isec",
				"isectPos"
			],
			[
				"deh",
				"dehomogenCoords"
			],
			[
				"get",
				"getWidth"
			],
			[
				"max_",
				"max_v"
			],
			[
				"int",
				"intersection"
			],
			[
				"new",
				"new_size_y"
			],
			[
				"mip",
				"mip_levels"
			],
			[
				"eva",
				"evaluate_bilinear"
			],
			[
				"size",
				"size_y"
			],
			[
				"i_hi",
				"i_hity"
			],
			[
				"i_",
				"i_hitx"
			],
			[
				"inter",
				"intervalls"
			],
			[
				"mu_",
				"mu_upper"
			],
			[
				"mu",
				"mu_upper"
			],
			[
				"stich",
				"stichprobe"
			],
			[
				"sub",
				"subdir"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"PT",
				"PTCA_fail"
			],
			[
				"X_nor",
				"X_normal_mean"
			],
			[
				"norm",
				"normalize"
			],
			[
				"et",
				"eta_of_channel"
			],
			[
				"handle_t",
				"handle_transmissive_material_single_ior"
			],
			[
				"ev",
				"evaluate_transmission"
			],
			[
				"fre",
				"fresnel_term"
			],
			[
				"model",
				"model_folder"
			],
			[
				"line_s",
				"line_segments_b"
			],
			[
				"arpa",
				"arpa_str"
			],
			[
				"sym",
				"symbollistrender"
			],
			[
				"pro",
				"probability"
			],
			[
				"symbol",
				"symbolbla"
			],
			[
				"symb",
				"symbol_filename"
			],
			[
				"hand",
				"handwriting_datasets"
			],
			[
				"destin",
				"destination_path"
			],
			[
				"_g",
				"_get_writemath_id"
			],
			[
				"hypot",
				"hypotheses"
			],
			[
				"seg",
				"segmentation"
			],
			[
				"resul",
				"results_json"
			],
			[
				"Pr",
				"Println	n int, err error ƒ"
			],
			[
				"ma",
				"max_"
			],
			[
				"k_",
				"k_a"
			],
			[
				"mat",
				"material"
			],
			[
				"lm_",
				"lm_probability"
			],
			[
				"msic",
				"misc_path"
			],
			[
				"hypoth",
				"hypothesis"
			],
			[
				"sy",
				"symbol_id"
			],
			[
				"str",
				"stroke_nr"
			],
			[
				"at_",
				"at_least_total"
			],
			[
				"stroke",
				"stroke_count"
			],
			[
				"at_l",
				"at_least_rel"
			],
			[
				"rec",
				"recordings"
			],
			[
				"for",
				"for	for …"
			],
			[
				"part",
				"partial_answers"
			],
			[
				"xy",
				"xyz"
			],
			[
				"inte",
				"integrate_trapezoidal"
			],
			[
				"gl",
				"glColor3f"
			],
			[
				"lower",
				"lowerLeft"
			],
			[
				"upp",
				"upperRight"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/moose/GitHub/algorithms/PyPI/package_analysis.py",
			"settings":
			{
				"buffer_size": 12478,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/moose/Desktop/nn-faq.md",
			"settings":
			{
				"buffer_size": 770,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/moose/GitHub/ML-KA/kaggle-digit-recognizer-tf-tutorial/input/README.md",
			"settings":
			{
				"buffer_size": 48,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/moose/GitHub/ML-KA/kaggle-digit-recognizer-tf-tutorial/mnisttf.py",
			"settings":
			{
				"buffer_size": 5025,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"set syntax js",
				"Set Syntax: JSON"
			],
			[
				"set syntax c++",
				"Set Syntax: C++"
			],
			[
				"set syntax: c++",
				"Set Syntax: C++"
			],
			[
				"",
				"Build With: LaTeX"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"build",
				"Build With: make"
			],
			[
				"proj",
				"Project: Save As"
			],
			[
				"color",
				"Colorsublime: Browse Themes"
			],
			[
				"theme",
				"Colorsublime: Install Theme"
			],
			[
				"set syntax: late",
				"Set Syntax: LaTeX"
			],
			[
				"makr",
				"Set Syntax: Markdown"
			],
			[
				"wrap",
				"Wrap Plus: Wrap Lines"
			],
			[
				"align",
				"Preferences: Alignment File Settings – Syntax Specific – User"
			],
			[
				"lis",
				"Package Control: List Packages"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"json",
				"JsonTree: Show Tree"
			],
			[
				"isnta",
				"Package Control: Install Package"
			],
			[
				"alignment",
				"Preferences: Alignment File Settings – Syntax Specific – User"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"latextools:",
				"LaTeXTools: Build cache for LaTeX packages"
			],
			[
				"latex",
				"LaTeXTools: Build cache for LaTeX packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instllth",
				"Colorsublime: Install Theme"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 320.0,
		"history":
		[
			"ls",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/moose/GitHub/MartinThoma.github.io"
	],
	"file_history":
	[
		"/home/moose/GitHub/algorithms/PyPI/package_analysis.py",
		"/home/moose/GitHub/algorithms/PyPI/build_dependency_db.py",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2015-04-27-neuronale-netze-vorlesung.md",
		"/home/moose/GitHub/PyMySQL/pymysql/cursors.py",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2014-01-28-highend-notebooks.md",
		"/home/moose/GitHub/algorithms/PyPI/README.md",
		"/home/moose/GitHub/algorithms/.gitignore",
		"/home/moose/Desktop/gpuc/ConvolutionBilateralVert.cl",
		"/home/moose/Desktop/ConvolutionBilateral.cl",
		"/home/moose/GitHub/algorithms/polynom-interpolation/polynomial_interpolation.py",
		"/home/moose/GitHub/algorithms/datastructures/binary_search_tree.py",
		"/home/moose/GitHub/algorithms/cardGames/card_game.py",
		"/home/moose/GitHub/algorithms/splinte-interplation/spline_interpolation.py",
		"/home/moose/GitHub/algorithms/RMQ/generate_numbers.py",
		"/home/moose/GitHub/algorithms/RMQ/rmq.py",
		"/home/moose/GitHub/algorithms/longest-increasing-subsequence/longest_increasing_subsequence.py",
		"/home/moose/GitHub/algorithms/datastructures/b_tree.py",
		"/home/moose/GitHub/algorithms/datastructures/redBlackTree-possible-bug.py",
		"/home/moose/GitHub/algorithms/finite-groups/finiteGroupChecks.py",
		"/home/moose/GitHub/algorithms/stabzerlegung.py",
		"/home/moose/GitHub/algorithms/randpfade.py",
		"/home/moose/GitHub/algorithms/cardGames/cardGame.py",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/03-traditional-approaches.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Martin/READING_LIST.md",
		"/home/moose/GitHub/algorithms/datastructures/binarySearchTree.py",
		"/home/moose/GitHub/algorithms/datastructures/redBlackTree.py",
		"/home/moose/GitHub/algorithms/longest-increasing-subsequence/longest-increasing-subsequence.py",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2012-11-03-what-is-the-best-programming-language.md",
		"/home/moose/GitHub/algorithms/datastructures/redBlackTree",
		"/home/moose/GitHub/algorithms/cross-correlation/zncc.py",
		"/home/moose/GitHub/algorithms/collatz/visualizations/small-numbers.py",
		"/home/moose/GitHub/algorithms/collatz/steps-collatz-sequence.py",
		"/home/moose/GitHub/algorithms/lup-decomposition/ludec.py",
		"/home/moose/GitHub/algorithms/RMQ/generateNumbers.py",
		"/home/moose/GitHub/algorithms/polynom-interpolation/polynomial-interpolation.py",
		"/home/moose/GitHub/algorithms/square-root-calculation/points.py",
		"/home/moose/GitHub/algorithms/sorting.py",
		"/home/moose/GitHub/algorithms/appointment-conflicts/appointment-conflicts.py",
		"/home/moose/GitHub/algorithms/datastructures/b-tree.py",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Martin/README.md",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Martin/Tipps_fuer_Marvin.md",
		"/home/moose/GitHub/algorithms/splinte-interplation/spline-interpolation.py",
		"/home/moose/GitHub/algorithms/RMQ/RMQ.py",
		"/home/moose/GitHub/algorithms/RMQ/Testing/10.10.queries.txt",
		"/home/moose/GitHub/algorithms/arithmetic-notation-conversion/arithmetic-notation-conversion.py",
		"/home/moose/GitHub/algorithms/fibonacci/fibonacci.py",
		"/home/moose/GitHub/algorithms/sorting/generateNumbers.",
		"/home/moose/GitHub/algorithms/sorting/generateNumbers.py",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2015-01-18-analyzing-pypi-metadata.md",
		"/home/moose/GitHub/algorithms/pi/pi.py",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/2015-12-07-analyzing-pypi-metadata-2.md",
		"/home/moose/GitHub/algorithms/datastructures/Readme.md",
		"/home/moose/GitHub/seminar-art-in-machine-learning/README.md",
		"/home/moose/GitHub/deep-dream/README.md",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/2015-12-07-pypi-2.md",
		"/home/moose/GitHub/algorithms/PyPI/not-found.csv",
		"/home/moose/GitHub/algorithms/PyPI/build_datastructure.py",
		"/home/moose/GitHub/hwrt/setup.py",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/01-taxonomy.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/02-1-quality-measures.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/01-introduction.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/glossary.tex",
		"/home/moose/GitHub/hwrt/hwrt/utils.py",
		"/home/moose/GitHub/algorithms/PyPI/database_schema.sql",
		"/home/moose/GitHub/algorithms/PyPI/add_system_packages.py",
		"/home/moose/GitHub/algorithms/PyPI/pypipackages/natsort-4.0.4-py2.py3-none-any/natsort-4.0.4.dist-info/WHEEL",
		"/home/moose/GitHub/algorithms/PyPI/sys-pkgs.txt",
		"/home/moose/GitHub/algorithms/PyPI/pypipackages/1pass-0.2.0/1pass-0.2.0/setup.py",
		"/home/moose/GitHub/algorithms/PyPI/pypipackages/1pass-0.2.0/1pass-0.2.0/onepassword/cli.py",
		"/home/moose/GitHub/algorithms/PyPI/1pass-0.2.0/setup.py",
		"/home/moose/GitHub/algorithms/PyPI/1pass-0.2.0/PKG-INFO",
		"/home/moose/GitHub/algorithms/PyPI/requirements.txt",
		"/home/moose/GitHub/algorithms/PyPI/secret.json",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch4-texts.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch5-music.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch3-images.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/reading-list-todo.md",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch2-ml-basics.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/art-in-machine-learning.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/figures/README.md",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch5-discussion.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch1-introduction.tex",
		"/home/moose/GitHub/bsthesis/thesis.bib",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch2-images.tex",
		"/home/moose/GitHub/seminar-art-in-machine-learning/ch3-music.tex",
		"/home/moose/GitHub/ml-abschlusspaper/.gitignore",
		"/home/moose/GitHub/seminar-art-in-machine-learning/.gitignore",
		"/home/moose/GitHub/seminar-art-in-machine-learning/Makefile",
		"/home/moose/GitHub/seminar-art-in-machine-learning/abstract.tex",
		"/home/moose/Desktop/seminar-machines-dream.md",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/07-image-enhancement.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/05-typical-problems.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/QUESTIONS.md",
		"/home/moose/GitHub/informatik-2011/HiWi/2015-06/README.md",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/pelican-bootstrap3/templates/article.html",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/content/paper-discussion-group.md",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/README.md",
		"/home/moose/GitHub/MartinThoma.github.io/_posts/2015-12-03-find-papers.md",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/pelican-bootstrap3/templates/authors.html",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/pelican-bootstrap3/templates/index.html",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/pelican-bootstrap3/templates/page.html",
		"/home/moose/GitHub/pelican-bootstrap3/templates/page.html",
		"/home/moose/GitHub/pelican-bootstrap3/templates/includes/footer.html",
		"/home/moose/GitHub/pelican-bootstrap3/templates/article.html",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/.gitmodules",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/content/training-your-first-network.md",
		"/home/moose/GitHub/MartinThoma.github.io/_plugins/README.md",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/.gitignore",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/06-speed-ups.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Proseminar_Medizin_Vorlage/02-0-evaluation-and-datasets.tex",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Structure.md",
		"/home/moose/GitHub/seminar-pixel-exact-classification/Journals.md",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/2015-12-03-find-papers.md",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/2015-12-03-finding-papers.md",
		"/home/moose/GitHub/MartinThoma.github.io/.gitignore",
		"/home/moose/Desktop/nn-faq.md",
		"/home/moose/GitHub/rossmann/R/README.md",
		"/home/moose/GitHub/rossmann/R/submission.r",
		"/home/moose/GitHub/rossmann/.gitignore",
		"/home/moose/GitHub/rossmann/submission.r",
		"/home/moose/GitHub/rossmann/input/README.md",
		"/home/moose/Desktop/nn-faq.tex",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/content/kaggle-rossmann.md",
		"/home/moose/GitHub/ML-KA/ML-KA.github.io/content/ausserordentlich-1.md",
		"/home/moose/GitHub/MartinThoma.github.io/_drafts/2015-12-01-javascript-a-strange-language.md",
		"/home/moose/GitHub/pst-antrag/Waibel-e-mail.md",
		"/home/moose/GitHub/LaTeX-examples/documents/cv-curriculum-vitae/README.md",
		"/home/moose/GitHub/seminar-pixel-exact-classification/seminar-pixel-exact-classification.sublime-project"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"what is",
			"print",
			"id",
			".id",
			"downloaded_",
			"'",
			"b.",
			"downloaded",
			"size",
			"'",
			"weight",
			"cfm",
			"downloaded_bytes",
			"target_dir",
			"connection",
			"store_dependencies",
			"download(",
			"def download(package_url):",
			"store_dependencies",
			"get_pkg_id_by_name",
			"xps 1",
			"notebookch",
			"local_id",
			"local_width",
			"L",
			"A",
			"lagrage_i",
			"Li",
			"germanDeck",
			"newCard",
			"frenchDeck",
			"frenc",
			"rightChild",
			"leftChild",
			"namesValues",
			"nameVal",
			"qSum",
			"optimalPrices",
			"if ",
			"randint",
			"_isNil",
			"isNil",
			"originalRed",
			"_originalRed",
			"_rightChild",
			"_leftChild",
			"pLine",
			"write_dotfile",
			"get_result",
			"optimal_value",
			"optimalPrices",
			"xrange",
			"self.order",
			"bestPrice",
			"memoized_cut_rodAux",
			"bottomUpCutRod",
			"memoizedCutRod",
			"optimalValue",
			"stdDeviation2",
			"stdDeviation1",
			"getStandardDeviation",
			"getAverage",
			"luDecomposition",
			"createPng",
			"writeDotfile",
			"sum",
			"open",
			"generateCSV",
			"areEqual",
			"getScore",
			"getSpline",
			"niceCubicPolynomial",
			"precomputedTable",
			"execute_queriesPrecompute",
			"lookupTable",
			"queryFile",
			"numberFile",
			"executeQueries",
			"executeQueries2",
			"executeQueries",
			"readNumbers",
			"generate_testset",
			"nr_of_nu",
			"maxNumber",
			"minNumber",
			"generateTestset",
			"nrOfQueries",
			"nrOfNumbers",
			"generateNumbers",
			"generateQueries",
			"map",
			"standardMatrixProduct",
			"all_have_inverseCounterexamples",
			"allHaveInverse",
			"completeCheck",
			"hasInverse",
			"neutralElement",
			"checkInverse",
			"nIsRightNeutral",
			"nIsLeftNeutral",
			"rightNeutrals",
			"leftNeutrals",
			"getNeutralElement",
			"lineTmp",
			"titleLine",
			"printConjunction",
			"increaseConjunction",
			"generateEmptyConjunction",
			"isConjunctionSymmetric",
			"is_associativFlag",
			"is_kommutativFlag",
			"isKommutativ",
			"getResult",
			"getElements",
			"nrOfElements",
			"isAssociativ",
			"baseN",
			"isWellformed",
			"doesPlayerHaveCard",
			"getConflicts",
			"isConflict",
			"accFib",
			"Nm1",
			"Nm2",
			"maxAppend",
			"isIncreasing",
			"args.",
			"Li"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"",
			"    ",
			"\\\\[\\1\\\\]",
			"\\[\\1\\]",
			"\\\\\\\\(\\1\\\\\\\\)",
			"\\\\\\(\\1\\\\\\)",
			"\\\\(\\1\\\\)",
			"\\\\[\\1\\\\]",
			"\\[\\1\\]",
			"    ",
			"\\\\\\(\\1\\\\\\)",
			"\\(\\1\\)",
			"    ",
			"\\n```\\1\\n\\2\\n```\\n",
			"\\n```\\1\\n\\2\\n```",
			"    "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/moose/GitHub/algorithms/PyPI/package_analysis.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12478,
						"regions":
						{
						},
						"selection":
						[
							[
								7472,
								7472
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 4813.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/moose/Desktop/nn-faq.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 770,
						"regions":
						{
						},
						"selection":
						[
							[
								769,
								769
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/moose/GitHub/ML-KA/kaggle-digit-recognizer-tf-tutorial/input/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/moose/GitHub/ML-KA/kaggle-digit-recognizer-tf-tutorial/mnisttf.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5025,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "blog.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"neur",
				"_posts/2015-04-27-neuronale-netze-vorlesung.md"
			],
			[
				"tra",
				"Proseminar_Medizin_Vorlage/03-traditional-approaches.tex"
			],
			[
				"readi",
				"Martin/READING_LIST.md"
			],
			[
				"trad",
				"Proseminar_Medizin_Vorlage/03-traditional-approaches.tex"
			],
			[
				"int",
				"Proseminar_Medizin_Vorlage/01-introduction.tex"
			],
			[
				"quali",
				"Proseminar_Medizin_Vorlage/02-1-quality-measures.tex"
			],
			[
				"marv",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"glo",
				"Proseminar_Medizin_Vorlage/glossary.tex"
			],
			[
				"tax",
				"Proseminar_Medizin_Vorlage/01-taxonomy.tex"
			],
			[
				"tip",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"gloss",
				"Proseminar_Medizin_Vorlage/glossary.tex"
			],
			[
				"tran",
				"Proseminar_Medizin_Vorlage/03-traditional-approaches.tex"
			],
			[
				"marvin",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"re",
				"Martin/READING_LIST.md"
			],
			[
				"enh",
				"Proseminar_Medizin_Vorlage/07-image-enhancement.tex"
			],
			[
				"intro",
				"Proseminar_Medizin_Vorlage/01-introduction.tex"
			],
			[
				"mar",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"tipp",
				"Martin/Tipps_fuer_Marvin.md"
			],
			[
				"glos",
				"Proseminar_Medizin_Vorlage/glossary.tex"
			],
			[
				"qual",
				"Proseminar_Medizin_Vorlage/02-1-quality-measures.tex"
			],
			[
				"probl",
				"Proseminar_Medizin_Vorlage/05-typical-problems.tex"
			],
			[
				"rea",
				"Martin/READING_LIST.md"
			],
			[
				"evalu",
				"Proseminar_Medizin_Vorlage/02-0-evaluation-and-datasets.tex"
			],
			[
				"read",
				"Martin/READING_LIST.md"
			],
			[
				"01-",
				"Proseminar_Medizin_Vorlage/01-introduction.tex"
			],
			[
				"taxo",
				"Proseminar_Medizin_Vorlage/01-taxonomy.tex"
			],
			[
				"reading",
				"Martin/READING_LIST.md"
			],
			[
				"que",
				"QUESTIONS.md"
			],
			[
				"ques",
				"QUESTIONS.md"
			],
			[
				"readin",
				"Martin/READING_LIST.md"
			],
			[
				"javascript",
				"_drafts/2015-12-01-javascript-a-strange-language.md"
			],
			[
				"vorlage.te",
				"Proseminar_Medizin_Vorlage/vorlage.tex"
			],
			[
				"log",
				"Proseminar_Medizin_Vorlage/vorlage.log"
			],
			[
				"make",
				"Proseminar_Medizin_Vorlage/Makefile"
			],
			[
				".gi",
				".gitignore"
			],
			[
				"typ",
				"05-typical-problems.tex"
			],
			[
				"vorl",
				"vorlage.tex"
			],
			[
				"object",
				"cglib/src/rt/object.cpp"
			],
			[
				"transform.",
				"cglib/include/cglib/rt/transform.h"
			],
			[
				"image.h",
				"cglib/include/cglib/core/image.h"
			],
			[
				"epsi",
				"cglib/include/cglib/rt/epsilon.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/GitHub/MartinThoma.github.io/blog.sublime-project"
			],
			[
				"blo",
				"~/GitHub/MartinThoma.github.io/blog.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 281.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
