<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Martin Thoma - Mathematics</title><link href="https://martin-thoma.com/" rel="alternate"></link><link href="https://martin-thoma.com/feeds/mathematics.atom.xml" rel="self"></link><id>https://martin-thoma.com/</id><updated>2017-02-20T20:00:00+01:00</updated><entry><title>The Absolute Value Function</title><link href="https://martin-thoma.com/abs-function/" rel="alternate"></link><published>2017-02-20T20:00:00+01:00</published><updated>2017-02-20T20:00:00+01:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2017-02-20:/abs-function/</id><summary type="html">&lt;p&gt;I was never really taught how to deal with the absolute value function, but
I need it from time to time. So here are a few hints.&lt;/p&gt;
&lt;h2 id="solving-equations"&gt;Solving Equations&lt;/h2&gt;
&lt;p&gt;Lets say you want to solve the equation&lt;/p&gt;
&lt;div class="math"&gt;$$|x - a | = b$$&lt;/div&gt;
&lt;p&gt;for &lt;span class="math"&gt;\(x\)&lt;/span&gt;. Then you need to realize that this equation …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was never really taught how to deal with the absolute value function, but
I need it from time to time. So here are a few hints.&lt;/p&gt;
&lt;h2 id="solving-equations"&gt;Solving Equations&lt;/h2&gt;
&lt;p&gt;Lets say you want to solve the equation&lt;/p&gt;
&lt;div class="math"&gt;$$|x - a | = b$$&lt;/div&gt;
&lt;p&gt;for &lt;span class="math"&gt;\(x\)&lt;/span&gt;. Then you need to realize that this equation is equivalent to two
equations:&lt;/p&gt;
&lt;div class="math"&gt;$$x - a = b \qquad \text{ and } \qquad -(x-a) = b$$&lt;/div&gt;
&lt;p&gt;you can solve both of them independantly. You can get 0, 1 or 2 solutions
when the absolute function is involved:&lt;/p&gt;
&lt;div class="math"&gt;$$x = a + b \qquad \text{ and } \qquad x = a - b$$&lt;/div&gt;
&lt;h2 id="solving-inequalities"&gt;Solving Inequalities&lt;/h2&gt;
&lt;p&gt;Lets say you want to solve the inequality&lt;/p&gt;
&lt;div class="math"&gt;$$|a - x| \leq b$$&lt;/div&gt;
&lt;p&gt;for &lt;span class="math"&gt;\(x\)&lt;/span&gt;. Again, this inequality is equivalent to the two inequalities&lt;/p&gt;
&lt;div class="math"&gt;$$a - x \leq b \qquad \text{ and } \qquad -(a-x) \leq b$$&lt;/div&gt;
&lt;p&gt;You can solve both of them independantly for &lt;span class="math"&gt;\(x\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="math"&gt;$$a - b \leq x \qquad \text{ and } \qquad -x \leq a + b$$&lt;/div&gt;
&lt;p&gt;leading to&lt;/p&gt;
&lt;div class="math"&gt;$$a - b \leq x \leq a + b$$&lt;/div&gt;
&lt;p&gt;Note that both inequalities have to be fulfilled at the same time! Just try it
for &lt;span class="math"&gt;\(a = 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(b = -5\)&lt;/span&gt;!&lt;/p&gt;
&lt;h2 id="derivatives"&gt;Derivatives&lt;/h2&gt;
&lt;p&gt;The function &lt;span class="math"&gt;\(f(x) = |x|\)&lt;/span&gt; is equivalent to &lt;span class="math"&gt;\(f(x) = \sqrt{x^2}\)&lt;/span&gt;. Hence you can
derive the absolute value by deriving the root of the square function of its
argument. And the chain rule, of course:&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
    f'(x) &amp;amp;= (\sqrt{x^2})'\\
          &amp;amp;= \frac{1}{2 \sqrt{x^2}} \cdot (2 x)\\
          &amp;amp;= \frac{x}{\sqrt{x^2}}\\
          &amp;amp;= \frac{x}{|x|}\\
          &amp;amp;= \text{sign}{x}
\end{align}&lt;/div&gt;
&lt;p&gt;Note that the derivative is not devined at 0.&lt;/p&gt;</content><category term="mathematics"></category></entry><entry><title>Estimating Demand</title><link href="https://martin-thoma.com/estimating-demand/" rel="alternate"></link><published>2016-07-15T20:00:00+02:00</published><updated>2016-07-15T20:00:00+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2016-07-15:/estimating-demand/</id><summary type="html">&lt;p&gt;I've just had the problem that I'm helping to plan a group event, where the
participants should all have bikes. There are 170 participants and 80 bikes.
Some of the participants might be able to bring their own bikes. So we asked
them to tell us who can't bring a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've just had the problem that I'm helping to plan a group event, where the
participants should all have bikes. There are 170 participants and 80 bikes.
Some of the participants might be able to bring their own bikes. So we asked
them to tell us who can't bring a bike with them. Only 79 answered. Only 7 of
them can bring their own bike.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How many bikes should we try to organize to be 95% sure that everybody will have a bike?&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="modelling"&gt;Modelling&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X\)&lt;/span&gt; be the random variable which represents the number of people who will
not bring their own bikes. I will assume that the participants bring or bring
not their bikes independent of each other. So have a binomial distribution:&lt;/p&gt;
&lt;div class="math"&gt;$$X \sim Bin(n=91, p=\frac{79-7}{79})$$&lt;/div&gt;
&lt;p&gt;The sample of &lt;span class="math"&gt;\(n=79\)&lt;/span&gt; people who answered will be called &lt;span class="math"&gt;\(S\)&lt;/span&gt;. Let &lt;span class="math"&gt;\(b \in \mathbb{N}_0\)&lt;/span&gt; be our guess of the number of people of those &lt;span class="math"&gt;\(91\)&lt;/span&gt; who do not bring their bikes. The higher we estimate &lt;span class="math"&gt;\(b\)&lt;/span&gt;, the more conservative we are. This means a higher certainty (e.g. 99% instead of 95%) should result in a higher &lt;span class="math"&gt;\(b\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We want to be &lt;span class="math"&gt;\(95\%\)&lt;/span&gt; confident that we have enough bikes.&lt;/p&gt;
&lt;h2 id="the-task"&gt;The task&lt;/h2&gt;
&lt;div class="math"&gt;$$
\begin{align}
P(X \leq b) &amp;amp;\geq 95\%\\
\sum_{i=0}^b \binom{n}{k} p^k {(1-p)}^{n-k} &amp;amp;\geq 95\%\\
b &amp;amp;= \lceil binom.ppf(95\%, n, p) \rceil
\end{align}
$$&lt;/div&gt;
&lt;p&gt;I am lazy with calculating, so lets do it with Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.stats&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;binom&lt;/span&gt;
&lt;span class="n"&gt;confidence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.95&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;91&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;7.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;79&lt;/span&gt;
&lt;span class="n"&gt;binom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ppf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;confidence&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives 87. So we assume only 4 more people will bring their own bike.&lt;/p&gt;</content><category term="statistics"></category><category term="mathematics"></category></entry><entry><title>Distribution of Random Variables when max gets applied</title><link href="https://martin-thoma.com/distribution-of-random-variables-when-max-gets-applied/" rel="alternate"></link><published>2015-01-22T11:07:00+01:00</published><updated>2015-01-22T11:07:00+01:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2015-01-22:/distribution-of-random-variables-when-max-gets-applied/</id><summary type="html">&lt;p&gt;I just wanted to solve an exercise where I had random variables &lt;span class="math"&gt;\(X_1, \dots, X_n\)&lt;/span&gt;
which were all &lt;span class="math"&gt;\(U([0, 1])\)&lt;/span&gt; distributed and &lt;span class="math"&gt;\(Y_n = \max(X_1, \dots, X_n)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;I wondered what the distribution of &lt;span class="math"&gt;\(Y_n\)&lt;/span&gt; is (for big &lt;span class="math"&gt;\(n\)&lt;/span&gt;), so I wanted to plot
it. How do I plot it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just wanted to solve an exercise where I had random variables &lt;span class="math"&gt;\(X_1, \dots, X_n\)&lt;/span&gt;
which were all &lt;span class="math"&gt;\(U([0, 1])\)&lt;/span&gt; distributed and &lt;span class="math"&gt;\(Y_n = \max(X_1, \dots, X_n)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;I wondered what the distribution of &lt;span class="math"&gt;\(Y_n\)&lt;/span&gt; is (for big &lt;span class="math"&gt;\(n\)&lt;/span&gt;), so I wanted to plot
it. How do I plot it? With Python, of course ☺&lt;/p&gt;
&lt;p&gt;Here is the program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy.random&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# Generate Data&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;
    &lt;span class="n"&gt;numbers_a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;numbers_b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;numbers_c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;numbers_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers_a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numbers_b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numbers_c&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="c1"&gt;# Plot data&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers_max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Histogram"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"count"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and here is the plot for &lt;span class="math"&gt;\(n = 2\)&lt;/span&gt;&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2015/01/random-max-uniform-distribution-n-2.png"&gt;&lt;img alt="Plot of the maximum of 2 uniformly distributed variables with 10000 samples" class="" src="../images/2015/01/random-max-uniform-distribution-n-2.png" style="max-width:500px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Plot of the maximum of 2 uniformly distributed variables with 10000 samples&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you increase to &lt;span class="math"&gt;\(n = 3\)&lt;/span&gt; you get:&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2015/01/random-max-uniform-distribution-n-3.png"&gt;&lt;img alt="Plot of the maximum of 3 uniformly distributed variables with 10000 samples" class="" src="../images/2015/01/random-max-uniform-distribution-n-3.png" style="max-width:500px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Plot of the maximum of 3 uniformly distributed variables with 10000 samples&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="improved-version"&gt;Improved version&lt;/h2&gt;
&lt;p&gt;I've also created an improved version which makes nicer plots, but might be
harder to read:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy.random&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Generate Data&lt;/span&gt;
    &lt;span class="n"&gt;numbers_l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;numbers_l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# Plot data&lt;/span&gt;
    &lt;span class="n"&gt;plots&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Build data structure&lt;/span&gt;
        &lt;span class="n"&gt;sublist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numbers_l&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;max_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numbers_l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;numbers_list&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sublist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers_list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;max_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;plot_i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;histtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'step'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;plots&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot_i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Histogram"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"count"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_parser&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ArgumentDefaultsHelpFormatter&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vm"&gt;__doc__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;formatter_class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ArgumentDefaultsHelpFormatter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"-n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"-s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"--samples"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"samples"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"number of samples per Y_n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_parser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you call this script with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./plot-random-variable.py -n &lt;span class="m"&gt;4&lt;/span&gt; --samples &lt;span class="m"&gt;100000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;it gives&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2015/01/random-max-uniform-distribution-n-4.png"&gt;&lt;img alt="Plot of the maximum of 1 - 4 uniformly distributed variables with 10000 samples" class="" src="../images/2015/01/random-max-uniform-distribution-n-4.png" style="max-width:500px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Plot of the maximum of 1 - 4 uniformly distributed variables with 10000 samples&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="see-also"&gt;See also&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_probability_distributions"&gt;List of probability distributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bespokeblog.wordpress.com/2011/07/11/basic-data-plotting-with-matplotlib-part-3-histograms/"&gt;Basic Data Plotting with Matplotlib Part 3: Histograms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Probability Theory"></category><category term="Python"></category><category term="numpy"></category><category term="matplotlib"></category></entry><entry><title>Calculations with quaternions</title><link href="https://martin-thoma.com/calculations-with-quaternions/" rel="alternate"></link><published>2013-09-09T14:45:17+02:00</published><updated>2013-09-09T14:45:17+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-09-09:/calculations-with-quaternions/</id><summary type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Quaternion"&gt;Quaternions&lt;/a&gt; are an expansion of the concept of complex numbers on structures with four (instead of two) components. A quaterion &lt;span class="math"&gt;\(h\)&lt;/span&gt; can be written as a vector or in the form of &lt;span class="math"&gt;\(h = h_0 + ih_1 + j h_2 + kh_3\)&lt;/span&gt;, where &lt;span class="math"&gt;\(i, j\)&lt;/span&gt; and &lt;span class="math"&gt;\(k\)&lt;/span&gt; are related to the &lt;span class="math"&gt;\(i\)&lt;/span&gt; in complex …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Quaternion"&gt;Quaternions&lt;/a&gt; are an expansion of the concept of complex numbers on structures with four (instead of two) components. A quaterion &lt;span class="math"&gt;\(h\)&lt;/span&gt; can be written as a vector or in the form of &lt;span class="math"&gt;\(h = h_0 + ih_1 + j h_2 + kh_3\)&lt;/span&gt;, where &lt;span class="math"&gt;\(i, j\)&lt;/span&gt; and &lt;span class="math"&gt;\(k\)&lt;/span&gt; are related to the &lt;span class="math"&gt;\(i\)&lt;/span&gt; in complex numbers. Accordingly &lt;span class="math"&gt;\(h_0\)&lt;/span&gt; is often called real part and h_1, h_2, h_3 are called imaginary part of a quaternion. &lt;/p&gt;
&lt;p&gt;For &lt;span class="math"&gt;\(i, j\)&lt;/span&gt; and &lt;span class="math"&gt;\(k\)&lt;/span&gt; the following rules are applied:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(i^2 = j^2 = k^2 = -1\)&lt;/span&gt;
and
&lt;span class="math"&gt;\(ijk=-1\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="basic-rules"&gt;Basic rules&lt;/h2&gt;
&lt;p&gt;From these rules follows:&lt;/p&gt;
&lt;div class="math"&gt;\begin{align} ij &amp;amp;= k\\ ji &amp;amp;= -k\\ jk &amp;amp;= i\\ kj &amp;amp;= -i\\ ki &amp;amp;= j\\ ik &amp;amp;= -j \end{align}&lt;/div&gt;
&lt;p&gt;(&lt;a href="http://math.stackexchange.com/q/487245/6876"&gt;proof&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id="multiplication"&gt;Multiplication&lt;/h2&gt;
&lt;p&gt;Now, obviously quaternions multiplication is not commutative: &lt;span class="math"&gt;\(ij = k \neq -k = ji\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;But for numbers in &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;, it is commutative (&lt;a href="http://math.stackexchange.com/q/488271/6876"&gt;proof&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The multiplication is:&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
x  y 
&amp;amp;=( x_0 y_0 - x_1 y_1 - x_2 y_2 - x_3 y_3)\\
&amp;amp;+( x_0 y_1 + x_1 y_0 + x_2 y_3 - x_3 y_2) \mathrm i\\
&amp;amp;+( x_0 y_2 - x_1 y_3 + x_2 y_0 + x_3 y_1) \mathrm j\\
&amp;amp;+( x_0 y_3 + x_1 y_2 - x_2 y_1 + x_3 y_0) \mathrm k
\end{align}&lt;/div&gt;
&lt;h3 id="calculating-multiplicative-inverse"&gt;Calculating multiplicative inverse&lt;/h3&gt;
&lt;p&gt;This means, when you're given an element &lt;span class="math"&gt;\(x = x_0 + x_1 \mathrm i + x_2 \mathrm j + x_3 \mathrm k\)&lt;/span&gt; its inverse &lt;span class="math"&gt;\(y\)&lt;/span&gt; can be calculated by solving the following linear system of equations:&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
x_0 y_0 - x_1 y_1 - x_2 y_2 - x_3 y_3 &amp;amp;= 1\\
x_0 y_1 + x_1 y_0 + x_2 y_3 - x_3 y_2 &amp;amp;= 0\\
x_0 y_2 - x_1 y_3 + x_2 y_0 + x_3 y_1 &amp;amp;= 0\\ 
x_0 y_3 + x_1 y_2 - x_2 y_1 + x_3 y_0 &amp;amp;= 0\\
\end{align}&lt;/div&gt;
&lt;p&gt;which can be written as:&lt;/p&gt;
&lt;div class="math"&gt;$$\left(\begin{array}{cccc|c} 
    x_0 &amp;amp; -x_1 &amp;amp; -x_2 &amp;amp; -x_3 &amp;amp; 1\\
    x_1 &amp;amp;  x_0 &amp;amp; -x_3 &amp;amp;  x_2 &amp;amp; 0\\
    x_2 &amp;amp;  x_3 &amp;amp;  x_0 &amp;amp; -x_1 &amp;amp; 0\\
    x_3 &amp;amp; -x_2 &amp;amp;  x_1 &amp;amp;  x_0 &amp;amp; 0
  \end{array}\right).$$&lt;/div&gt;
&lt;p&gt;According to &lt;a href="http://www.mathworks.de/de/help/aeroblks/quaternioninverse.html"&gt;mathworks&lt;/a&gt; it is &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(y = \frac{x_0 - \mathrm i x_1 - \mathrm j x_2 - \mathrm k x_3}{x_0^2 + x_1^2 + x_2^2 + x_3^2}\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="more_1"&gt;More&lt;/h2&gt;
&lt;h3 id="conjugate"&gt;Conjugate&lt;/h3&gt;
&lt;p&gt;Just like the complex conjugate is defined as&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\overline{z} = a - ib\)&lt;/span&gt; with &lt;span class="math"&gt;\(z=a+ib\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;the conjugate of quaternions is defined as&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\bar x := x_0-x_1\mathrm i-x_2\mathrm j-x_3\mathrm k\)&lt;/span&gt; with &lt;span class="math"&gt;\(x=x_0+x_1\mathrm i+x_2\mathrm j+x_3\mathrm k\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id="rotating-points"&gt;Rotating points&lt;/h3&gt;
&lt;p&gt;Quaternions can be used to rotate points. It works like this:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(x' = q x \overline{q}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Pretty simple, isn't it?&lt;/p&gt;
&lt;p&gt;For example, if you had the point (2,0,0) and you wanted to rotated it by &lt;span class="math"&gt;\(q = (\frac{\sqrt{2}}{2}, 0, \frac{\sqrt{2}}{2}, 0)\)&lt;/span&gt; you would transform (2,0,0) to (2i+0k+0j) and calculate&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
x' &amp;amp;= q x \overline{q}\\
&amp;amp;= (\frac{\sqrt{2}}{2}+\frac{\sqrt{2}}{2} \mathrm j) \cdot 2 \mathrm i \cdot (\frac{\sqrt{2}}{2} - \frac{\sqrt{2}}{2} \mathrm j)\\
&amp;amp;= (\sqrt{2} \mathrm i + \sqrt{2} \mathrm{ji}) \cdot (\frac{\sqrt{2}}{2} - \frac{\sqrt{2}}{2} \mathrm j)\\
&amp;amp;= (\sqrt{2} \mathrm i - \sqrt{2} \mathrm k) \cdot (\frac{\sqrt{2}}{2} - \frac{\sqrt{2}}{2} \mathrm j)\\
&amp;amp;= \mathrm i - \mathrm{ij} - \mathrm k + \mathrm{kj}\\
&amp;amp;= \mathrm{i - k -k - i}\\
&amp;amp;= -2 \mathrm k\\
&amp;amp;\Rightarrow x' = (0,0,-2)
\end{align}&lt;/div&gt;
&lt;h3 id="rotation-matrix-to-quaternion"&gt;Rotation matrix to quaternion&lt;/h3&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(M\)&lt;/span&gt; be a rotation matrix and &lt;span class="math"&gt;\(m_{ij}\)&lt;/span&gt; be an entry of this matrix.&lt;/p&gt;
&lt;h4&gt;General rule&lt;/h4&gt;
&lt;div class="math"&gt;\begin{align}
s &amp;amp;= \frac{1}{2} \sqrt{1 + \sum_{i=1}^3 m_{ii}}\\
x &amp;amp;= \frac{m_{32} - m_{23}}{4s}\\
y &amp;amp;= \frac{m_{13} - m_{31}}{4s}\\
z &amp;amp;= \frac{m_{21} - m_{12}}{4s}
\end{align}&lt;/div&gt;
&lt;p&gt;resulting in the quaternion &lt;span class="math"&gt;\((s, x, y, z)\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;Special rule&lt;/h4&gt;
&lt;p&gt;A rotation matrix&lt;/p&gt;
&lt;div class="math"&gt;$$R_y = \begin{pmatrix}
\cos(\theta)  &amp;amp; 0 &amp;amp; \sin(\theta)\\
0             &amp;amp; 1 &amp;amp; 0\\
-\sin(\theta) &amp;amp; 0 &amp;amp; \cos(\theta)
\end{pmatrix}$$&lt;/div&gt;
&lt;p&gt;can be transformed to a quaternion&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(q = (\cos(\frac{\theta}{2}), \vec u \sin (\frac{\theta}{2}))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(\vec u\)&lt;/span&gt; describes the axis you rotate by.&lt;/p&gt;
&lt;p&gt;In this case &lt;span class="math"&gt;\(R_y\)&lt;/span&gt; is the y-axis, so
&lt;/p&gt;
&lt;div class="math"&gt;$$\vec u = \begin{pmatrix}0\\1\\0\end{pmatrix}$$&lt;/div&gt;
&lt;p&gt;.&lt;/p&gt;</content><category term="quaternions"></category></entry><entry><title>Gauß'sche Zahlen und verwandte Ringe</title><link href="https://martin-thoma.com/gausssche-zahlen-und-verwandte-ringe/" rel="alternate"></link><published>2013-09-04T09:16:41+02:00</published><updated>2013-09-04T09:16:41+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-09-04:/gausssche-zahlen-und-verwandte-ringe/</id><summary type="html">&lt;p&gt;Sei &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}]\)&lt;/span&gt; mit &lt;span class="math"&gt;\(z \in \mathbb{Z}\)&lt;/span&gt; der kleinste Ring, der &lt;span class="math"&gt;\(\mathbb{Z}\)&lt;/span&gt; und &lt;span class="math"&gt;\(\sqrt{z}\)&lt;/span&gt; enth&amp;auml;lt.
Sei &lt;span class="math"&gt;\(A := \{a + b \sqrt{z} | a, b \in \mathbb{Z}\}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Behauptung&lt;/strong&gt;: &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}] = A\)&lt;/span&gt;
&lt;strong&gt;Beweis&lt;/strong&gt;: z.Z.: &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}] \subseteq A\)&lt;/span&gt; und &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sei &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}]\)&lt;/span&gt; mit &lt;span class="math"&gt;\(z \in \mathbb{Z}\)&lt;/span&gt; der kleinste Ring, der &lt;span class="math"&gt;\(\mathbb{Z}\)&lt;/span&gt; und &lt;span class="math"&gt;\(\sqrt{z}\)&lt;/span&gt; enth&amp;auml;lt.
Sei &lt;span class="math"&gt;\(A := \{a + b \sqrt{z} | a, b \in \mathbb{Z}\}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Behauptung&lt;/strong&gt;: &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}] = A\)&lt;/span&gt;
&lt;strong&gt;Beweis&lt;/strong&gt;: z.Z.: &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}] \subseteq A\)&lt;/span&gt; und &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}] \supseteq A\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Zuerst zeige ich &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}] \supseteq A\)&lt;/span&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$\mathbb{Z}[\sqrt{z}]$ enth&amp;auml;lt $\mathbb{Z} \Rightarrow \{a \in \mathbb{Z}\} \subseteq \mathbb{Z}[\sqrt{z}]$&lt;/li&gt;
&lt;li&gt;$\mathbb{Z}[\sqrt{z}]$ enth&amp;auml;lt $\sqrt{z} \Rightarrow \{\sqrt{z}\} \subseteq \mathbb{Z}[\sqrt{z}]$&lt;/li&gt;
&lt;li&gt;$\mathbb{Z}[\sqrt{z}]$ ist ein Ring, also ist $(\mathbb{Z}[\sqrt{z}], +)$ eine abelsche Gruppe.&lt;/li&gt;
&lt;li&gt;$\Rightarrow A \subseteq \mathbb{Z}[\sqrt{z}]$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nun &lt;span class="math"&gt;\(\mathbb{Z}[\sqrt{z}] \subseteq A\)&lt;/span&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\((A, +) \leq (\mathbb{R}, +)\)&lt;/span&gt;, denn (UG-Kriterium)
  &lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(0 = 0 + 0 \sqrt{z} \in A \Rightarrow A \neq \emptyset\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\forall (a+b \sqrt{z}), (c + d \sqrt{z}) \in A:\)&lt;/span&gt; &lt;span class="math"&gt;\((a+b\sqrt{z}) - (c+d\sqrt{z}) = \underbrace{(a-c)}_{\in \mathbb{Z}} + \underbrace{(b-d)}_{\in \mathbb{Z}} \sqrt{z} \in A\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\((A, +)\)&lt;/span&gt; ist abelsch, da &lt;span class="math"&gt;\((\mathbb{R}, +)\)&lt;/span&gt; abelsch ist&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\((A, \cdot)\)&lt;/span&gt; ist Untermonoid von &lt;span class="math"&gt;\((\mathbb{R}, \cdot)\)&lt;/span&gt;, denn
  &lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(1 = 1 + 0 \sqrt{z} \in A\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\forall (a+b \sqrt{z}), (c + d \sqrt{z}) \in A:\)&lt;/span&gt;
&lt;span class="math"&gt;\((a+b\sqrt{z}) \cdot (c+ d\sqrt{z}) = \underbrace{(ac + z bd)}_{\in \mathbb{Z}} + \underbrace{(ad + bc)}_{\in \mathbb{Z}} \sqrt{z} \in A\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Distributivgesetze: Vererben sich aus &lt;span class="math"&gt;\((\mathbb{R}, \cdot)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\Rightarrow \mathbb{Z}[\sqrt{z}] \subseteq A\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\Rightarrow \mathbb{Z}[\sqrt{z}] = A \blacksquare\)&lt;/span&gt;&lt;/p&gt;</content><category term="Algebra"></category></entry><entry><title>How to solve linear congruence equations</title><link href="https://martin-thoma.com/solve-linear-congruence-equations/" rel="alternate"></link><published>2013-09-01T17:43:49+02:00</published><updated>2013-09-01T17:43:49+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-09-01:/solve-linear-congruence-equations/</id><summary type="html">&lt;p&gt;When you have a system of linear congruences like:&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align}
x &amp;amp;\equiv 4 \mod 19\\
x &amp;amp;\equiv 12 \mod 37\\
x &amp;amp;\equiv 14 \mod 43
\end{align}
$$&lt;/div&gt;
&lt;p&gt;you can solve it quite easily.
Johannes Schickling has written a very nice &lt;a href="http://schickling.github.io/algorithms/#/chinese-remainder-theorem"&gt;JavaScript Application&lt;/a&gt; that applies the following algorithm online. I've …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When you have a system of linear congruences like:&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align}
x &amp;amp;\equiv 4 \mod 19\\
x &amp;amp;\equiv 12 \mod 37\\
x &amp;amp;\equiv 14 \mod 43
\end{align}
$$&lt;/div&gt;
&lt;p&gt;you can solve it quite easily.
Johannes Schickling has written a very nice &lt;a href="http://schickling.github.io/algorithms/#/chinese-remainder-theorem"&gt;JavaScript Application&lt;/a&gt; that applies the following algorithm online. I've used his source code to write the following Python code.&lt;/p&gt;
&lt;h2 id="pseudocode"&gt;Pseudocode&lt;/h2&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2013/09/SolveLinearCongruences.png"&gt;&lt;img alt="Solve a system of linear congruences" class="size-full wp-image-76382" src="../images/2013/09/SolveLinearCongruences.png" style="max-width:500px;max-height:247px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Solve a system of linear congruences&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ExtendedEuclideanAlgorithm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;        Calculates gcd(a,b) and a linear combination such that&lt;/span&gt;
&lt;span class="sd"&gt;        gcd(a,b) = a*x + b*y&lt;/span&gt;

&lt;span class="sd"&gt;        As a side effect:&lt;/span&gt;
&lt;span class="sd"&gt;        If gcd(a,b) = 1 = a*x + b*y&lt;/span&gt;
&lt;span class="sd"&gt;        Then x is multiplicative inverse of a modulo b.&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;aO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;

    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lasty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lastx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lastx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lastx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lasty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lasty&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lastx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lasty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"gcd"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;aO&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;lastx&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;bO&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;lasty&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;solveLinearCongruenceEquations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rests&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;modulos&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Solve a system of linear congruences.&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; solveLinearCongruenceEquations([4, 12, 14], [19, 37, 43])&lt;/span&gt;
&lt;span class="sd"&gt;    {'congruence class': 22804, 'modulo': 30229}&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rests&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modulos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;modulos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;mi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resti&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modulos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rests&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;Mi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;mi&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ExtendedEuclideanAlgorithm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mi&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Mi&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;resti&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"congruence class"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"modulo"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;doctest&lt;/span&gt;
    &lt;span class="n"&gt;doctest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testmod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://schickling.github.io/algorithms/#/chinese-remainder-theorem"&gt;Try it online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MartinThoma/LaTeX-examples/tree/master/source-code/Pseudocode/SolveLinearCongruences"&gt;Sources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="mathematics"></category></entry><entry><title>How to calculate the Legendre symbol</title><link href="https://martin-thoma.com/how-to-calculate-the-legendre-symbol/" rel="alternate"></link><published>2013-09-01T13:05:46+02:00</published><updated>2013-09-01T13:05:46+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-09-01:/how-to-calculate-the-legendre-symbol/</id><summary type="html">&lt;h2 id="pseudocode"&gt;Pseudocode&lt;/h2&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2013/09/Calculate-Legendre.png"&gt;&lt;img alt="Pseudocode: Calculate Legendre symbol" class="size-full wp-image-76379" src="../images/2013/09/Calculate-Legendre.png" style="max-width:500px;max-height:528px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Pseudocode: Calculate Legendre symbol&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# http://stackoverflow.com/a/14793082/562769&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;factorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;factors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;#while we can divide …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2 id="pseudocode"&gt;Pseudocode&lt;/h2&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2013/09/Calculate-Legendre.png"&gt;&lt;img alt="Pseudocode: Calculate Legendre symbol" class="size-full wp-image-76379" src="../images/2013/09/Calculate-Legendre.png" style="max-width:500px;max-height:528px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Pseudocode: Calculate Legendre symbol&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# http://stackoverflow.com/a/14793082/562769&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;factorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;factors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;#while we can divide by smaller number, do so&lt;/span&gt;
            &lt;span class="n"&gt;factors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c1"&gt;#p is not necessary prime, but n%p == 0 only for prime numbers&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;factors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;factors&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;calculateLegendre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Calculate the legendre symbol (a, p) with p is prime.&lt;/span&gt;
&lt;span class="sd"&gt;    The result is either -1, 0 or 1&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(3, 29)&lt;/span&gt;
&lt;span class="sd"&gt;    -1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(111, 41) # Beispiel aus dem Skript, S. 114&lt;/span&gt;
&lt;span class="sd"&gt;    -1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(113, 41) # Beispiel aus dem Skript, S. 114&lt;/span&gt;
&lt;span class="sd"&gt;    1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(2, 31)&lt;/span&gt;
&lt;span class="sd"&gt;    1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(5, 31)&lt;/span&gt;
&lt;span class="sd"&gt;    1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(150, 1009) # http://math.stackexchange.com/q/221223/6876&lt;/span&gt;
&lt;span class="sd"&gt;    1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(25, 1009) # http://math.stackexchange.com/q/221223/6876&lt;/span&gt;
&lt;span class="sd"&gt;    1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(2, 1009) # http://math.stackexchange.com/q/221223/6876&lt;/span&gt;
&lt;span class="sd"&gt;    1&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; calculateLegendre(3, 1009) # http://math.stackexchange.com/q/221223/6876&lt;/span&gt;
&lt;span class="sd"&gt;    1&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;calculateLegendre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;factors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;factorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;factors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;calculateLegendre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;calculateLegendre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;calculateLegendre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;doctest&lt;/span&gt;
    &lt;span class="n"&gt;doctest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testmod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="more"&gt;More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MartinThoma/LaTeX-examples/tree/master/documents/eaz"&gt;Rules how to calculate with Legendre symbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MartinThoma/LaTeX-examples/tree/master/source-code/Pseudocode/Calculate-Legendre"&gt;Python and Pseudocode source files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="Algebra"></category></entry><entry><title>How many Homomorphisms exist between Z/nZ and Z/mZ?</title><link href="https://martin-thoma.com/how-many-homomorphisms-exist-between-znz-and-zmz/" rel="alternate"></link><published>2013-08-27T15:26:38+02:00</published><updated>2013-08-27T15:26:38+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-08-27:/how-many-homomorphisms-exist-between-znz-and-zmz/</id><summary type="html">&lt;p&gt;Today I've wondered how many homomorphisms are between the groups &lt;span class="math"&gt;\((\mathbb{Z}/n\mathbb{Z},+)\)&lt;/span&gt; and &lt;span class="math"&gt;\((\mathbb{Z}/m\mathbb{Z},+)\)&lt;/span&gt; with &lt;span class="math"&gt;\(m, n \geq 2\)&lt;/span&gt;. Does it make a difference if I use + or &lt;span class="math"&gt;\(\cdot\)&lt;/span&gt; as operators?&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(M := (\mathbb{Z}/m\mathbb{Z},+)\)&lt;/span&gt; and &lt;span class="math"&gt;\(N := (\mathbb{Z}/n …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I've wondered how many homomorphisms are between the groups &lt;span class="math"&gt;\((\mathbb{Z}/n\mathbb{Z},+)\)&lt;/span&gt; and &lt;span class="math"&gt;\((\mathbb{Z}/m\mathbb{Z},+)\)&lt;/span&gt; with &lt;span class="math"&gt;\(m, n \geq 2\)&lt;/span&gt;. Does it make a difference if I use + or &lt;span class="math"&gt;\(\cdot\)&lt;/span&gt; as operators?&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(M := (\mathbb{Z}/m\mathbb{Z},+)\)&lt;/span&gt; and &lt;span class="math"&gt;\(N := (\mathbb{Z}/n\mathbb{Z},+)\)&lt;/span&gt; be groups and &lt;span class="math"&gt;\(\varphi: M \rightarrow N\)&lt;/span&gt; be a group homomorphism.
Let &lt;span class="math"&gt;\(H := \{\varphi: M \rightarrow N\}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Some fundamental theorems (which I'm not going to prove) are:
&lt;ol class="roman"&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\varphi(M)\)&lt;/span&gt; is a group.&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(K_\varphi := \{m \in M | \varphi(m) = e_N\}\)&lt;/span&gt; is a group.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Lagrange%27s_theorem_(group_theory)"&gt;Lagrange's theorem&lt;/a&gt;: &lt;span class="math"&gt;\(H \leq G \Rightarrow \#H | \# G\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\varphi(1)\)&lt;/span&gt; defines the complete homomorphism as &lt;span class="math"&gt;\(\varphi(n) = \varphi(1 + (n-1)) = \varphi(1) + \varphi(n-1)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\varphi(1) = 0\)&lt;/span&gt; is always a homomorphism (that maps everything to 0).&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;h2 id="m-n"&gt;$m = n$&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt;: &lt;span class="math"&gt;\(n=m \Rightarrow |H|=n\)&lt;/span&gt;
&lt;strong&gt;Proof&lt;/strong&gt;: 
You can map &lt;span class="math"&gt;\(1\)&lt;/span&gt; to &lt;span class="math"&gt;\(n\)&lt;/span&gt; values &lt;span class="math"&gt;\(\stackrel{(IV)}{\Rightarrow}\)&lt;/span&gt; there can't be more than &lt;span class="math"&gt;\(n\)&lt;/span&gt; homomorphisms.&lt;/p&gt;
&lt;p&gt;For every &lt;span class="math"&gt;\(i \in \{0, \dots, n-1\}\)&lt;/span&gt; exists an homomorphism &lt;span class="math"&gt;\(\varphi_i(1) = i\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
\varphi(a) + \varphi(b) &amp;amp;= (ai \mod n) + (bi \mod n)\\
&amp;amp;= ai + bi \mod n\\
&amp;amp;= (a+b)i \mod n\\
&amp;amp;= \varphi(a+b)
\end{align}&lt;/div&gt;
&lt;p&gt;This means, that all of them are actually homomorphisms. For different &lt;span class="math"&gt;\(i,j \in \{0, \dots, n-1\}\)&lt;/span&gt; the homomorphisms &lt;span class="math"&gt;\(\varphi_i\)&lt;/span&gt; and &lt;span class="math"&gt;\(\varphi_j\)&lt;/span&gt; are different. So we really have &lt;span class="math"&gt;\(n\)&lt;/span&gt; homomorphisms &lt;span class="math"&gt;\(\blacksquare\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;My first thought was that it's only a permutation, but
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;&lt;span class="math"&gt;\(m \in M\)&lt;/span&gt;&lt;/th&gt; &lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;&lt;span class="math"&gt;\(\varphi(m) \in N\)&lt;/span&gt;&lt;/th&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;is not a permutation, but a homomorphism.&lt;/p&gt;
&lt;h2 id="distinct-primes"&gt;Distinct primes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt;: &lt;span class="math"&gt;\(n, m \in \mathbb{P}, n \neq m \Rightarrow |H| = 1\)&lt;/span&gt;
&lt;strong&gt;Proof&lt;/strong&gt;: &lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(n, m \in \mathbb{P}, n \neq m\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Part 1&lt;/u&gt;: &lt;span class="math"&gt;\(1 \leq |H|\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This follows directly from (V).&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Part 2&lt;/u&gt;: &lt;span class="math"&gt;\(|H| \leq 1\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We know that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
\stackrel{(I)+(III)}{\Rightarrow}        &amp;amp;\# \varphi(M) | \# N\\
\stackrel{n \in \mathbb{P}}{\Rightarrow} &amp;amp;\# \varphi(M) \in \{1, n\}
\end{align}&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
\stackrel{(II)+(III)}{\Rightarrow}       &amp;amp;\# K_\varphi | \# M\\
\stackrel{m \in \mathbb{P}}{\Rightarrow} &amp;amp;\# K_\varphi \in \{1, m\}
\end{align}&lt;/div&gt;
&lt;p&gt;Case 1: &lt;span class="math"&gt;\(m &amp;gt; n\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now the kernel can't be trivial anymore, so &lt;span class="math"&gt;\(\# K_\varphi = m\)&lt;/span&gt;. This means that everything is mapped to 0. There is only one homomorphism that does so.&lt;/p&gt;
&lt;p&gt;Case 2: &lt;span class="math"&gt;\(m &amp;lt; n\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now the image &lt;span class="math"&gt;\(\varphi(M)\)&lt;/span&gt; can't be all of &lt;span class="math"&gt;\(N\)&lt;/span&gt;. This means &lt;span class="math"&gt;\(\varphi(M) = 1\)&lt;/span&gt; which is again the 0-mapping &lt;span class="math"&gt;\(\blacksquare\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="any-n-and-m"&gt;Any $n$ and $m$&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt;: &lt;span class="math"&gt;\(|H| = gcd(n, m)\)&lt;/span&gt;
&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;First a sanity check: The theorems above are special cases of this theorem.
Let's try to prove it.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(n\)&lt;/span&gt; be composed of primes &lt;span class="math"&gt;\(p_1, \dots, p_x\)&lt;/span&gt; (where &lt;span class="math"&gt;\(p_i = p_j\)&lt;/span&gt; is allowed).
Then &lt;span class="math"&gt;\(N = \mathbb{Z}/n\mathbb{Z} \cong \mathbb{Z}/p_1\mathbb{Z} \times \mathbb{Z}/p_2\mathbb{Z} \times \cdots \times \mathbb{Z}/p_x\mathbb{Z}\)&lt;/span&gt; according to the &lt;a href="http://en.wikipedia.org/wiki/Chinese_remainder_theorem"&gt;Chinese remainder theorem&lt;/a&gt;. The same is true for &lt;span class="math"&gt;\(M\)&lt;/span&gt;. 
As there are &lt;span class="math"&gt;\(p_i\)&lt;/span&gt; homomorphisms between &lt;span class="math"&gt;\(\mathbb{Z}/p_i\mathbb{Z}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbb{Z}/p_j\mathbb{Z}\)&lt;/span&gt; with &lt;span class="math"&gt;\(p_i = p_j\)&lt;/span&gt; and as you can take a &lt;span class="math"&gt;\(p_i\)&lt;/span&gt; from the left and a &lt;span class="math"&gt;\(p_j\)&lt;/span&gt; from the right you can combine the different homomorphisms. So it is basically a combinatoric problem. As everything (except for same primes) will only have 1 homomorphism, you have to multiply the number of homomophisms for each pair &lt;span class="math"&gt;\((p_i, p_j)\)&lt;/span&gt;. But this is simply the gcd &lt;span class="math"&gt;\(\blacksquare\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="mathbbznmathbbz-cdot"&gt;$(\mathbb{Z}/n\mathbb{Z}, \cdot)$&lt;/h2&gt;
&lt;p&gt;What changes when we use &lt;span class="math"&gt;\((\mathbb{Z}/n\mathbb{Z}, \cdot)\)&lt;/span&gt; and &lt;span class="math"&gt;\((\mathbb{Z}/m\mathbb{Z}, \cdot)\)&lt;/span&gt;?&lt;/p&gt;
&lt;p&gt;Well, first of all &lt;span class="math"&gt;\(m\)&lt;/span&gt; and &lt;span class="math"&gt;\(n\)&lt;/span&gt; have to be primes. Otherwise, not every element would have an inverse. Second, you have to exclude 0. Which means we only use units: &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\((\mathbb{Z}/n\mathbb{Z}, \cdot)^\times\)&lt;/span&gt; and &lt;span class="math"&gt;\((\mathbb{Z}/m\mathbb{Z}, \cdot)^\times\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;According to the German Wikipedia (&lt;a href="http://de.wikipedia.org/wiki/Prime_Restklassengruppe"&gt;source&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;$(\mathbb{Z}/n\mathbb{Z})^\times$ is cyclic $:\Leftrightarrow n \in \{p^r, 2p^r | p \in \mathbb{P}, r \in \mathbb{N}_{\geq 1}\}$&lt;/blockquote&gt;
&lt;p&gt;So there is no simple way to reduce it to the same proofs.
But I've created a little &lt;a href="https://gist.github.com/MartinThoma/6353473"&gt;script that automatically finds homomorphisms&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="related"&gt;Related&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://math.stackexchange.com/q/45663/6876"&gt;Quick way to find the number of the group homomorphisms ϕ:Z3&amp;rarr;Z6?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Algebra"></category></entry><entry><title>Why is the stabilizer subgroup a subgroup?</title><link href="https://martin-thoma.com/stabilizer-subgroup-subgroup/" rel="alternate"></link><published>2013-08-26T11:24:54+02:00</published><updated>2013-08-26T11:24:54+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-08-26:/stabilizer-subgroup-subgroup/</id><summary type="html">&lt;div class="definition"&gt;Let $(G, \cdot)$ be a group and $M$ a set. A &lt;strong&gt;group action&lt;/strong&gt; is a function:
$G \circ M \rightarrow M$
that satisfies the following two conditions
&lt;ul&gt;
&lt;li&gt;Identity: $\forall m \in M: e_G \circ m = m$&lt;/li&gt;
&lt;li&gt;Associativity: $\forall g, h \in G, m \in M: (g \cdot h) \circ m …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="definition"&gt;Let $(G, \cdot)$ be a group and $M$ a set. A &lt;strong&gt;group action&lt;/strong&gt; is a function:
$G \circ M \rightarrow M$
that satisfies the following two conditions
&lt;ul&gt;
&lt;li&gt;Identity: $\forall m \in M: e_G \circ m = m$&lt;/li&gt;
&lt;li&gt;Associativity: $\forall g, h \in G, m \in M: (g \cdot h) \circ m= g \circ (h \circ m)$&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="definition"&gt;Let $m \in M$. Then $G_m := \{g \in G | g \circ m = m\}$ is called the &lt;strong&gt;stabilizer&lt;/strong&gt; of $m$.&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt;: &lt;span class="math"&gt;\(G_m\)&lt;/span&gt; is a group&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: &lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(m \in M\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\stackrel{identity}{\Rightarrow}e_G \in G_m\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(a \in G_m\)&lt;/span&gt;. This means, that &lt;span class="math"&gt;\(a \circ m = m\)&lt;/span&gt;. And &lt;span class="math"&gt;\(\exists a^{-1} \in G\)&lt;/span&gt;, as &lt;span class="math"&gt;\(G\)&lt;/span&gt; is a group.
&lt;span class="math"&gt;\(a^{-1} \cdot a = e_G\)&lt;/span&gt;, this means &lt;span class="math"&gt;\((a^{-1} \cdot a) \circ m = m\)&lt;/span&gt;. 
&lt;span class="math"&gt;\(\stackrel{associativity}{\Rightarrow}a^{-1} \circ (a \circ m) = m \Leftrightarrow a^{-1} \circ m = m \Leftrightarrow a^{-1} \in G_m\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(a, b \in G_m\)&lt;/span&gt;. 
Then: &lt;span class="math"&gt;\(a \circ m = m\)&lt;/span&gt; and &lt;span class="math"&gt;\(b \circ m = m\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\Rightarrow a \circ (b \circ m) = m\)&lt;/span&gt;
&lt;span class="math"&gt;\(\stackrel{associativity}{\Rightarrow} (a \cdot b) \circ m = m \Leftrightarrow (a \cdot b) \in G_m \blacksquare\)&lt;/span&gt;&lt;/p&gt;</content><category term="Algebra"></category></entry><entry><title>Why is the intersection of two normal subgroups a normal subgroup?</title><link href="https://martin-thoma.com/intersection-two-normal-subgroups-normal-subgroup//" rel="alternate"></link><published>2013-08-25T18:04:56+02:00</published><updated>2013-08-25T18:04:56+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-08-25:/intersection-two-normal-subgroups-normal-subgroup//</id><summary type="html">&lt;p&gt;Let &lt;span class="math"&gt;\((G, \cdot)\)&lt;/span&gt; be a group and &lt;span class="math"&gt;\(X \lhd G\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y \lhd G\)&lt;/span&gt; be two normal subgroups.&lt;/p&gt;
&lt;p&gt;I will show this in two steps:
&lt;ol&gt;
&lt;li&gt;Show that &lt;span class="math"&gt;\(X \cap Y\)&lt;/span&gt; is a group&lt;/li&gt;
&lt;li&gt;Show that &lt;span class="math"&gt;\(X \cap Y\)&lt;/span&gt; is a normal group of &lt;span class="math"&gt;\((G, \cdot)\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;h2 id="intersection-of-two-subgroups-is-a-subgroup"&gt;Intersection of two subgroups is …&lt;/h2&gt;</summary><content type="html">&lt;p&gt;Let &lt;span class="math"&gt;\((G, \cdot)\)&lt;/span&gt; be a group and &lt;span class="math"&gt;\(X \lhd G\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y \lhd G\)&lt;/span&gt; be two normal subgroups.&lt;/p&gt;
&lt;p&gt;I will show this in two steps:
&lt;ol&gt;
&lt;li&gt;Show that &lt;span class="math"&gt;\(X \cap Y\)&lt;/span&gt; is a group&lt;/li&gt;
&lt;li&gt;Show that &lt;span class="math"&gt;\(X \cap Y\)&lt;/span&gt; is a normal group of &lt;span class="math"&gt;\((G, \cdot)\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;h2 id="intersection-of-two-subgroups-is-a-subgroup"&gt;Intersection of two subgroups is a subgroup&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt;: &lt;span class="math"&gt;\((X \cap Y) \leq G\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X \cap Y\)&lt;/span&gt; is not empty:
&lt;span class="math"&gt;\(e_G \in X \land e_G \in Y \Rightarrow e_G \in (X \cap Y)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X \cap Y\)&lt;/span&gt; has inverse elements. Let &lt;span class="math"&gt;\(a \in (X \cap Y)\)&lt;/span&gt;. As a is in &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(X\)&lt;/span&gt; is a group, &lt;span class="math"&gt;\(a^{-1} \in X\)&lt;/span&gt;. The same is true for &lt;span class="math"&gt;\(Y\)&lt;/span&gt;. So: 
&lt;span class="math"&gt;\(\forall a \in (X \cap Y) \exists a^{-1} \in (X \cap Y): a \cdot a^{-1} = a^{-1} \cdot a = e_G\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\forall a,b \in (X \cap Y): a \cdot b^{-1} \in (X \cap Y)\)&lt;/span&gt;, because both, &lt;span class="math"&gt;\(a\)&lt;/span&gt; and &lt;span class="math"&gt;\(b^{-1}\)&lt;/span&gt; are in &lt;span class="math"&gt;\(X\)&lt;/span&gt;. As &lt;span class="math"&gt;\(X\)&lt;/span&gt; is a group, the result has to be in &lt;span class="math"&gt;\(X\)&lt;/span&gt;. Same argumentation for &lt;span class="math"&gt;\(Y\)&lt;/span&gt;. Then the result is in &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y \blacksquare\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="intersection-of-two-normal-subgroups-is-normal"&gt;Intersection of two normal subgroups is normal&lt;/h2&gt;
&lt;p&gt;First the definition of a normal subgroup:
&lt;div class="definition"&gt;Let &lt;span class="math"&gt;\(N \leq G\)&lt;/span&gt; be a subgroup of &lt;span class="math"&gt;\(G\)&lt;/span&gt;.&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(N \lhd G :\Leftrightarrow \forall n \in N \forall g \in G: g \cdot n \cdot g^{-1} \in N\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt;: &lt;span class="math"&gt;\((X \cap Y) \lhd G\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X \cap Y\)&lt;/span&gt; is a subgroup of &lt;span class="math"&gt;\(G\)&lt;/span&gt; as I have proved above. &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\forall n \in (X \cap Y) \forall g \in G: g \cdot n \cdot g^{-1} \in X\)&lt;/span&gt; and
&lt;span class="math"&gt;\(\forall n \in (X \cap Y) \forall g \in G: g \cdot n \cdot g^{-1} \in Y\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\Rightarrow \forall n \in (X \cap Y) \forall g \in G: g \cdot n \cdot g^{-1} \in (X \cap Y)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\Rightarrow (X \cap Y) \lhd G \blacksquare\)&lt;/span&gt;&lt;/p&gt;</content><category term="mathematics"></category><category term="Algebra"></category></entry><entry><title>Why everybody should know about conditional probability</title><link href="https://martin-thoma.com/why-everybody-should-know-about-conditional-probability/" rel="alternate"></link><published>2013-07-23T15:37:39+02:00</published><updated>2013-07-23T15:37:39+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2013-07-23:/why-everybody-should-know-about-conditional-probability/</id><summary type="html">&lt;p&gt;Probability theory is difficult, but I think everybody should be taught basics in this subject. Why? Because it is relevant for everybody.&lt;/p&gt;
&lt;p&gt;Suppose you go to the doctor to make a cancer test. The test is positive. That means you have cancer, right? Wrong!&lt;/p&gt;
&lt;h2 id="basics"&gt;Basics&lt;/h2&gt;
&lt;p&gt;A probability is a numerical …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Probability theory is difficult, but I think everybody should be taught basics in this subject. Why? Because it is relevant for everybody.&lt;/p&gt;
&lt;p&gt;Suppose you go to the doctor to make a cancer test. The test is positive. That means you have cancer, right? Wrong!&lt;/p&gt;
&lt;h2 id="basics"&gt;Basics&lt;/h2&gt;
&lt;p&gt;A probability is a numerical value in [0, 1] that is assigned to events (or lets rather say outcomes of an experiment). A probability can never be less than zero and never be more than one.&lt;/p&gt;
&lt;p&gt;The sum of all probabilities of all outcomes of one experiment is always 1.&lt;/p&gt;
&lt;p&gt;Example: Your experiment &lt;span class="math"&gt;\(x\)&lt;/span&gt; could be throwing a coin. The outcome of your experiment is either head or tails. So if 
&lt;span class="math"&gt;\(Pr[x = \text{head}] = 0.6\)&lt;/span&gt;, then &lt;span class="math"&gt;\(Pr[x = \text{tail}] = 0.4\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now you might argue that the coin can also stand on its border. This would result in a different model of the situation with different probabilities, e.g.:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(Pr[x = \text{head}] = 0.559\)&lt;/span&gt;, &lt;span class="math"&gt;\(Pr[x = \text{border}] = 0.001\)&lt;/span&gt; and &lt;span class="math"&gt;\(Pr[x = \text{tail}] = 0.4\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Another very important rule is Bayes rule:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(Pr[A|B] = \frac{Pr[B|A] \cdot Pr[A]}{Pr[B]}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This works also with more variables:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(Pr[A|BC] = \frac{Pr[B|AC] \cdot Pr[A|C]}{Pr[B|C]}\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="cancer"&gt;Cancer&lt;/h2&gt;
&lt;p&gt;Lets say the probability of having cancer is &lt;span class="math"&gt;\(Pr[C] = 0.01\)&lt;/span&gt;. This means the probability of not having cancer is &lt;span class="math"&gt;\(Pr[\neg C] = 0.99\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now you have cancer tests. They can either be positive (+) which means they say you have cancer. Or they are negative (-), which means according to the test, you don't have cancer. &lt;/p&gt;
&lt;p&gt;They are not always working as expected. So you get so called "false positives" and "false negatives".&lt;/p&gt;
&lt;p&gt;A false positive is a positive result, while it should be negative. So the test says you have cancer, while you don't have cancer. It is denoted by &lt;span class="math"&gt;\(Pr[+ | \neg C] = 0.2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;A false negative is a negative result, while it should be positive. So the test says you don't have cancer, but you actually have cancer. It is denoted by &lt;span class="math"&gt;\(Pr[- | C] = 0.1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;You should note that &lt;span class="math"&gt;\(Pr[+ | \neg C] + Pr[- | C] = 0.2 + 0.1 = 0.3 \neq 1\)&lt;/span&gt;. Why is this the case? Because the test might also not be related at all to you having cancer.&lt;/p&gt;
&lt;p&gt;But &lt;span class="math"&gt;\(Pr[+ | \neg C] + Pr[- | \neg C]\)&lt;/span&gt; has to be 1 and &lt;span class="math"&gt;\(Pr[+ | C] + Pr[- | C]\)&lt;/span&gt; also has to be one.&lt;/p&gt;
&lt;p&gt;So you can draw this table:&lt;/p&gt;
&lt;table class="wikitable" style="width:auto;"&gt;
&lt;tr&gt;
&lt;th&gt;$Pr[\text{Testresult}|\text{Cancer}]$&lt;/th&gt;
&lt;th&gt;$C$&lt;/th&gt;
&lt;th&gt;$\neg C$&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;$+$&lt;/th&gt;
&lt;td style="background-color:lime;"&gt;$0.9$&lt;/td&gt;
&lt;td style="background-color:red;"&gt;$0.2$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;$-$&lt;/th&gt;
&lt;td style="background-color:red;"&gt;$0.1$&lt;/td&gt;
&lt;td style="background-color:lime;"&gt;$0.8$&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;You can see that the correct results are much more likely than the wrong ones.&lt;/p&gt;
&lt;h2 id="some-intermediate-results"&gt;Some intermediate results&lt;/h2&gt;
&lt;p&gt;How likely is a positive / negative test result?
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
Pr[+] &amp;amp;= Pr[+|C] \cdot Pr[C] + Pr[+| \neg C] \cdot Pr[\neg C] = 0.207\\
Pr[-] &amp;amp;= Pr[-|C] \cdot Pr[C] + Pr[-| \neg C] \cdot Pr[\neg C] = 0.793
\end{align}&lt;/div&gt;
&lt;p&gt;How likely are the combinations? (This time you don't know if you have cancer):&lt;/p&gt;
&lt;table class="wikitable" style="width:auto;"&gt;
&lt;tr&gt;
&lt;th&gt;$Pr[\text{Testresult}, \text{Cancer}]$&lt;/th&gt;
&lt;th&gt;$C$&lt;/th&gt;
&lt;th&gt;$\neg C$&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;$+$&lt;/th&gt;
&lt;td&gt;$0.009$&lt;/td&gt;
&lt;td&gt;$0.198$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;$-$&lt;/th&gt;
&lt;td&gt;$0.001$&lt;/td&gt;
&lt;td&gt;$0.792$&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id="reversing-it"&gt;Reversing it&lt;/h2&gt;
&lt;p&gt;It is quite likely that you would like to know how likely it is that you have cancer. Without a test, you know:&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
Pr[C]      &amp;amp;= 0.01\\
Pr[\neg C] &amp;amp;= 0.99
\end{align}&lt;/div&gt;
&lt;p&gt;Now you get a positive test result. How likely is it that you have cancer? In other words: Calculate &lt;span class="math"&gt;\(Pr[C|+]\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
Pr[C|+]      &amp;amp;= \frac{Pr[C, +]}{Pr[+]} = \frac{0.009}{0.207} = \frac{1}{23} \approx 0.043\\
Pr[\neg C|+] &amp;amp;= 1 - \frac{1}{23} = \frac{22}{23} \approx 0.957\\
Pr[C|-]      &amp;amp;= \frac{0.001}{0.793} = \frac{1}{793} \approx 0.001\\
Pr[\neg C|-] &amp;amp;= 1 - \frac{1}{793} = \frac{792}{793} \approx 0.999
\end{align}&lt;/div&gt;
&lt;p&gt;How would you interpret these results? I'd say:
When you get a positive result you shouldn't really worry. But perhaps you should make other tests.
When you get a negative results you can be very sure that you don't have cancer.&lt;/p&gt;
&lt;h2 id="testing-again"&gt;Testing again&lt;/h2&gt;
&lt;p&gt;A very natural approach to a positive test result might be taking the same test again. How does this influence the probability?&lt;/p&gt;
&lt;p&gt;There are four possibilities what could have happened:
&lt;ul&gt;
&lt;li&gt;You have cancer:
    &lt;ul&gt;
&lt;li&gt;Second test was negative&lt;/li&gt;
&lt;li&gt;Second test was positive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You don't have cancer:
    &lt;ul&gt;
&lt;li&gt;Second test was negative&lt;/li&gt;
&lt;li&gt;Second test was positive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;First of all, I compare some intermediate results&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
Pr[++] &amp;amp;= Pr[C] \cdot Pr[+|C] \cdot Pr[+|C] + Pr[\neg C] \cdot Pr[+|\neg C] \cdot Pr[+|\neg C]\\
       &amp;amp;= 0.477 \neq 0.042849 = 0.207^2 = (Pr[+])^2\\
Pr[+-] &amp;amp;= Pr[C] \cdot Pr[+|C] \cdot Pr[-|C] + Pr[\neg C] \cdot Pr[+|\neg C] \cdot Pr[-|\neg C] \\
       &amp;amp;= 0.01 \cdot 0.9 \cdot 0.1 + 0.99 \cdot 0.2 \cdot 0.8\\
       &amp;amp;= 0.1593\\
Pr[C,+,+] &amp;amp;= Pr[C] \cdot Pr[+ | C]^2 = 0.01 \cdot 0.9^2 = 0.0081\\
Pr[C,+,-] &amp;amp;= Pr[C] \cdot Pr[+ | C] \cdot Pr[-|C] = 0.01 \cdot 0.9 \cdot 0.1 = 0.0009\\
Pr[C|++] &amp;amp;= \frac{Pr[C,+,+]}{Pr[++]} = \frac{0.0081}{0.207^2} = \frac{9}{530} \approx 0.170\\
Pr[C|+-] &amp;amp;= \frac{Pr[C,+,-]}{Pr[+-]} = \frac{0.0009}{0.1593} = \frac{1}{177} \approx 0.006
\end{align}&lt;/div&gt;
&lt;p&gt;Woooha! So if one test says you have cancer, don't worry. When two tests say you have cancer, you have a 17% chance of having cancer.&lt;/p&gt;
&lt;p&gt;On the other hand: One negative and one positive test is better than no test at all, because without a test you have a probability of 0.01 to have cancer. With both tests, you only have a probability of 0.006.&lt;/p&gt;
&lt;h2 id="why-probability-is-important-for-you"&gt;Why probability is important for you&lt;/h2&gt;
&lt;p&gt;As you might have seen, your intuition about probability is wrong. But we hear numbers all the time. It is important for us to understand them, so we should drop our intuition and learn how to use those numbers.&lt;/p&gt;</content><category term="Stochastic"></category><category term="probability"></category></entry><entry><title>When is matrix multiplication commutative?</title><link href="https://martin-thoma.com/when-is-matrix-multiplication-commutative/" rel="alternate"></link><published>2012-07-14T10:49:48+02:00</published><updated>2012-07-14T10:49:48+02:00</updated><author><name>Martin Thoma</name></author><id>tag:martin-thoma.com,2012-07-14:/when-is-matrix-multiplication-commutative/</id><summary type="html">&lt;p&gt;Matrix multiplication in general is not commutative. Here is an example:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(A, B \in R^{2 \times 2}\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$A := \begin{pmatrix}
 1 &amp;amp; 2 \\
 3 &amp;amp; 4
\end{pmatrix}$$&lt;/div&gt;
&lt;div class="math"&gt;$$B := \begin{pmatrix}
 5 &amp;amp; 6 \\
 7 &amp;amp; 8
\end{pmatrix}$$&lt;/div&gt;
&lt;div class="math"&gt;$$A \cdot B = \begin{pmatrix}
 19 &amp;amp; 22 \\
 43 &amp;amp; 50
\end{pmatrix} \neq
\begin{pmatrix …&lt;/div&gt;</summary><content type="html">&lt;p&gt;Matrix multiplication in general is not commutative. Here is an example:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(A, B \in R^{2 \times 2}\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$A := \begin{pmatrix}
 1 &amp;amp; 2 \\
 3 &amp;amp; 4
\end{pmatrix}$$&lt;/div&gt;
&lt;div class="math"&gt;$$B := \begin{pmatrix}
 5 &amp;amp; 6 \\
 7 &amp;amp; 8
\end{pmatrix}$$&lt;/div&gt;
&lt;div class="math"&gt;$$A \cdot B = \begin{pmatrix}
 19 &amp;amp; 22 \\
 43 &amp;amp; 50
\end{pmatrix} \neq
\begin{pmatrix}
 23 &amp;amp; 34 \\
 31 &amp;amp; 46
\end{pmatrix} = B \cdot A$$&lt;/div&gt;
&lt;h2 id="when-is-2x2-matrix-multiplication-commutative"&gt;When is 2x2 matrix multiplication commutative?&lt;/h2&gt;
&lt;div class="math"&gt;$$\begin{pmatrix}
 a &amp;amp; b \\
 c &amp;amp; d
\end{pmatrix} \cdot
\begin{pmatrix}
 e &amp;amp; f \\
 g &amp;amp; h
\end{pmatrix} =
\begin{pmatrix}
ae + bg &amp;amp; af + bh \\
ce + dg &amp;amp; cf + dh
\end{pmatrix}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\begin{pmatrix}
 e &amp;amp; f \\
 g &amp;amp; h
\end{pmatrix} \cdot
\begin{pmatrix}
 a &amp;amp; b \\
 c &amp;amp; d
\end{pmatrix} =
\begin{pmatrix}
ae + cf &amp;amp; be + df \\
ag + ch &amp;amp; bg + dh
\end{pmatrix}$$&lt;/div&gt;
&lt;p&gt;So you get four equations:
&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{eqnarray*}
I)   &amp;amp; ae + bg &amp;amp;= ae + cf &amp;amp;\Leftrightarrow bg = cf \\
II)  &amp;amp; af + bh &amp;amp;= be + df\\
III) &amp;amp; ce + dg &amp;amp;= ag + ch\\
IV)  &amp;amp; cf + dh &amp;amp;= bg + dh &amp;amp;\Leftrightarrow cf = bg
\end{eqnarray*}$$&lt;/div&gt;
&lt;p&gt;You might note that (I) is the same as (IV). So you have those equations:
&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{eqnarray*}
I)   &amp;amp; bg = cf \\
II)  &amp;amp; af + bh &amp;amp;= be + df &amp;amp; \Leftrightarrow f (a - d) = b (e - h)\\
III) &amp;amp; ce + dg &amp;amp;= ag + ch &amp;amp; \Leftrightarrow g (a - d) = c (e - h)
\end{eqnarray*}$$&lt;/div&gt;
&lt;h3 id="case-1-a-d-and-e-h"&gt;Case #1: a != d and e != h&lt;/h3&gt;
&lt;div class="math"&gt;$$\begin{eqnarray*}
I)   &amp;amp; bg          &amp;amp;= cf \\
II)  &amp;amp; \frac{f}{g} &amp;amp;= \frac{b}{c} \Leftrightarrow cf = bg
\end{eqnarray*}$$&lt;/div&gt;
&lt;p&gt;Now (I) and (II) are essentially the same. So we only demand that &lt;span class="math"&gt;\( bg = cf\)&lt;/span&gt; and &lt;span class="math"&gt;\(a \neq d\)&lt;/span&gt; and &lt;span class="math"&gt;\(e \neq h\)&lt;/span&gt; for commutative matrix multiplication of &lt;span class="math"&gt;\(2 \times 2\)&lt;/span&gt; matrices.&lt;/p&gt;
&lt;h3 id="case-21-a-d"&gt;Case #2.1: a == d&lt;/h3&gt;
&lt;div class="math"&gt;\begin{eqnarray*}
I)   &amp;amp; bg &amp;amp;= cf \\
II)  &amp;amp; 0  &amp;amp;= b (e - h)\\
III) &amp;amp; 0  &amp;amp;= c (e - h)
\end{eqnarray*}&lt;/div&gt;
&lt;p&gt;So you end up with:
(&lt;span class="math"&gt;\(e = h\)&lt;/span&gt; and &lt;span class="math"&gt;\(bg = cf\)&lt;/span&gt;) or (&lt;span class="math"&gt;\(b = c = 0\)&lt;/span&gt;)&lt;/p&gt;
&lt;h3 id="case-22-e-h"&gt;Case #2.2: e == h&lt;/h3&gt;
&lt;div class="math"&gt;\begin{eqnarray*}
I)   &amp;amp; bg &amp;amp;= cf \\
II)  &amp;amp; f (a - d) &amp;amp;= 0\\
III) &amp;amp; g (a - d) &amp;amp;= 0
\end{eqnarray*}&lt;/div&gt;
&lt;p&gt;So you end up with:
(&lt;span class="math"&gt;\(a = d\)&lt;/span&gt; and &lt;span class="math"&gt;\(bg = cf\)&lt;/span&gt;) or (&lt;span class="math"&gt;\(f = g = 0\)&lt;/span&gt;)&lt;/p&gt;
&lt;h2 id="special-cases_1"&gt;Special Cases&lt;/h2&gt;
&lt;p&gt;Matrix multiplication is always commutative if ...
&lt;ul&gt;
&lt;li&gt;... one matrix is the &lt;a href="http://en.wikipedia.org/wiki/Identity_matrix"&gt;Identity matrix&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;... one matrix is the &lt;a href="http://en.wikipedia.org/wiki/Zero_matrix"&gt;Zero matrix&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;... both matrices are &lt;span class="math"&gt;\(2 \times 2\)&lt;/span&gt; &lt;a href="http://en.wikipedia.org/wiki/Rotation_matrix"&gt;rotation matrices&lt;/a&gt;. (basically case #2)&lt;/li&gt;
&lt;li&gt;... both matrices are &lt;a href="http://en.wikipedia.org/wiki/Diagonal_matrix"&gt;Diagonal matrices&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;h2 id="simultaneous-diagonalization"&gt;Simultaneous diagonalization&lt;/h2&gt;
&lt;p&gt;Two matrices &lt;span class="math"&gt;\(A, B \in R^{n \times n}\)&lt;/span&gt; are called simultaneous diagonalizable &lt;span class="math"&gt;\(: \Leftrightarrow\)&lt;/span&gt; one matrix &lt;span class="math"&gt;\(S \in R^{n \times n}\)&lt;/span&gt; exists, such that &lt;span class="math"&gt;\(D_A = S^{-1} \cdot A \cdot S\)&lt;/span&gt; and &lt;span class="math"&gt;\(D_B = S^{-1} \cdot B \cdot S\)&lt;/span&gt; with &lt;span class="math"&gt;\(D_A\)&lt;/span&gt; and &lt;span class="math"&gt;\(D_B\)&lt;/span&gt; are diagonal matrices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Statement&lt;/strong&gt;: &lt;span class="math"&gt;\(A, B \in \mathbb{R}^{n \times n}\)&lt;/span&gt; are simultaneous diagonalizable &lt;span class="math"&gt;\(\Rightarrow A \cdot B = B \cdot A\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:
As A and B are simultaneous diagonalizable, a matrix &lt;span class="math"&gt;\(T \in \mathbb{R}^{n \times n}\)&lt;/span&gt; exists, such that &lt;span class="math"&gt;\(D_A = S^{-1} \cdot A \cdot S\)&lt;/span&gt; and &lt;span class="math"&gt;\(D_B = S^{-1} \cdot B \cdot S\)&lt;/span&gt; with &lt;span class="math"&gt;\(D_A\)&lt;/span&gt; and &lt;span class="math"&gt;\(D_B\)&lt;/span&gt; are diagonal matrices.&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
\Rightarrow A \cdot B &amp;amp;= S \cdot D_A S^{-1} \cdot  S \cdot D_B \cdot S^{-1} \\
&amp;amp;= S \cdot D_A \cdot D_B \cdot S^{-1} \\
&amp;amp;= S \cdot D_B \cdot D_A \cdot S^{-1} \\
&amp;amp;= S \cdot D_B \cdot S^{-1} \cdot  S \cdot D_A \cdot S^{-1} \\
&amp;amp;= B \cdot A \blacksquare
\end{align}&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Statement&lt;/strong&gt;: &lt;span class="math"&gt;\(A \cdot B = B \cdot A \nRightarrow A, B \in \mathbb{R}^{n \times n}\)&lt;/span&gt; are simultaneous diagonalizable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: by Counter-Example
&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{pmatrix}0 &amp;amp; 1 \\
0 &amp;amp; 0\end{pmatrix} \cdot
\begin{pmatrix}1 &amp;amp; 0 \\
0 &amp;amp; 1\end{pmatrix} =
\begin{pmatrix}1 &amp;amp; 0 \\
0 &amp;amp; 1\end{pmatrix} \cdot
\begin{pmatrix}0 &amp;amp; 1 \\
0 &amp;amp; 0\end{pmatrix}$$&lt;/div&gt;
&lt;p&gt;
but &lt;/p&gt;
&lt;div class="math"&gt;\begin{pmatrix}0 &amp;amp; 1 \\ 0 &amp;amp; 0\end{pmatrix}&lt;/div&gt;
&lt;p&gt; is not diagonalizable. &lt;span class="math"&gt;\(\blacksquare\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="see-also"&gt;See also&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://math.stackexchange.com/q/170241/6876"&gt;When is matrix multiplication commutative?&lt;/a&gt; on math.stackexchange.com&lt;/li&gt;
&lt;/ul&gt;</content><category term="mathematics"></category><category term="Linear algebra"></category></entry></feed>