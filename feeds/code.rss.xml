<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Martin Thoma - Code</title><link>https://martin-thoma.com/</link><description>A blog about Code, the Web and Cyberculture</description><lastBuildDate>Wed, 06 Sep 2017 20:00:00 +0200</lastBuildDate><item><title>Git Repository Managers</title><link>https://martin-thoma.com/git-repository-managers/</link><description>&lt;p&gt;Git is likely todays most important version control system. It is used for
Linux, actively developed and stable.&lt;/p&gt;
&lt;p&gt;If hosted solutions are ok, I would likely use GitHub. I've used GitHub for
personal projects since 2011 and only experienced one outage of about 1 hour
or so. Besides that, it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 06 Sep 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-09-06:/git-repository-managers/</guid><category>git</category><category>repository</category><category>Gitlab</category></item><item><title>Scrum</title><link>https://martin-thoma.com/scrum/</link><description>&lt;p&gt;Scrum is a design process. In contrast to the &lt;a href="https://en.wikipedia.org/wiki/Waterfall_model"&gt;waterfall model&lt;/a&gt;
it is agile. Other agile design processes are Extreme programming (XP) and
&lt;a href="https://en.wikipedia.org/wiki/Kanban_(development)"&gt;Kanban&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="process"&gt;Process&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Product owner writes a product backlog&lt;/li&gt;
&lt;li&gt;Sprint
        &lt;ol&gt;
&lt;li&gt;Decide which user stories to work on&lt;/li&gt;
&lt;li&gt;Assign points to user stories&lt;/li&gt;
&lt;li&gt;Work on them (build, test, review …&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 30 Aug 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-08-30:/scrum/</guid><category>design process</category></item><item><title>Python Scheduling</title><link>https://martin-thoma.com/python-scheduling/</link><description>&lt;p&gt;Suppose you wanted to build a tool which informs you whenever there is an
update to a couple of websites you're interested in. And lets say the
&lt;code&gt;last-modified&lt;/code&gt; header was usable for this (it is not, but I want to focus on
another problem). So you would need to save …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 21 Aug 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-08-21:/python-scheduling/</guid><category>Python</category><category>Scheduling</category></item><item><title>The JavaScript World</title><link>https://martin-thoma.com/js-world/</link><description>&lt;p&gt;This is likely to grow.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href="https://en.wikipedia.org/wiki/Angular_(application_platform)"&gt;Angular&lt;/a&gt; &lt;span class="label label-default"&gt;Frontend&lt;/span&gt;&lt;span class="label label-info"&gt;Framework&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;MVC TypeScript-based front-end web application framework by Google&lt;/dd&gt;
&lt;dt&gt;&lt;a href="https://en.wikipedia.org/wiki/Express.js"&gt;Express.js&lt;/a&gt; &lt;span class="label label-default"&gt;Backend&lt;/span&gt;&lt;span class="label label-info"&gt;Framework&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;A framework for Node.js designed for building web applications and APIs.&lt;/dd&gt;
&lt;dt&gt;&lt;a href="https://en.wikipedia.org/wiki/Gulp.js"&gt;Gulp.js&lt;/a&gt; &lt;span class="label label-info"&gt;Tool&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;build system / task runner in front-end web development, used for automation of tasks like minification …&lt;/dd&gt;&lt;/dl&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 08 Aug 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-08-08:/js-world/</guid><category>Web Development</category><category>JavaScript</category></item><item><title>Data Serialization</title><link>https://martin-thoma.com/data-serialization/</link><description>&lt;p&gt;Transforming objects you have in memory into a structure which can be stored in
a file is called serialization. Serializing data is important for several
reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Checkpoints&lt;/strong&gt;: Especially in machine learning, it happens often that the
  preprocessing takes long. The longest setup I had so far was something like
  20 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 07 Aug 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-08-07:/data-serialization/</guid><category>Data formats</category><category>Machine Learning</category></item><item><title>Strings</title><link>https://martin-thoma.com/strings/</link><description>&lt;p&gt;Strings are essential for developing applications. Yet they are not covered
(enough) if you study computer science. In this article, I will explain what a
string is, what Unicode, UTF-8, ASCII and encodings are and what their
relationship is.&lt;/p&gt;
&lt;p&gt;Just when I was about to finish this, I found &lt;a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/"&gt;Joel …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 06 Aug 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-08-06:/strings/</guid><category>Strings</category><category>Unicode</category><category>Encoding</category><category>UTF8</category><category>ASCII</category></item><item><title>Docker</title><link>https://martin-thoma.com/docker/</link><description>&lt;p&gt;Docker is a tool which allows developers to make deployment of their software
easier.&lt;/p&gt;
&lt;p&gt;Imagine you have a web service. Then you usually not only have your own
software, but you built it with other libraries. You run it on a web server.
The server needs some configuration, exposes some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 22 Jul 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-07-22:/docker/</guid><category>Docker</category><category>Deployment</category></item><item><title>Defaults of Configuration Files</title><link>https://martin-thoma.com/cfg-files-defaults/</link><description>&lt;p&gt;I often need configuration files in the software I develop. In principle, I can
think of two ways to deal with configuration files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Complete&lt;/strong&gt;: The configuration file has to have all values which will later
  be accessed by the application&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt;: The configuration file might only define some values. In …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 14 May 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-05-14:/cfg-files-defaults/</guid><category>Programming</category><category>Configuration</category><category>Python</category></item><item><title>Git Bundle</title><link>https://martin-thoma.com/git-bundle/</link><description>&lt;p&gt;Sometimes you need to share code via E-Mail / stick. If the code you need to
share is a git repository, creating a bundle is a pretty good way to do it.&lt;/p&gt;
&lt;p&gt;You can create a bundle with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git bundle create repository-name.bundle --all
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can restore the repository by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 02 Apr 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-04-02:/git-bundle/</guid><category>git</category></item><item><title>How to use GLPK</title><link>https://martin-thoma.com/how-to-use-glpk/</link><description>&lt;p&gt;GLPK, the GNU Linear Programming Kit, is a piece of software which solves linear optimization problems. You only have to modell the problem.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install glpk-utils libglpk-dev glpk-doc python-glpk
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="assignment-problem"&gt;Assignment problem&lt;/h2&gt;
&lt;p&gt;The &lt;a href="http://en.wikipedia.org/wiki/Assignment_problem"&gt;assignment problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following file is in the examples of GLPK. Save it as &lt;code&gt;problem.mod …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 23 Feb 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-02-23:/how-to-use-glpk/</guid><category>GLPK</category><category>optimization</category></item><item><title>Matplotlib Markers</title><link>https://martin-thoma.com/matplotlib-markers/</link><description>&lt;p&gt;Matplotlib is a simple Python library to create plots like this one:&lt;/p&gt;
&lt;figure class="wp-caption aligncenter img-thumbnail"&gt;
&lt;img alt="Validation curve of one model with ReLU and one with PReLU" src="../images/2017/02/validation-curve.png" style="width: 512px;"/&gt;
&lt;figcaption class="text-center"&gt;Validation curve of one model with ReLU and one with PReLU&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;As I always have to look up different styles of markers / lines, here is a
little summary.&lt;/p&gt;
&lt;h2 id="simple-plots"&gt;Simple plots&lt;/h2&gt;
&lt;p&gt;Here is some sample code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 12 Feb 2017 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-02-12:/matplotlib-markers/</guid><category>matplotlib</category><category>Python</category></item><item><title>How to use arXiv data</title><link>https://martin-thoma.com/arxiv-data/</link><description>&lt;div class="info"&gt;I've written a draft for this in June 2014 and recently decided to publish it. The article is certainly not of high quality, but I want to keep it as a reminder for some of the problems I ran into and the solutions I've used.&lt;/div&gt;
&lt;p&gt;I've recently talked to my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 06 Jan 2017 06:30:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2017-01-06:/arxiv-data/</guid><category>arXiv</category><category>Amazon</category><category>AWS</category><category>Machine Learning</category></item><item><title>Word Vectors</title><link>https://martin-thoma.com/word-vectors/</link><description>&lt;p&gt;The idea behind word vectors is to represent natural language words like "king"
in &lt;span class="math"&gt;\(\mathbb{R}^n\)&lt;/span&gt; in such a way, that you can do arithmetic. For example,&lt;/p&gt;
&lt;div class="math"&gt;$$\text{vec}(\text{king}) - \text{vec}(\text{man}) + \text{vec}(\text{woman}) \approx \text{vec}(\text{queen})$$&lt;/div&gt;
&lt;p&gt;The Python library &lt;a href="http://radimrehurek.com/gensim/"&gt;&lt;code&gt;gensim&lt;/code&gt;&lt;/a&gt; implements …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 28 Dec 2016 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2016-12-28:/word-vectors/</guid><category>Machine Learning</category><category>Python</category></item><item><title>URL RegEx</title><link>https://martin-thoma.com/url-regex/</link><description>&lt;p&gt;A very short thing to share, but likely valuable: An RegEx for URLs.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mathiasbynens.be/demo/url-regex"&gt;In search of the perfect URL validation regex&lt;/a&gt;
has several positive and negative examples for URLs as well as several regular
expressions to test against those test cases. The only one which matched all
correctly is by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 14 Dec 2016 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2016-12-14:/url-regex/</guid><category>Web Development</category><category>Programming</category><category>RegEx</category></item><item><title>Pythons map, reduce and filter as list comprehensions</title><link>https://martin-thoma.com/python-map-reduce-filter/</link><description>&lt;p&gt;I recently was challenged to re-write Pythons &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;reduce&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt; as
list comprehensions.&lt;/p&gt;
&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;
&lt;p&gt;First of all, I want to make sure you understand what those functions do.
You might also want to have a look at my old article
&lt;a href="https://martin-thoma.com/functional-programming-in-python/"&gt;Functional Programming in Python&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="map"&gt;map&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 05 Jul 2016 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2016-07-05:/python-map-reduce-filter/</guid><category>Python</category></item><item><title>Kalman Filter</title><link>https://martin-thoma.com/kalman-filter/</link><description>&lt;p&gt;The Kalman Filter is an algorithm which helps to find a good state estimation
in the presence of time series data which is uncertain. For example, when you
want to track your current position, you can use GPS. However, GPS is not
totally accurate as you know if you ever …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 21 Jun 2016 14:40:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2016-06-21:/kalman-filter/</guid><category>algorithms</category><category>information fusion</category></item><item><title>Talking with Daemons</title><link>https://martin-thoma.com/talking-with-daemons/</link><description>&lt;p&gt;Everybody knows that training big machine learning models takes a lot of
computing power. However, it takes much less computing power to evaluate the
model for a single instance. One important factor when measuring the time
of a program which only runs one image classification is the time for loading …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 27 Apr 2016 23:26:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2016-04-27:/talking-with-daemons/</guid><category>Python</category><category>RPC</category><category>daemon</category></item><item><title>Analyzing PyPI Data - 2</title><link>https://martin-thoma.com/analyzing-pypi-metadata-2/</link><description>&lt;div class="info"&gt;This is part two of a series. See &lt;a href="//martin-thoma.com/analyzing-pypi-metadata/"&gt;Analyzing PyPI Data&lt;/a&gt; for part one.&lt;/div&gt;
&lt;p&gt;I've recently got a request to expand my analysis of the Python Package Index
commonly known as PyPI. It is a repository of Python packages where everybody
can upload packages; pretty much without any restriction. In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 30 Dec 2015 13:28:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-12-30:/analyzing-pypi-metadata-2/</guid><category>Python</category><category>Community</category><category>SQL</category></item><item><title>Languages for Back Ends</title><link>https://martin-thoma.com/languages-for-back-ends/</link><description>&lt;p&gt;What programming language would I use for the back end of a big, new project in
a startup which wants to offer a web service? Sure, on the client side there is
pretty much only JavaScript (including variants like
&lt;a href="http://en.wikipedia.org/wiki/CoffeeScript"&gt;CoffeeScript&lt;/a&gt; and
&lt;a href="http://en.wikipedia.org/wiki/TypeScript"&gt;TypeScript&lt;/a&gt;) in combination with HTML
and CSS. I've used …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 24 Jun 2015 12:43:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-06-24:/languages-for-back-ends/</guid><category>Programming</category><category>Internet</category><category>Java</category><category>JavaScript</category><category>Go</category><category>Rust</category><category>Python</category><category>PHP</category><category>Hack</category></item><item><title>Python Markov Chain Packages</title><link>https://martin-thoma.com/python-markov-chain-packages/</link><description>&lt;p&gt;Markov Chains are probabilistic processes which depend only on the previous
state and not on the complete history. One common example is a very simple
weather model: Either it is a rainy day (R) or a sunny day (S). On sunny days
you have a probability of 0.8 that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 12 May 2015 20:45:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-05-12:/python-markov-chain-packages/</guid><category>Python</category><category>Markov Chain</category></item><item><title>Python Code Documentation</title><link>https://martin-thoma.com/python-code-documentation/</link><description>&lt;p&gt;Documentating your code is important when you make non-trivial projects. The
standard way to document Python code is with &lt;a href="http://sphinx-doc.org/"&gt;Sphinx&lt;/a&gt;.
You write the documentation files with &lt;a href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"&gt;reStructuredText&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of the most important Sphinx plugins is
&lt;a href="http://sphinx-doc.org/ext/autodoc.html"&gt;autodoc&lt;/a&gt;. This allows you to generate
the documentation of modules, classes and functions automatically by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 08 Apr 2015 19:39:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-04-08:/python-code-documentation/</guid><category>Python</category><category>Documentation</category></item><item><title>Python ctypes</title><link>https://martin-thoma.com/python-ctypes/</link><description>&lt;p&gt;One pseudo-problem people often mention when talking about Python is that
Python is (too) slow. What they seem to forget or don't know is that you can
call C code from Python with &lt;a href="https://docs.python.org/3/library/ctypes.html"&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;.
So you can get almost as fast as you can get with C; you're not limited …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 02 Apr 2015 22:06:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-04-02:/python-ctypes/</guid><category>Python</category><category>Rust</category></item><item><title>The Rust Programming Language</title><link>https://martin-thoma.com/the-rust-programming-language/</link><description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Rust_(programming_language)"&gt;Rust&lt;/a&gt; is a compiled
programming language which aims to replace C++. The designers wanted it to be
similar fast, give the programmer similar fine-grained control over memory
management, but more safety.&lt;/p&gt;
&lt;p&gt;Rust does so by introducing the concept of
&lt;a href="https://doc.rust-lang.org/book/ownership.html"&gt;&lt;em&gt;ownership&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://doc.rust-lang.org/book/references-and-borrowing.html"&gt;&lt;em&gt;borrowing&lt;/em&gt;&lt;/a&gt; and
&lt;a href="https://doc.rust-lang.org/book/lifetimes.html"&gt;&lt;em&gt;lifetimes&lt;/em&gt;&lt;/a&gt; of variables. Rust
also makes sure that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 26 Mar 2015 16:25:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-03-26:/the-rust-programming-language/</guid><category>Rust</category></item><item><title>HTTPie</title><link>https://martin-thoma.com/httpie/</link><description>&lt;p&gt;&lt;a href="http://schickling.me/"&gt;Johannes&lt;/a&gt; recently showed me &lt;a href="https://github.com/jakubroztocil/httpie"&gt;&lt;code&gt;httpie&lt;/code&gt;&lt;/a&gt;. It's a very nice tool for sending HTTP requests.
It is much simpler to use than &lt;code&gt;curl&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo -H pip install httpie
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ http --form POST localhost:5000/api/recording &lt;span class="nv"&gt;recording&lt;/span&gt;&lt;span class="o"&gt;=[{}]&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
HTTP/1.0 &lt;span class="m"&gt;200&lt;/span&gt; OK
Content-Length: &lt;span class="m"&gt;21&lt;/span&gt;
Content-Type: text/html&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 22 Mar 2015 17:50:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-03-22:/httpie/</guid><category>Web Development</category><category>Tools</category></item><item><title>Python and Encodings</title><link>https://martin-thoma.com/python-and-encodings/</link><description>&lt;p&gt;Working with encodings different from ASCII or UTF-8 has always been work
which I don't like. It doesn't feel very constructive to just make Python
read a file / print some output.&lt;/p&gt;
&lt;p&gt;In the following, I will describe some strategies which might help you.&lt;/p&gt;
&lt;h2 id="test-script"&gt;Test script&lt;/h2&gt;
&lt;p&gt;Copy the following text to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 14 Feb 2015 14:28:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-02-14:/python-and-encodings/</guid><category>Python</category><category>Encodings</category><category>UTF8</category></item><item><title>Reading and Writing Files with Python</title><link>https://martin-thoma.com/reading-and-writing-files-with-python/</link><description>&lt;p&gt;Reading (and writing) files with Python is very easy. Here are some
minimalistic code examples for beginners.&lt;/p&gt;
&lt;h2 id="reading"&gt;Reading&lt;/h2&gt;
&lt;p&gt;A very common way to handle the contents of a file is by reading the file
completely and then working with a single big string. The only reason not to
do so …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 12 Feb 2015 22:11:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-02-12:/reading-and-writing-files-with-python/</guid><category>Python</category></item><item><title>Python and CSV</title><link>https://martin-thoma.com/python-csv/</link><description>&lt;p&gt;Python has a very nice module called
&lt;a href="https://docs.python.org/3/library/csv.html"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;
which makes working with &lt;abbr title="comma seperated values"&gt;CSV&lt;/abbr&gt; very
easy. This mini article is only a reminder for me so that I can easily find
how to use it when I forget once again how it is used exactly.&lt;/p&gt;
&lt;h2 id="reading-csv-files"&gt;Reading CSV files&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;future …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 08 Feb 2015 12:48:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-02-08:/python-csv/</guid><category>Python</category><category>CSV</category></item><item><title>Python Shell autocomplete</title><link>https://martin-thoma.com/python-shell-autocomplete/</link><description>&lt;p&gt;One feature I really miss in Pythons interactive shell is tab autocompletion.
Thanks to &lt;a href="http://blog.e-shell.org/221"&gt;blog.e-shell.org&lt;/a&gt; I know how to get it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rlcompleter&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;readline&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_and_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'tab:complete'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CRLF&lt;/span&gt;                      &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LMTP&lt;/span&gt;                      &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__hash__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LMTP_PORT&lt;/span&gt;                 &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OLDSTYLE_AUTH&lt;/span&gt;             &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;
&lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SMTP&lt;/span&gt;                      &lt;span class="n"&gt;smtplib …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 05 Feb 2015 09:58:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-02-05:/python-shell-autocomplete/</guid><category>Python</category><category>Shell</category></item><item><title>Execute Python on Apache2</title><link>https://martin-thoma.com/execute-python-on-apache2/</link><description>&lt;p&gt;I have to run a very simple Python script on an Apache2 web server. These were
the steps with which I made it work:&lt;/p&gt;
&lt;h2 id="find-the-apache2-config"&gt;Find the Apache2 config&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ /usr/sbin/apache2 -V
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is in &lt;code&gt;/etc/apache2/apache2.conf&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="add-cgi"&gt;Add CGI&lt;/h2&gt;
&lt;p&gt;Somewhere in the &lt;code&gt;/etc/apache2/apache2.conf&lt;/code&gt; there is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 01 Feb 2015 15:11:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-02-01:/execute-python-on-apache2/</guid><category>Python</category><category>Apache</category></item><item><title>GUI programming with Python</title><link>https://martin-thoma.com/gui-programming-with-python/</link><description>&lt;p&gt;A graphical user interface (GUI) is essential for applications which should be
used by standard computer users (non-developers, not computer scientists, ...).
However, I have almost no experience with GUI development outside of the web.&lt;/p&gt;
&lt;p&gt;Multiple GUI toolkits exist and the only one I have ever used is
&lt;a href="https://en.wikipedia.org/wiki/Tk_(software)"&gt;Tk&lt;/a&gt; for a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 23 Jan 2015 14:39:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-01-23:/gui-programming-with-python/</guid><category>Python</category><category>GTK</category><category>Qt</category><category>tkinter</category></item><item><title>Regular Expressions with Python</title><link>https://martin-thoma.com/regular-expressions-with-python/</link><description>&lt;p&gt;Python supports regular expressions (RegEx) just as any other general purpose
programming language. This mini article shows two examples how to use them.&lt;/p&gt;
&lt;p&gt;The package which gives RegEx support is called
&lt;a href="https://docs.python.org/3/library/re.html"&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="replacing-spaces"&gt;Replacing Spaces&lt;/h2&gt;
&lt;p&gt;Replace multiple whitespace characters (spaces, tabs, newlines, ...) by a
single space (by &lt;a href="http://stackoverflow.com/a/1546245/562769"&gt;Nasir&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="n"&gt;text …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 20 Jan 2015 13:35:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-01-20:/regular-expressions-with-python/</guid><category>Python</category><category>RegEx</category></item><item><title>Analyzing PyPI Metadata</title><link>https://martin-thoma.com/analyzing-pypi-metadata/</link><description>&lt;div class="info"&gt;This is part one of a series. See &lt;a href="//martin-thoma.com/analyzing-pypi-metadata-2/"&gt;Analyzing PyPI Data - 2&lt;/a&gt; for part two.&lt;/div&gt;
&lt;p&gt;PyPI, the Python Package Index, gives a very crappy but simple interface to
query metadata about its packages. I scrapped all of the packages metadata.
53,533 packages were scrapped (date: 2015-01-18), because I wanted …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 18 Jan 2015 20:19:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2015-01-18:/analyzing-pypi-metadata/</guid><category>Python</category><category>Community</category><category>SQL</category></item><item><title>Packaging with Python</title><link>https://martin-thoma.com/packaging-with-python/</link><description>&lt;div class="info"&gt;This is a quick article I had for quite a while as a draft. It might not be finished or have other problems, but I still want to share it.

I wrote this when I did not know much about packaging.&lt;/div&gt;
&lt;p&gt;The following article is a wrap-up of the talk …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 29 Dec 2014 21:05:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-12-29:/packaging-with-python/</guid><category>Python</category></item><item><title>Cronjobs</title><link>https://martin-thoma.com/cronjobs/</link><description>&lt;p&gt;Cron is a very usefull service in Linux systems that allows periodical
execution of programs.&lt;/p&gt;
&lt;h2 id="terms"&gt;Terms&lt;/h2&gt;
&lt;p&gt;The program that runs other programs periodically is called "&lt;a href="https://en.wikipedia.org/wiki/Cron"&gt;cron&lt;/a&gt;".
The configuration file, that tells cron which programs should be run 
periodically is called "crontab" and located in &lt;code&gt;/etc/crontab&lt;/code&gt;. 
One line in that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 29 Dec 2014 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-12-29:/cronjobs/</guid><category>Cron</category></item><item><title>Subversion</title><link>https://martin-thoma.com/subversion/</link><description>&lt;div class="info"&gt;This is a quick article I had for quite a while as a draft. It might not be finished or have other problems, but I still want to share it.&lt;/div&gt;
&lt;p&gt;Subversion or Apache Subversion or short svn is a is a software versioning and a revision control system. This allows …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 29 Dec 2014 20:57:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-12-29:/subversion/</guid><category>cheat sheet</category></item><item><title>Java Exceptions</title><link>https://martin-thoma.com/java-exceptions/</link><description>&lt;div class="info"&gt;This is a quick article I had for quite a while as a draft. It might not be finished or have other problems, but I still want to share it.&lt;/div&gt;
&lt;h2 id="when-to-use-errors-and-exceptions"&gt;When to use Errors and Exceptions&lt;/h2&gt;
&lt;blockquote&gt;An Error is a subclass of Throwable that indicates serious problems that a reasonable …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 29 Dec 2014 20:39:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-12-29:/java-exceptions/</guid><category>Exception</category><category>Java</category></item><item><title>Critique of Python 3</title><link>https://martin-thoma.com/python-3-critique/</link><description>&lt;p&gt;Consistency is an important quality property of a language. One of my main
points of critic agains PHP was inconsistency (see &lt;a href="//martin-thoma.com/php-a-strange-language/#tocAnchor-1-1"&gt;PHP: A strange language&lt;/a&gt;). Let's see where Python is inconsistant.&lt;/p&gt;
&lt;h2 id="naming"&gt;Naming&lt;/h2&gt;
&lt;h3 id="underscores-or-not"&gt;Underscores or not&lt;/h3&gt;
&lt;p&gt;PEP 8 recommends underscores for functions, if I remember it correctly.
However, some built-in functions …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 22 Nov 2014 17:19:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-11-22:/python-3-critique/</guid><category>Python</category><category>Consistency</category><category>Programming</category></item><item><title>Nyquist–Shannon sampling theorem</title><link>https://martin-thoma.com/nyquist-shannon-sampling-theorem/</link><description>&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem"&gt;Nyquist&amp;ndash;Shannon sampling theorem&lt;/a&gt;
states that you have to sample more than twice the highest frequency.
If you sample less often, you will get aliasing.&lt;/p&gt;
&lt;p&gt;The following videos show what aliasing is:&lt;/p&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="384" src="//www.youtube-nocookie.com/embed/Fy9dJgGCWZI" width="512"&gt;&lt;/iframe&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="288" src="//www.youtube-nocookie.com/embed/A-19SxqZ8Qs" width="512"&gt;&lt;/iframe&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="384" src="//www.youtube-nocookie.com/embed/tmzbFkzImQ4" width="512"&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 18 Nov 2014 17:41:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-11-18:/nyquist-shannon-sampling-theorem/</guid><category>Aliasing</category><category>Sampling</category><category>Signal Processing</category><category>Audio</category></item><item><title>On-line Handwriting Recognition of Mathematical Symbols</title><link>https://martin-thoma.com/write-math/</link><description>&lt;p&gt;On-line handwriting recognition systems get the information how a symbol is
written. In contrast, OCR only gets the pixel map.&lt;/p&gt;
&lt;p&gt;I've created a system that can be used to work with handwriting recognition
systems in my bachelor's thesis.&lt;/p&gt;
&lt;h2 id="write-mathcom"&gt;write-math.com&lt;/h2&gt;
&lt;p&gt;The website &lt;a href="http://write-math.com"&gt;write-math.com&lt;/a&gt; was used to collect data.
The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 17 Oct 2014 12:25:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-10-17:/write-math/</guid><category>Python</category><category>Project Management</category></item><item><title>Start long running processes via SSH</title><link>https://martin-thoma.com/start-long-running-processes-via-ssh/</link><description>&lt;h2 id="screen"&gt;Screen&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/GNU_Screen"&gt;&lt;code&gt;screen&lt;/code&gt;&lt;/a&gt; is a nice tool that can be
used to detach long running processes from the current SSH session - and be able
to get it again!&lt;/p&gt;
&lt;h3 id="basic-usage"&gt;Basic usage&lt;/h3&gt;
&lt;p&gt;You start it with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ screen
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You detach it with &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; and then &lt;kbd&gt;d&lt;/kbd&gt;. After
you pressed this key combination, you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 11 Aug 2014 14:51:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-08-11:/start-long-running-processes-via-ssh/</guid><category>SSH</category><category>screen</category><category>nohup</category></item><item><title>Logging in Python</title><link>https://martin-thoma.com/logging-in-python/</link><description>&lt;p&gt;Python has a nice logging module. You can use it like this:&lt;/p&gt;
&lt;h2 id="stream-output"&gt;Stream output&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(asctime)s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(levelname)s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'This message should go to the log file'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'So …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 01 Aug 2014 21:15:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-08-01:/logging-in-python/</guid><category>Python</category><category>Logging</category></item><item><title>Configuration files in Python</title><link>https://martin-thoma.com/configuration-files-in-python/</link><description>&lt;p&gt;Most interesting programs need some kind of configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Content Management Systems like WordPress blogs, WikiMedia and Joomla need
  to store the information where the database server is (the hostname) and
  how to login (username and password)&lt;/li&gt;
&lt;li&gt;Proprietary software might need to store if the software was registered already
  (the serial …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 27 Jul 2014 15:46:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-07-27:/configuration-files-in-python/</guid><category>Python</category><category>YAML</category><category>JSON</category><category>XML</category><category>INI</category><category>Configuration</category></item><item><title>Append Python PATH</title><link>https://martin-thoma.com/append-python-path/</link><description>&lt;p&gt;Python has a &lt;code&gt;PATH&lt;/code&gt; in which it looks for modules. You can display the current
module PATH with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and apped something to it with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/some/path/to/a/module"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, the clean way would be to write a module and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 20 Jul 2014 14:04:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-07-20:/append-python-path/</guid><category>Python</category><category>PATH</category></item><item><title>Introduction to Octave</title><link>https://martin-thoma.com/introduction-to-octave/</link><description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/GNU_Octave"&gt;GNU Octave&lt;/a&gt; is a really neat
prototyping language for machine learning tasks. It is dynamically typed.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;p&gt;Octave is in the package repositories, so it can be installed by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install octave gnuplot-x11 octave-epstk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and started with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ octave
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Create a file &lt;code&gt;~/.octaverc&lt;/code&gt; in your home folder. Write &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PS1 …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 18 Jul 2014 17:40:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-07-18:/introduction-to-octave/</guid><category>Octave</category><category>Machine Learning</category></item><item><title>Fix zypper readline error</title><link>https://martin-thoma.com/fix-zypper-readline-error/</link><description>&lt;p&gt;In case you work on a openSUSE system and you get the following error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ zypper
zypper: symbol lookup error: /usr/lib/libreadline.so.6: undefined symbol: PC
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you can probably "fix" it by setting the 64 Bit &lt;code&gt;LD_LIBRARY&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/lib64:&lt;span class="nv"&gt;$LD_LIBRARY_PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It worked for me on openSUSE …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 14 Jul 2014 11:34:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-07-14:/fix-zypper-readline-error/</guid><category>openSUSE</category></item><item><title>Linux Commands for Working from home</title><link>https://martin-thoma.com/linux-commands-for-working-from-home/</link><description>&lt;p&gt;This article is just a collection of commands and shortcuts I need quite often.&lt;/p&gt;
&lt;h2 id="creating-a-single-archive-file-from-a-complete-folder"&gt;Creating a single archive file from a complete folder&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tar -zcvf ~/&lt;span class="o"&gt;[&lt;/span&gt;target file&lt;span class="o"&gt;]&lt;/span&gt;.tar.gz &lt;span class="o"&gt;[&lt;/span&gt;folder you want to copy&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="getting-a-file-from-a-remote-host-to-localhost"&gt;Getting a file from a remote host to localhost&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scp &lt;span class="o"&gt;[&lt;/span&gt;username&lt;span class="o"&gt;]&lt;/span&gt;@&lt;span class="o"&gt;[&lt;/span&gt;host&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;path/to/remote/file …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 30 Jun 2014 13:41:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-06-30:/linux-commands-for-working-from-home/</guid><category>SSH</category><category>Shell</category></item><item><title>What are pfiles?</title><link>https://martin-thoma.com/what-are-pfiles/</link><description>&lt;p&gt;pfile is a binary file format that is used in
&lt;abbr title="Automatic Speech Recognition"&gt;ASR&lt;/abbr&gt;
for storing feature vectors and their corresponding labels. 
This file format is sometimes also called
&lt;abbr title="International Computer ScienceInstitute"&gt;ICSI&lt;/abbr&gt;
feature file archive format. But this file format cannot be used for ASR only,
but also for many other &lt;abbr title="Machine Learning"&gt;ML&lt;/abbr&gt; tasks.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The file …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 27 Jun 2014 06:39:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-06-27:/what-are-pfiles/</guid><category>ASR</category><category>pfile</category><category>Machine Learning</category></item><item><title>Classify MNIST with PyBrain</title><link>https://martin-thoma.com/classify-mnist-with-pybrain/</link><description>&lt;p&gt;The &lt;abbr title="Mixed National Institute of Standards and Technology"&gt;MNIST&lt;/abbr&gt;
database is a huge database of handwritten digits that is commonly used for
training, evaluating and comparing classifiers.&lt;/p&gt;
&lt;p&gt;It has a training set of 60,000 instances and a test set of 10,000 instances.
Every instance is a 28 &amp;times; 28 pixel grayscale image.&lt;/p&gt;
&lt;h2 id="the-mnist-format"&gt;The MNIST format&lt;/h2&gt;
&lt;p&gt;MNIST …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 18 Jun 2014 02:31:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-06-18:/classify-mnist-with-pybrain/</guid><category>Python</category><category>PyBrain</category><category>MNIST</category><category>AI</category><category>Machine Learning</category><category>Neural Networks</category><category>Classification</category></item><item><title>HTML5 Template</title><link>https://martin-thoma.com/html5-template/</link><description>&lt;p&gt;Once in a while I need to create simple HTML pages. This is the template
I use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;TODO&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;TODO&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and as a sublime snippet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;snippet&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;content&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;html lang="en"&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;head …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 03 May 2014 20:43:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-05-03:/html5-template/</guid><category>HTML5</category><category>Sublime</category></item><item><title>Prolog</title><link>https://martin-thoma.com/prolog/</link><description>&lt;p&gt;Prolog is a logic programming language.&lt;/p&gt;
&lt;p&gt;Any prolog program consists of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;declaration of facts (also called objects)&lt;/li&gt;
&lt;li&gt;rules about objects and their relationship&lt;/li&gt;
&lt;li&gt;asking "questions" about objects and their relationship&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="first-steps"&gt;First steps&lt;/h2&gt;
&lt;p&gt;At first you have to install &lt;code&gt;swi-prolog&lt;/code&gt;. After installing it, you can call it
with &lt;code&gt;swipl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When you've …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 02 Apr 2014 16:36:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-04-02:/prolog/</guid><category>Prolog</category><category>Programming language</category></item><item><title>TCL</title><link>https://martin-thoma.com/tcl/</link><description>&lt;p&gt;TCL is an imperative, interpreted, dynamically typed programming language. The
&lt;strong&gt;T&lt;/strong&gt;ool &lt;strong&gt;C&lt;/strong&gt;ommand &lt;strong&gt;L&lt;/strong&gt;anguage appeared in 1988. In Tcl, everything is a string.&lt;/p&gt;
&lt;p&gt;It is probably best (and completely?)
described by the &lt;a href="http://wiki.tcl.tk/10259"&gt;12 Rules for Tcl&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="basic-syntax-by-example"&gt;Basic Syntax by Example&lt;/h2&gt;
&lt;p&gt;Some nice comparisons of the syntax of many …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 02 Apr 2014 04:04:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-04-02:/tcl/</guid><category>TCL</category><category>Programming language</category></item><item><title>How to use Sublime Text via SSH</title><link>https://martin-thoma.com/how-to-use-sublime-text-via-ssh/</link><description>&lt;p&gt;Sublime Text is the best editor I have ever used. One argument for vim and against
SSH could be that you can't simply use Sublime Text when you're accessing a
computer via SSH. But there is a way!&lt;/p&gt;
&lt;p&gt;In the following, I will expain the simplest way how to remote …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 20 Mar 2014 21:09:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-03-20:/how-to-use-sublime-text-via-ssh/</guid><category>Sublime Text</category><category>SSH</category></item><item><title>Interpreters and Shells</title><link>https://martin-thoma.com/interpreters-and-shells/</link><description>&lt;p&gt;Should you ever be in the position to write a shell or interpreter I hope you
will make sure the following things work. Take it as a quality guide. They
are ordered by level of importance. The first thing is the most basic one that
has to work, the last …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 08 Mar 2014 11:49:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-03-08:/interpreters-and-shells/</guid><category>Shell</category></item><item><title>Sublime Text</title><link>https://martin-thoma.com/sublime-text/</link><description>&lt;p&gt;Sublime Text is the coolest editor I have ever used. It has a lot of features,
is blazingly fast as I expect it from every editor and has a convenient configuration.
It is available for Linux, Windows and Mac. You can use it for free without any
restrictions as long …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 01 Mar 2014 17:01:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-03-01:/sublime-text/</guid><category>Editor</category><category>Sublime Text</category></item><item><title>Ruby</title><link>https://martin-thoma.com/ruby/</link><description>&lt;p&gt;I'm currently learning Ruby to improve my Jekyll blog. At the moment,
I can't really say if I like Ruby.&lt;/p&gt;
&lt;p&gt;Just like PHP and Python, Ruby is implicitly typed. This means you
can do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# A list&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# An integer&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="c1"&gt;# A floating …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 15 Jan 2014 23:11:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-01-15:/ruby/</guid><category>Ruby</category><category>Programming language</category></item><item><title>Sum of cubed digits riddle</title><link>https://martin-thoma.com/sum-of-cubed-digits-riddle/</link><description>&lt;p&gt;Let &lt;span class="math"&gt;\(N \in \mathbb{N}\)&lt;/span&gt; be a number with digits &lt;span class="math"&gt;\(a_k\)&lt;/span&gt;, where &lt;span class="math"&gt;\(a_0\)&lt;/span&gt; is the least
significant digit and &lt;span class="math"&gt;\(n\)&lt;/span&gt; is the most significant digit.&lt;/p&gt;
&lt;p&gt;Find all numbers with the following property:&lt;/p&gt;
&lt;div class="math"&gt;$$N = \sum_{k=0}^n a_k \cdot 10^k = \sum a_k^3$$&lt;/div&gt;
&lt;h2 id="lower-and-upper-bounds"&gt;Lower and upper bounds&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The lower …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 04 Jan 2014 14:53:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2014-01-04:/sum-of-cubed-digits-riddle/</guid><category>Python</category><category>mathematics</category><category>riddle</category></item><item><title>How to check if a point is inside of a polygon?</title><link>https://martin-thoma.com/how-to-check-if-a-point-is-inside-of-a-polygon/</link><description>&lt;p&gt;Suppose you have a with &lt;span class="math"&gt;\(n\)&lt;/span&gt; sides. This is called a &lt;span class="math"&gt;\(n\)&lt;/span&gt;-glon.&lt;/p&gt;
&lt;h2 id="basics-about-polygones"&gt;Basics about polygones&lt;/h2&gt;
&lt;p&gt;A &lt;span class="math"&gt;\(n\)&lt;/span&gt;-glon can be defined by a list of &lt;span class="math"&gt;\(n\)&lt;/span&gt; points.&lt;/p&gt;
&lt;p&gt;Note that the order is important:&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2013/11/polygon-order.png"&gt;&lt;img alt="The order of points is important for the definition of a polygon" class="" height="233px;" src="../images/2013/11/polygon-order.png" style="max-width:512"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;[A, B, C, D, E, F, G] != [A, B, C, D, F, E, G]&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I will …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 18 Nov 2013 21:36:09 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-11-18:/how-to-check-if-a-point-is-inside-of-a-polygon/</guid><category>Python</category><category>algorithms</category><category>Geometry</category></item><item><title>Formatting Strings in Python</title><link>https://martin-thoma.com/formatting-strings-python/</link><description>&lt;p&gt;In Python, you can use the following ways to format Strings:&lt;/p&gt;
&lt;h2 id="print-directly"&gt;Print directly&lt;/h2&gt;
&lt;p&gt;Printing them directly (just like &lt;a href="http://www.cplusplus.com/reference/cstdio/printf/"&gt;printf in C&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;birthday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;
&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"April"&lt;/span&gt;
&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1990&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"My birthday is the &lt;/span&gt;&lt;span class="si"&gt;%i&lt;/span&gt;&lt;span class="s2"&gt;-th &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;%i&lt;/span&gt;&lt;span class="s2"&gt;."&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;birthday&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first string contains the rules how to format. &lt;code&gt;%i&lt;/code&gt; means …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 07 Nov 2013 20:05:33 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-11-07:/formatting-strings-python/</guid><category>Python</category></item><item><title>Fibonacci, recursion and decorators</title><link>https://martin-thoma.com/fibonacci-recursion-decorators/</link><description>&lt;p&gt;I think everybody who learned something about recursion has seen the Fibonacci sequence:&lt;/p&gt;
&lt;div class="math"&gt;$$
f(n) := \begin{cases}
n               &amp;amp;\text{if } n \leq 1\\
f(n-1) + f(n-2) &amp;amp;\text{otherwise}
\end{cases}
$$&lt;/div&gt;
&lt;p&gt;The simplest solution to get this number is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fib …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 31 Oct 2013 11:08:01 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-10-31:/fibonacci-recursion-decorators/</guid><category>Python</category><category>Fibonacci</category><category>decorators</category></item><item><title>Working with Terminal</title><link>https://martin-thoma.com/working-terminal/</link><description>&lt;p&gt;I've just switched from &lt;a href="https://en.wikipedia.org/wiki/Bash_(Unix_shell)"&gt;Bash&lt;/a&gt;
to &lt;a href="https://en.wikipedia.org/wiki/Z_shell"&gt;ZSH&lt;/a&gt; because of &lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;oh-my-ZSH&lt;/a&gt;. I think this is
just the right time to explain the words Shell, command line, Terminal, Bash
and ZSH.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/GNOME_Terminal"&gt;Terminal&lt;/a&gt; is an terminal
emulator, sometimes also called a "terminal window". I work in a window
environment (MATE) and I want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 22 Oct 2013 10:40:46 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-10-22:/working-terminal/</guid><category>Linux</category><category>Command Line</category><category>Bash</category><category>ZSH</category><category>Terminal</category><category>Shell</category></item><item><title>Part III: Matrix multiplication on multiple cores in Python, Java and C++</title><link>https://martin-thoma.com/part-iii-matrix-multiplication-on-multiple-cores-in-python-java-and-c/</link><description>&lt;div class="info"&gt;This is Part III of my matrix multiplication series. &lt;a href="../matrix-multiplication-python-java-cpp/"&gt;Part I&lt;/a&gt; was about simple matrix multiplication algorithms and &lt;a href="../strassen-algorithm-in-python-java-cpp/"&gt;Part II&lt;/a&gt; was about the Strassen algorithm.
&lt;a href="../part-iii-matrix-multiplication-on-multiple-cores-in-python-java-and-c/"&gt;Part III&lt;/a&gt; is about parallel matrix multiplication.&lt;/div&gt;
&lt;p&gt;We got some pretty interesting results for matrix multiplication so far. Now, I would like to get to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 21 Oct 2013 16:39:35 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-10-21:/part-iii-matrix-multiplication-on-multiple-cores-in-python-java-and-c/</guid><category>Python</category><category>C</category><category>Java</category><category>matrix multiplication</category></item><item><title>Part IV: How to multiply matrix with its transpose in Python and C++</title><link>https://martin-thoma.com/part-iv-how-to-multiply-matrix-with-its-transpose-in-python-and-c/</link><description>&lt;div class="info"&gt;This is Part IV of my matrix multiplication series. Part I was about simple implementations and libraries: &lt;a href="../matrix-multiplication-python-java-cpp/"&gt;Performance of Matrix multiplication in Python, Java and C++&lt;/a&gt;, Part II was about multiplication with the &lt;a href="../strassen-algorithm-in-python-java-cpp/" title="Part II: The Strassen algorithm in Python, Java and C++"&gt;Strassen algorithm&lt;/a&gt; and Part III will be about parallel matrix multiplication (I didn't write it yet).&lt;/div&gt;
&lt;p&gt;You …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 18 Oct 2013 17:41:13 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-10-18:/part-iv-how-to-multiply-matrix-with-its-transpose-in-python-and-c/</guid><category>Python</category><category>C</category></item><item><title>SQL Injections</title><link>https://martin-thoma.com/sql-injections/</link><description>&lt;p&gt;&lt;abbr title="Structured Query Language"&gt;SQL&lt;/abbr&gt; is a language that allows prorammers to access data in databases. Most of the time (always?) you pass your queries in form of strings to the database. In online services it is quite common that the programmer formulates a template and the user fills in variables. &lt;/p&gt;
&lt;h2 id="example-imdb"&gt;Example: IMDb&lt;/h2&gt;
&lt;p&gt;Take …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 11 Jul 2013 19:25:03 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-07-11:/sql-injections/</guid><category>PHP</category><category>Database</category><category>IT-Security</category><category>MySQL</category><category>SQL</category></item><item><title>Graphic filters</title><link>https://martin-thoma.com/graphic-filters/</link><description>&lt;p&gt;I begin to fall in love with JavaScript and HTML5. You can access your Webcam with JS! As an example, I've implemented some graphic filters.&lt;/p&gt;
&lt;h2 id="basics"&gt;Basics&lt;/h2&gt;
&lt;h3 id="html5"&gt;HTML5&lt;/h3&gt;
&lt;p&gt;You need:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas"&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video"&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;This is the bare minimum HTML code you need for valid HTML:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Some title …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 04 Jul 2013 18:21:19 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-07-04:/graphic-filters/</guid><category>HTML5</category><category>JavaScript</category><category>canvas</category></item><item><title>three.js is AWESOME!</title><link>https://martin-thoma.com/threejs-is-awesome/</link><description>&lt;p&gt;I recently discovered &lt;a href="http://en.wikipedia.org/wiki/Three.js"&gt;three.js&lt;/a&gt;, a JavaScript library/API used to create and display animated 3D computer graphics. &lt;/p&gt;
&lt;p&gt;Here are some examples what you can do with three.js. It's pure JavaScript, no Flash required!&lt;/p&gt;
&lt;p&gt;They all worked smooth on my Notebook (&lt;a href="http://ark.intel.com/products/50176/Intel-Pentium-Processor-P6200-3M-Cache-2_13-GHz"&gt;Intel Pentium P6200&lt;/a&gt; processor) with Google Chrome 28 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 01 Jul 2013 16:21:44 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-07-01:/threejs-is-awesome/</guid><category>JavaScript Game</category><category>JavaScript</category><category>three.js</category></item><item><title>Spline interpolation</title><link>https://martin-thoma.com/spline-interpolation/</link><description>&lt;p&gt;Just like before with polynomial interpolation, we have a list of &lt;span class="math"&gt;\(n+1\)&lt;/span&gt; given point &lt;span class="math"&gt;\((x_i, y_i)\)&lt;/span&gt; with &lt;span class="math"&gt;\(x_0 &amp;lt; x_1 &amp;lt; \dots &amp;lt; x_n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We want to find a function that goes through those points and approximates the underlying function that produced that points as good as possible.&lt;/p&gt;
&lt;h2 id="polynomial-interpolation"&gt;Polynomial interpolation&lt;/h2&gt;
&lt;p&gt;The problem …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 30 Jun 2013 13:58:20 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-06-30:/spline-interpolation/</guid><category>numerics</category></item><item><title>Zero Mean Normalized Cross-Correlation</title><link>https://martin-thoma.com/zero-mean-normalized-cross-correlation/</link><description>&lt;figure class="alignright"&gt;
&lt;a href="../images/2013/06/image-correlation.png"&gt;&lt;img alt="Image correlation test image" class="size-full wp-image-71931" src="../images/2013/06/image-correlation.png" style="max-width:128px;max-height:128px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;An image from Tsukuba University. This is one of hundreds of images that you can use to test your algorithms. Link is below.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Zero Mean Normalized Cross-Correlation or shorter ZNCC is an integer you can get when you compare two grayscale images.&lt;/p&gt;
&lt;p&gt;Lets say you have a webcam at a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 28 Jun 2013 22:15:45 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-06-28:/zero-mean-normalized-cross-correlation/</guid><category>KogSys</category></item><item><title>JavaScript: WTF?!?</title><link>https://martin-thoma.com/javascript-wtf/</link><description>&lt;p&gt;JavaScript is THE web programming language. It gets interpreted by your browser and web applications like Google Mail, Google Maps and Facebook make heavy use of them. Almost always, when you see something working smoothly / interactive, you see JavaScript in action.&lt;/p&gt;
&lt;p&gt;But JavaScript has a lot of "features" which are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 26 Jun 2013 22:51:52 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-06-26:/javascript-wtf/</guid><category>JavaScript</category></item><item><title>Polynomial interpolation</title><link>https://martin-thoma.com/polynomial-interpolation/</link><description>&lt;p&gt;Suppose you have a list of &lt;span class="math"&gt;\(n+1\)&lt;/span&gt; given point &lt;span class="math"&gt;\((x_i, y_i)\)&lt;/span&gt; with &lt;span class="math"&gt;\(i \in \{0, \dots, n\}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\forall i,j \in \{0, \dots, n\}: i \neq j \Rightarrow x_i \neq x_j\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;Now you want to find a polynomial &lt;span class="math"&gt;\(\displaystyle p(x) = \sum_{i=0}^n a_i \cdot x …&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 22 Jun 2013 18:41:43 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-06-22:/polynomial-interpolation/</guid><category>mathematics</category><category>numerical analysis</category><category>JavaScript</category><category>numerics</category><category>polynomial</category><category>canvas</category></item><item><title>Structs in C++</title><link>https://martin-thoma.com/structs-in-c/</link><description>&lt;p&gt;I guess this article isn't very interesting, except if you have VERY little experience with C / C++. I only give some complete code examples. If you want some text, you could read &lt;a href="http://en.wikibooks.org/wiki/C%2B%2B_Programming/Structures"&gt;C++ Programming/Structures&lt;/a&gt; (a wikibook).&lt;/p&gt;
&lt;h2 id="point"&gt;Point&lt;/h2&gt;
&lt;h3 id="basic-example"&gt;Basic example&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;double …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 07 Jun 2013 16:25:18 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-06-07:/structs-in-c/</guid><category>CPP</category><category>struct</category></item><item><title>Inverting matrices</title><link>https://martin-thoma.com/inverting-matrices/</link><description>&lt;p&gt;Suppose you have a matrix &lt;span class="math"&gt;\(A \in \mathbb{R}^{n \times n}\)&lt;/span&gt; and you want to invert it. I've already explained &lt;a href="../wie-bestimme-ich-das-inverse-einer-matrix/"&gt;how to invert a matrix&lt;/a&gt; (&lt;a href="http://www.purplemath.com/modules/mtrxinvr.htm"&gt;English explanation&lt;/a&gt;), but I didn't provide any code and / or runtime analysis.&lt;/p&gt;
&lt;h2 id="c-code"&gt;C++ Code&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 02 Jun 2013 14:01:57 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-06-02:/inverting-matrices/</guid><category>mathematics</category><category>Matrix</category></item><item><title>Fractions in C++</title><link>https://martin-thoma.com/fractions-in-cpp/</link><description>&lt;p&gt;Today, I thought I should try to implement a class in C++ that deals with fractions. This is actually quite easy as I'll show you.&lt;/p&gt;
&lt;h2 id="first-some-math"&gt;First some math&lt;/h2&gt;
&lt;h3 id="names"&gt;Names&lt;/h3&gt;
&lt;p&gt;When you have a fraction &lt;span class="math"&gt;\(\frac{a}{b}\)&lt;/span&gt; then &lt;span class="math"&gt;\(a\)&lt;/span&gt; is called &lt;em&gt;numerator&lt;/em&gt; and &lt;span class="math"&gt;\(b\)&lt;/span&gt; is called &lt;em&gt;denominator&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id="operations"&gt;Operations&lt;/h3&gt;
&lt;p&gt;The rules …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 01 Jun 2013 12:00:34 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-06-01:/fractions-in-cpp/</guid><category>CPP</category></item><item><title>Solving linear equations with Gaussian elimination</title><link>https://martin-thoma.com/solving-linear-equations-with-gaussian-elimination/</link><description>&lt;div class="info"&gt;Please note that you should use LU-decomposition to solve linear equations. The following code produces valid solutions, but when your vector $b$ changes you have to do all the work again. LU-decomposition is faster in those cases and not slower in case you don't have to solve equations with the …&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 26 May 2013 00:01:30 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-26:/solving-linear-equations-with-gaussian-elimination/</guid><category>mathematics</category><category>Linear algebra</category><category>CPP</category><category>Python</category><category>PHP</category></item><item><title>Solving equations of upper triangular matrices</title><link>https://martin-thoma.com/solving-equations-of-upper-triangular-matrices/</link><description>&lt;p&gt;Suppose you have an equation like &lt;span class="math"&gt;\(R \cdot x = b\)&lt;/span&gt; with &lt;span class="math"&gt;\(R \in \mathbb{R}^{n \times n}\)&lt;/span&gt; and &lt;span class="math"&gt;\(x,b \in \mathbb{R}^n\)&lt;/span&gt;. &lt;span class="math"&gt;\(b\)&lt;/span&gt; and &lt;span class="math"&gt;\(R\)&lt;/span&gt; are given and you want to solve for &lt;span class="math"&gt;\(x\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;With &lt;span class="math"&gt;\(n=5\)&lt;/span&gt;, the problem could look like this:&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{pmatrix}
2 …&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 20 May 2013 10:41:49 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-20:/solving-equations-of-upper-triangular-matrices/</guid><category>Python</category><category>mathematics</category><category>Matrix</category><category>systems of equations</category><category>numerics</category></item><item><title>Solving equations of lower unitriangular matrices</title><link>https://martin-thoma.com/solving-equations-of-unipotent-lower-triangular-matrices/</link><description>&lt;p&gt;Suppose you have an equation like &lt;span class="math"&gt;\(L \cdot x = b\)&lt;/span&gt; with &lt;span class="math"&gt;\(L \in \mathbb{R}^{n \times n}\)&lt;/span&gt; and &lt;span class="math"&gt;\(x,b \in \mathbb{R}^n\)&lt;/span&gt;. &lt;span class="math"&gt;\(b\)&lt;/span&gt; and &lt;span class="math"&gt;\(L\)&lt;/span&gt; are given and you want to solve for &lt;span class="math"&gt;\(x\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;With &lt;span class="math"&gt;\(n=5\)&lt;/span&gt;, the problem could look like this:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(&lt;div class="math"&gt;\begin{pmatrix}
1 …&lt;/div&gt;&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 19 May 2013 22:15:59 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-19:/solving-equations-of-unipotent-lower-triangular-matrices/</guid><category>Python</category><category>mathematics</category><category>Matrix</category><category>systems of equations</category><category>numerics</category></item><item><title>k-nearest-neighbor classification and k-means - an interactive example</title><link>https://martin-thoma.com/k-nearest-neighbor-classification-interactive-example/</link><description>&lt;iframe height="700px" src="../html5/clustering/clustering.htm" width="98%"&gt;&lt;/iframe&gt;
&lt;p&gt;When the circle has exactly the same number of blue / green dots in it, it will
be green.&lt;/p&gt;
&lt;p&gt;When you move the mouse over the box, everything will be calculated and drawn
again. This leads to flickering with k-means, as k-means includes a random
choice of cluster centers.&lt;/p&gt;
&lt;h2 id="changelog"&gt;Changelog&lt;/h2&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Version …&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 19 May 2013 15:23:11 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-19:/k-nearest-neighbor-classification-interactive-example/</guid><category>HTML5</category><category>KogSys</category><category>k-means</category><category>JavaScript</category><category>canvas</category><category>Clustering</category></item><item><title>The Collatz sequence</title><link>https://martin-thoma.com/the-collatz-sequence/</link><description>&lt;p&gt;The goal of this post is to show you some tools that allow you to visualize data. And I also want to analyze some basic characteristics of the Collatz sequence.&lt;/p&gt;
&lt;p&gt;The Collatz sequences &lt;span class="math"&gt;\((c^n_i)\)&lt;/span&gt; of a number &lt;span class="math"&gt;\(n \in \mathbb{N}_{&amp;gt; 0}\)&lt;/span&gt; is defined like this:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(f:\mathbb …&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 16 May 2013 23:58:45 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-16:/the-collatz-sequence/</guid><category>Visualization</category><category>mathematics</category><category>Project Euler</category></item><item><title>Maps in C++</title><link>https://martin-thoma.com/maps-in-c/</link><description>&lt;p&gt;Maps are one of the most useful datastructures in C++ and there is no excuse for not knowing it.&lt;/p&gt;
&lt;p&gt;Here is a basic example that shows how you can use it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt; // cout&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;phonebook&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Put some stuff …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 16 May 2013 08:52:54 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-16:/maps-in-c/</guid><category>C</category><category>STL</category><category>datastructure</category><category>map</category></item><item><title>Google Code Jam – Round 1C 2013</title><link>https://martin-thoma.com/google-code-jam-round-1c-2013/</link><description>&lt;ul&gt;
&lt;li&gt;Problem A (&lt;a href="https://code.google.com/codejam/contest/2437488/dashboard#s=p0"&gt;Consonants&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 4305/4834 users (89%)&lt;/li&gt;
&lt;li&gt;Large Set: 1551/3778 users (41%)&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Problem B (&lt;a href="https://code.google.com/codejam/contest/2437488/dashboard#s=p1"&gt;Pogo&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 2537/3129 users (81%)&lt;/li&gt;
&lt;li&gt;Large Set: 121/638 users (19%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem C (&lt;a href="https://code.google.com/codejam/contest/2437488/dashboard#s=p2"&gt;The Great Wall&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 934/1260 users (74%)&lt;/li&gt;
&lt;li&gt;Large Set: 74/330 users (22%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;More information is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 12 May 2013 15:01:15 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-12:/google-code-jam-round-1c-2013/</guid><category>Google Code Jam</category></item><item><title>How do hash functions work?</title><link>https://martin-thoma.com/how-do-hash-functions-work/</link><description>&lt;p&gt;Everybody who has written a noticeable amount of Java code should know the method &lt;code&gt;&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode()"&gt;hashCode&lt;/a&gt;()&lt;/code&gt;. But most beginners have difficulties to understand the significance of this little method. The following article gives you one small example with some impressions how much hash functions influence execution time.&lt;/p&gt;
&lt;h2 id="connect-four"&gt;Connect four&lt;/h2&gt;
&lt;blockquote&gt;Connect Four …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 11 May 2013 20:07:07 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-11:/how-do-hash-functions-work/</guid><category>Programming</category><category>hash</category><category>C</category><category>datastructure</category><category>game tree</category><category>hashCode</category></item><item><title>Google Code Jam – Round 1B 2013</title><link>https://martin-thoma.com/google-code-jam-round-1b-2013/</link><description>&lt;ul&gt;
&lt;li&gt;Problem A (&lt;a href="https://code.google.com/codejam/contest/2434486/dashboard#s=p0"&gt;Osmos&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 4668/7250 users (64%)&lt;/li&gt;
&lt;li&gt;Large Set: 3537/4578 users (77%)&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Problem B (&lt;a href="https://code.google.com/codejam/contest/2434486/dashboard#s=p1"&gt;Falling Diamonds&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 952/1882 users (51%)&lt;/li&gt;
&lt;li&gt;Large Set: 525/724 users (73%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem C (&lt;a href="https://code.google.com/codejam/contest/2434486/dashboard#s=p2"&gt;Garbled Email&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 444/896 users (50%)&lt;/li&gt;
&lt;li&gt;Large Set: 255/345 users (74%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;More information are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 05 May 2013 16:15:32 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-05-05:/google-code-jam-round-1b-2013/</guid><category>Python</category><category>Google Code Jam</category></item><item><title>Google Code Jam – Round 1A 2013</title><link>https://martin-thoma.com/google-code-jam-round-1a-2013/</link><description>&lt;ul&gt;
&lt;li&gt;Problem A (&lt;a href="https://code.google.com/codejam/contest/2418487/dashboard#s=p0"&gt;Bullseye&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 5856/6195 users (95%)&lt;/li&gt;
&lt;li&gt;Large Set: 1806/4795 users (38%)&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Problem B (&lt;a href="https://code.google.com/codejam/contest/2418487/dashboard#s=p1"&gt;Manage your Energy&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 2323/3789 users (61%)&lt;/li&gt;
&lt;li&gt;Large Set: 456/1133 users (40%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem C (&lt;a href="https://code.google.com/codejam/contest/2418487/dashboard#s=p2"&gt;Good Luck&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 1366/1774 users (77%)&lt;/li&gt;
&lt;li&gt;Large Set: 31/605 users (5%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;More information …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 27 Apr 2013 07:15:17 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-04-27:/google-code-jam-round-1a-2013/</guid><category>Python</category><category>Google Code Jam</category><category>NumPy</category><category>itertools</category></item><item><title>Google Code Jam Templates</title><link>https://martin-thoma.com/google-code-jam-templates/</link><description>&lt;p&gt;Here are some templates that are a good start for Google Code Jam.&lt;/p&gt;
&lt;h2 id="c"&gt;C++&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* number of test cases */&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;short&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;testcases&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;cin&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//loops for each case&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 26 Apr 2013 11:17:35 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-04-26:/google-code-jam-templates/</guid><category>Python</category><category>PHP</category><category>C</category><category>Java</category><category>Google Code Jam</category></item><item><title>What does #!/usr/bin/python mean?</title><link>https://martin-thoma.com/what-does-usrbinpython-mean/</link><description>&lt;p&gt;You've probably already seen one of the following lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#!/bin/sh
#!/usr/bin/python
#!/usr/bin/python3
#!/usr/bin/env python
#!/usr/bin/perl
#!/usr/bin/php
#!/usr/bin/ruby
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a &lt;a href="http://en.wikipedia.org/wiki/Shebang_%28Unix%29"&gt;shebang&lt;/a&gt;. It's a directive for your command line interpreter how it should execute a script.&lt;/p&gt;
&lt;p&gt;For example …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 16 Apr 2013 18:23:17 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-04-16:/what-does-usrbinpython-mean/</guid><category>Python</category></item><item><title>Colors in Vim</title><link>https://martin-thoma.com/colors-in-vim/</link><description>&lt;h2 id="ansi-color-codes"&gt;ANSI Color codes&lt;/h2&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td style="background: black;color:white"&gt;0&lt;/td&gt;
&lt;td style="background: maroon;color:white"&gt;1&lt;/td&gt;
&lt;td style="background: green;color:white"&gt;2&lt;/td&gt;
&lt;td style="background: olive;color:white"&gt;3&lt;/td&gt;
&lt;td style="background: navy;color:white"&gt;4&lt;/td&gt;
&lt;td style="background: purple;color:white"&gt;5&lt;/td&gt;
&lt;td style="background: teal;color:white"&gt;6&lt;/td&gt;
&lt;td style="background: silver;color:black"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id="256-colors"&gt;256 colors&lt;/h2&gt;
&lt;p&gt;You might need to &lt;code&gt;set t_Co=256&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td style="background:#000000"&gt;x016_Grey0&lt;/td&gt;
&lt;td style="background:#00005f"&gt;x017_NavyBlue&lt;/td&gt;
&lt;td style="background:#000087"&gt;x018_DarkBlue&lt;/td&gt;
&lt;td style="background:#0000af"&gt;x019_Blue3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background:#0000d7"&gt;x020_Blue3&lt;/td&gt;
&lt;td style="background:#0000ff"&gt;x021_Blue1&lt;/td&gt;
&lt;td style="background:#005f00"&gt;x022_DarkGreen&lt;/td&gt;
&lt;td style="background:#005f5f"&gt;x023_DeepSkyBlue4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background:#005f87"&gt;x024_DeepSkyBlue4&lt;/td&gt;
&lt;td style="background:#005faf"&gt;x025_DeepSkyBlue4&lt;/td&gt;
&lt;td style="background:#005fd7"&gt;x026_DodgerBlue3&lt;/td&gt;
&lt;td style="background:#005fff"&gt;x027_DodgerBlue2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background:#008700"&gt;x028_Green4&lt;/td&gt;
&lt;td style="background:#00875f"&gt;x029_SpringGreen4&lt;/td&gt;
&lt;td style="background:#008787"&gt;x030_Turquoise4&lt;/td&gt;
&lt;td style="background:#0087af"&gt;x031_DeepSkyBlue3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background:#0087d7"&gt;x032_DeepSkyBlue3&lt;/td&gt;
&lt;td style="background:#0087ff"&gt;x033_DodgerBlue1&lt;/td&gt;
&lt;td style="background:#00af00"&gt;x034_Green3&lt;/td&gt;
&lt;td style="background:#00af5f"&gt;x035_SpringGreen3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background:#00af87"&gt;x036_DarkCyan&lt;/td&gt;
&lt;td style="background:#00afaf"&gt;x037_LightSeaGreen&lt;/td&gt;
&lt;td style="background:#00afd7"&gt;x038_DeepSkyBlue2&lt;/td&gt;
&lt;td style="background:#00afff"&gt;x039_DeepSkyBlue1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background:#00d700"&gt;x040_Green3&lt;/td&gt;
&lt;td style="background:#00d75f"&gt;x041_SpringGreen3&lt;/td&gt;
&lt;td style="background:#00d787"&gt;x042_SpringGreen2&lt;/td&gt;
&lt;td style="background:#00d7af"&gt;x043_Cyan3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="background:#00d7d7"&gt;x044_DarkTurquoise&lt;/td&gt;
&lt;td style="background:#00d7ff"&gt;x045_Turquoise2 …&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 09 Apr 2013 17:36:31 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-04-09:/colors-in-vim/</guid><category>Vim</category></item><item><title>What does volatile mean?</title><link>https://martin-thoma.com/what-does-volatile-mean/</link><description>&lt;p&gt;You might have read the variable modifier &lt;code&gt;volatile&lt;/code&gt; in C, C++ or in Java. But do you know what it means?&lt;/p&gt;
&lt;h2 id="c-programming-language"&gt;C Programming Language&lt;/h2&gt;
&lt;p&gt;The C Programming language by Kerninghan and Ritchie (second edition) contains this keyword only 13 times. Here are the most important ones:
&lt;blockquote&gt;[...] declaring it volatile announces …&lt;/blockquote&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 20 Mar 2013 22:19:41 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-03-20:/what-does-volatile-mean/</guid><category>C</category><category>Java</category></item><item><title>C Puzzle #3</title><link>https://martin-thoma.com/c-puzzle-3/</link><description>&lt;p&gt;What is the output of the following programm?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;&lt;/p&gt;
&lt;h2 id="short-answer"&gt;Short answer&lt;/h2&gt;
&lt;p&gt;-7&lt;/p&gt;
&lt;h2 id="long-answer"&gt;Long answer&lt;/h2&gt;
&lt;blockquote&gt;Signed integers are two&amp;rsquo;s complement binary values that can be used to represent both positive and negative
integer values.&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a href="http://download.intel.com/products/processor/manual/325462.pdf#page=82"&gt;Intels IA-32 Architectures Software Developer's Manuals …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 16 Mar 2013 14:54:43 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-03-16:/c-puzzle-3/</guid><category>C</category><category>puzzle</category></item><item><title>Check File Systems maximum path depth</title><link>https://martin-thoma.com/check-file-systems-maximum-path-depth/</link><description>&lt;p&gt;Today, I've wondered how deep a path could be at maximum. I've guessed the file system may be limiting that, but perhaps also some tools that I use for basic operations like listing a folders contents would fail before. So I've created the following C-Snippet to test it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 03 Mar 2013 20:51:24 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-03-03:/check-file-systems-maximum-path-depth/</guid><category>C</category><category>OS</category><category>Nautilus</category></item><item><title>How to check if two line segments intersect</title><link>https://martin-thoma.com/how-to-check-if-two-line-segments-intersect/</link><description>&lt;p&gt;You have to line segments and you want to know if they intersect. I'll give you an algorithm how to do it.&lt;/p&gt;
&lt;h2 id="test-cases"&gt;Test cases&lt;/h2&gt;
&lt;p&gt;First of all, we should think about how lines can be arranged:&lt;/p&gt;
&lt;ul class="gallery mw-gallery-traditional" style="max-width: 652px; width: 652px;"&gt;
&lt;li class="gallerybox" style="width: 155px"&gt;
&lt;div style="width: 155px"&gt;
&lt;div class="thumb" style="width: 150px;"&gt;
&lt;div style="margin:21px auto;height: 113px;line-height: 150px;"&gt;
&lt;a class="image" href="../images/2013/02/line-segments-t1.png"&gt;
&lt;img alt="T1: One line is horizontal, one vertical and they cross" src="../images/2013/02/line-segments-t1.png" style="max-width: 120px; max-height: 120px;"&gt;
&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="gallerytext"&gt;Testcase T1&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class="gallerybox" style="width: 155px"&gt;
&lt;div style="width: 155px"&gt;
&lt;div class="thumb" style="width: 150px;"&gt;
&lt;div style="margin:21px auto;height: 113px;line-height: 150px;"&gt;
&lt;a class="image" href="../images/2013/02/line-segments-t2.png"&gt;
&lt;img alt="T2: An endpoint of one line segment is on the other line segment" src="../images/2013/02/line-segments-t2.png" style="max-width: 120px; max-height: 120px;"&gt;
&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="gallerytext"&gt;Testcase T2&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class="gallerybox" style="width: 155px"&gt;
&lt;div style="width: 155px"&gt;
&lt;div class="thumb" style="width: 150px;"&gt;
&lt;div style="margin:21px auto;height: 113px;line-height: 150px;"&gt;
&lt;a class="image" href="../images/2013/02/line-segments-t3.png"&gt;
&lt;img alt="T3: Similar to T4, but with negative coordiantes" src="../images/2013/02/line-segments-t3.png" style="max-width: 120px; max-height: 120px;"&gt;
&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="gallerytext"&gt;Testcase T3&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class="gallerybox" style="width: 155px"&gt;
&lt;div style="width: 155px"&gt;
&lt;div class="thumb" style="width: 150px;"&gt;
&lt;div style="margin:21px auto;height: 113px;line-height: 150px;"&gt;
&lt;a class="image" href="../images/2013/02/line-segments-t4.png"&gt;
&lt;img alt="T4: One line is horizontal, one vertical and an end point is on one line" src="../images/2013/02/line-segments-t4.png" style="max-width: 120px; max-height: 120px;"&gt;
&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="gallerytext"&gt;Testcase T4&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class="gallerybox" style="width: 155px"&gt;
&lt;div style="width: 155px"&gt;
&lt;div class="thumb" style="width: 150px;"&gt;
&lt;div style="margin:21px auto;height: 113px;line-height: 150px;"&gt;
&lt;a class="image" href="../images/2013/02/line-segments-t5.png"&gt;
&lt;img alt="T5: One line is on the other line" src="../images/2013/02/line-segments-t5.png" style="max-width: 120px; max-height: 120px;"&gt;
&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="gallerytext"&gt;Testcase T5&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class="gallerybox" style="width: 155px"&gt;
&lt;div style="width: 155px"&gt;
&lt;div class="thumb" style="width: 150px;"&gt;
&lt;div style="margin:21px auto;height: 113px;line-height: 150px;"&gt;
&lt;a class="image" href="../images/2013/02/line-segments-t6.png"&gt;
&lt;img alt="T6: Line segements are identical" src="../images/2013/02/line-segments-t6.png" style="max-width: 120px; max-height: 120px;"&gt;
&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="gallerytext"&gt;Testcase T6&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li class="gallerybox" style="width: 155px"&gt;
&lt;div style="width: 155px"&gt;
&lt;div class="thumb" style="width: 150px;"&gt;
&lt;div style="margin:21px auto;height: 113px;line-height: 150px;"&gt;
&lt;a class="image" href="../images/2013/02/line-segments-f1.png"&gt;
&lt;img alt="F1: In parallel, close together, one line is completely inside the bounding box of the other line" src="../images/2013/02/line-segments-f1.png" style="max-width: 120px; max-height: 120px;"&gt;
&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="gallerytext"&gt;Testcase F1 …&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 21 Feb 2013 12:19:05 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-02-21:/how-to-check-if-two-line-segments-intersect/</guid><category>Java</category><category>algorithms</category><category>Geometry</category></item><item><title>What can ArrayList / LinkedList do what List can't?</title><link>https://martin-thoma.com/what-can-arraylist-linkedlist-do-what-list-cant/</link><description>&lt;p&gt;I've told my students to write&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;myList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;instead of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;myList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;as this allows them to switch to any Class that implements List without having to change more code.&lt;/p&gt;
&lt;p&gt;This does always make sense, except if you need methods from ArrayList …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 04 Feb 2013 11:50:45 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-02-04:/what-can-arraylist-linkedlist-do-what-list-cant/</guid><category>Java</category></item><item><title>Basic Multithreading in Java</title><link>https://martin-thoma.com/basic-multithreading-in-java/</link><description>&lt;p&gt;A lot of computing power is wasted in many programs as most programs use only one core. If your program is computation intensive, you might want to put some extra effort in your program and make use of this wasted computing power.&lt;/p&gt;
&lt;p&gt;There are two ways to execute your code …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 04 Feb 2013 00:44:11 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-02-04:/basic-multithreading-in-java/</guid><category>Bash</category><category>Java</category><category>Operating Systems</category><category>Multithreading</category></item><item><title>Software Licenses</title><link>https://martin-thoma.com/software-licenses/</link><description>&lt;p&gt;Do you know the difference between MIT-license and BSD license? I don't. And I don't want to read the &lt;a href="http://en.wikipedia.org/wiki/MIT_License"&gt;MIT license&lt;/a&gt;, although it is very short. And I definitely don't want to read the &lt;a href="http://directory.fsf.org/wiki/License:Apache2.0"&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instead of reading all licenses, you could first read &lt;a href="http://www.smashingmagazine.com/2010/03/24/a-short-guide-to-open-source-and-similar-licenses/"&gt;A Short Guide …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 26 Jan 2013 09:59:46 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-01-26:/software-licenses/</guid><category>OpenSource</category><category>license</category></item><item><title>Part II: The Strassen algorithm in Python, Java and C++</title><link>https://martin-thoma.com/strassen-algorithm-in-python-java-cpp/</link><description>&lt;div class="info"&gt;This is Part II of my matrix multiplication series. &lt;a href="../matrix-multiplication-python-java-cpp/"&gt;Part I&lt;/a&gt; was about simple matrix multiplication algorithms and &lt;a href="../strassen-algorithm-in-python-java-cpp/"&gt;Part II&lt;/a&gt; was about the Strassen algorithm.
&lt;a href="../part-iii-matrix-multiplication-on-multiple-cores-in-python-java-and-c/"&gt;Part III&lt;/a&gt; is about parallel matrix multiplication.&lt;/div&gt;
&lt;p&gt;The usual matrix multiplication of two &lt;span class="math"&gt;\(n \times n\)&lt;/span&gt; matrices has a time-complexity of &lt;span class="math"&gt;\(\mathcal{O}(n^3 …&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 23 Jan 2013 10:35:55 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-01-23:/strassen-algorithm-in-python-java-cpp/</guid><category>Python</category><category>C</category><category>Java</category><category>Strassen algorithm</category><category>matrix multiplication</category></item><item><title>Check x-in-a-row for board games</title><link>https://martin-thoma.com/check-x-in-a-row-for-board-games/</link><description>&lt;p&gt;In board games, you have quite often the situation that you want to check something in different directions. Most of the time, the implementation I see for situations like this is very redundant and prone to off-by-one errors. Some simple ideas can improve the quality of codes (code that is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 21 Jan 2013 21:59:28 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-01-21:/check-x-in-a-row-for-board-games/</guid><category>Programming</category><category>short-circuit evaluation</category></item><item><title>Cyclic references kill Nautilus</title><link>https://martin-thoma.com/cyclic-references-kill-nautilus/</link><description>&lt;p&gt;I just wanted to answer an assignment and noticed that cyclic references kill Nautilus.&lt;/p&gt;
&lt;h2 id="what-i-did"&gt;What I did&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir testFolder
&lt;span class="nb"&gt;cd&lt;/span&gt; testFolder
touch testFile.txt
ln -s testFile.txt mySoftlink
rm testFile.txt
ln -s mySoftlink testFile.txt
ls -l
total &lt;span class="m"&gt;0&lt;/span&gt;
lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; moose moose &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;2013&lt;/span&gt;-01-20 &lt;span class="m"&gt;21&lt;/span&gt;:20 …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 20 Jan 2013 21:46:34 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-01-20:/cyclic-references-kill-nautilus/</guid><category>OS</category><category>Operating Systems</category><category>GNOME</category><category>file manager</category><category>Bug</category></item><item><title>How to sort with Java</title><link>https://martin-thoma.com/how-to-sort-with-java/</link><description>&lt;p&gt;Sorting is a very basic task that every programmer should be able to solve. In Python, you have sort and sorted. In C++, you can use &lt;a href="../cpp-operator-overloading/#Sorting"&gt;operator overloading&lt;/a&gt;. I'll now tell you how to do basic sorting with Java. I will not write about &lt;a href="http://www.codinghorror.com/blog/2007/12/sorting-for-humans-natural-sort-order.html"&gt;natural language sorting&lt;/a&gt; or language-aware sorting …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 08 Jan 2013 21:49:47 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2013-01-08:/how-to-sort-with-java/</guid><category>Programming</category><category>Java</category><category>sorting</category></item><item><title>C++ Preprocessor Snippets</title><link>https://martin-thoma.com/c-preprocessor-snippets/</link><description>&lt;p&gt;The C++ Preprocessor - which is in fact the same as the C Preprocessor - provides some very basic, but powerful abilities. I haven't used them quite often, but I have seen some nice examples. So here are some C++ Preprocessor Snippets:
&lt;h2 id="maximum-minimum"&gt;Maximum / Minimum&lt;/h2&gt;
If you want to find the maximum / minimum …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 25 Dec 2012 19:32:31 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-12-25:/c-preprocessor-snippets/</guid><category>C</category><category>Preprocessor</category></item><item><title>Why are Microsoft products so User unfriendly?</title><link>https://martin-thoma.com/why-are-microsoft-products-so-user-unfriendly/</link><description>&lt;p&gt;Another rage-post ...&lt;/p&gt;
&lt;h2 id="loading-times"&gt;Loading times&lt;/h2&gt;
&lt;p&gt;Did you ever work with eclipse? Then you might know the feeling, that it takes an eternity until Eclipse has started. I've just stopped it.&lt;/p&gt;
&lt;p&gt;Eclipse takes 30 seconds to start:
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/12/eclipse-juno-loading-300x200.png"&gt;&lt;img alt="Eclipse Juno loading screen" class="size-medium wp-image-51161" src="../images/2012/12/eclipse-juno-loading-300x200.png" style="max-width:300px;max-height:200px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Eclipse Juno loading screen&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio 2012 takes 1 minute and 15 seconds to start …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 21 Dec 2012 17:00:31 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-12-21:/why-are-microsoft-products-so-user-unfriendly/</guid><category>eclipse</category><category>windowsrage</category><category>Microsoft</category><category>Visual Studio</category><category>Windows 7</category></item><item><title>How can I sketch an application?</title><link>https://martin-thoma.com/how-can-i-sketch-an-application/</link><description>&lt;p&gt;I've recently participated in a medium size software project. This project is rather fixed for a web project, so we don't suffer from rapid changes ("rapid" in terms of other web applications), but nether the less they change. The task seemed to be clear at the beginning, but bit for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 20 Dec 2012 01:54:57 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-12-20:/how-can-i-sketch-an-application/</guid><category>Web Development</category><category>Software Development</category><category>Balsamiq</category><category>mockup</category><category>sketch</category></item><item><title>Profiling C programs</title><link>https://martin-thoma.com/profiling-c-programs/</link><description>&lt;p&gt;If you have a working program and you want to improve its execution speed, you might want to profile it. An easy way to do so, is adding global variables, increasing them at interesting points and counting how often these points are executed. A more sophisticated way is using a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 01 Dec 2012 17:00:58 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-12-01:/profiling-c-programs/</guid><category>C</category><category>profiling</category></item><item><title>Debugging a C program</title><link>https://martin-thoma.com/debugging-a-c-program/</link><description>&lt;p&gt;As I began with programming C, I had enormous difficulties to produce working code. Most of the time it didn't even compile, but when it compiled and I got a runtime error, I basically read my whole code again. I &lt;strike&gt;didn't&lt;/strike&gt; don't know any good online resource for C, so …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 30 Nov 2012 17:00:15 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-11-30:/debugging-a-c-program/</guid><category>C</category><category>debug</category><category>valgrind</category><category>gdb</category></item><item><title>Make your Bash more useful</title><link>https://martin-thoma.com/make-your-bash-more-useful/</link><description>&lt;p&gt;I just had the problem, that the bash prompt of my universities 
computer I've connected to via SSH looked like this:
&lt;code&gt;bash-4.0$&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="change-the-prompt"&gt;Change the prompt&lt;/h2&gt;
&lt;p&gt;I think it's much more useful to see the path you're currently using.
To get the current path in your bash promt, you have …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 29 Nov 2012 11:15:56 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-11-29:/make-your-bash-more-useful/</guid><category>Linux</category><category>Bash</category></item><item><title>Tribonacci-Folge</title><link>https://martin-thoma.com/tribonacci-folge/</link><description>&lt;p&gt;Folgende Aufgabe gab es (sinngem&amp;auml;&amp;szlig;) f&amp;uuml;r das Modul &amp;bdquo;Programmieren&amp;ldquo; im zweiten &amp;Uuml;bungsblatt 2012:&lt;/p&gt;
&lt;p&gt;Sei &lt;span class="math"&gt;\((a_n)_{n \in \mathbb{N}}\)&lt;/span&gt; eine Folge und definiert durch:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(a_n := &lt;div class="math"&gt;\begin{cases}
1 &amp;amp;\text{, falls } n \in \{0,1,2\}\\
a_{n-1} + a_{n-2} + a_{n-3} &amp;amp; \text{, falls } n \geq 3
\end{cases}&lt;/div&gt;\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Ich …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 19 Nov 2012 20:52:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-11-19:/tribonacci-folge/</guid><category>Programming</category><category>Java</category></item><item><title>Project Euler: Problem 35</title><link>https://martin-thoma.com/project-euler-problem-35/</link><description>&lt;p&gt;The task in &lt;a href="http://projecteuler.net/problem=35"&gt;Problem 35&lt;/a&gt; of Project Euler is:&lt;/p&gt;
&lt;blockquote&gt;The number, 197, is called a circular prime because all rotations of the digits: 197, 971, and 719, are themselves prime.

There are thirteen such primes below 100: 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, and …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 17 Nov 2012 13:23:01 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-11-17:/project-euler-problem-35/</guid><category>Programming</category><category>Python</category><category>Challenge</category><category>Project Euler</category></item><item><title>Project Euler: Problem 33</title><link>https://martin-thoma.com/project-euler-problem-33/</link><description>&lt;p&gt;The task in &lt;a href="http://projecteuler.net/problem=33"&gt;Problem 33&lt;/a&gt; of Project Euler is:&lt;/p&gt;
&lt;blockquote&gt;The fraction $\frac{49}{98}$ is a curious fraction, as an inexperienced mathematician in attempting to simplify it may incorrectly believe that $\frac{49}{98} = \frac{4}{8}$, which is correct, is obtained by cancelling the 9s.

We shall consider fractions …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 14 Nov 2012 15:43:35 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-11-14:/project-euler-problem-33/</guid><category>Programming</category><category>Python</category><category>Challenge</category><category>Project Euler</category></item><item><title>Project Euler: Problem 32</title><link>https://martin-thoma.com/project-euler-problem-32/</link><description>&lt;p&gt;The task in Problem 32 of Project Euler is:&lt;/p&gt;
&lt;blockquote&gt;We shall say that an $n$-digit number is pandigital if it makes use of all the digits 1 to n exactly once; for example, the 5-digit number, 15234, is 1 through 5 pandigital.

The product 7254 is unusual, as the …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 13 Nov 2012 11:52:12 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-11-13:/project-euler-problem-32/</guid><category>Challenge</category><category>Project Euler</category><category>brute-force</category></item><item><title>What is the best programming language?</title><link>https://martin-thoma.com/what-is-the-best-programming-language/</link><description>&lt;p&gt;There is no such thing as a best programming language. Sorry about that, I've just thought it would be a catchy title. I would rather choose my tools after I know the problem I have to solve.&lt;/p&gt;
&lt;p&gt;Some programming languages are very good at some tasks. I don't know any …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 03 Nov 2012 11:48:36 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-11-03:/what-is-the-best-programming-language/</guid><category>Programming</category><category>Python</category><category>C</category><category>Java</category></item><item><title>A practical approach to floats</title><link>https://martin-thoma.com/a-practical-approach-to-floats/</link><description>&lt;p&gt;If you make a computer science degree, you will have to learn how numbers are internally represented. Most of the time, you get explanations like the pictures below:&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/10/IEEE_754_single_precision.png"&gt;&lt;img alt="IEEE 754 single precision" class="size-full wp-image-47381" src="../images/2012/10/IEEE_754_single_precision.png" style="max-width:500px;max-height:74px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;IEEE 754 single precision&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/10/float-scheme.png"&gt;&lt;img alt="Example of a floating point number" class="size-full wp-image-47361" src="../images/2012/10/float-scheme.png" style="max-width:500px;max-height:64px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Example of a floating point number&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You will (have to) learn how &lt;a href="http://en.wikipedia.org/wiki/IEEE_floating_point"&gt;IEEE 754 floats&lt;/a&gt; are structured on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 23 Oct 2012 12:40:45 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-23:/a-practical-approach-to-floats/</guid><category>C</category><category>Coding</category><category>float</category></item><item><title>Java Puzzle #14: Integers</title><link>https://martin-thoma.com/java-puzzle-14-integers/</link><description>&lt;p&gt;What is the output of the following script?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SomeClass&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2147483647&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 2147483647 == 2**31 - 1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Everything's ok:"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"It's weird:"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x   = "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2*x = "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 22 Oct 2012 12:00:44 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-22:/java-puzzle-14-integers/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>C Puzzle #2</title><link>https://martin-thoma.com/c-puzzle-2/</link><description>&lt;p&gt;What is the output of the following script? Why? How can it be fixed to get the expected output?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define __STDC_FORMAT_MACROS&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;inttypes.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint64_t&lt;/span&gt; &lt;span class="n"&gt;testvar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;testvar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2^30 = %"&lt;/span&gt; &lt;span class="n"&gt;PRIu64&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testvar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;testvar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2^31 = %"&lt;/span&gt; &lt;span class="n"&gt;PRIu64&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testvar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 20 Oct 2012 17:00:53 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-20:/c-puzzle-2/</guid><category>Programming</category><category>C</category><category>puzzle</category></item><item><title>Java Puzzle #13: Absolute value weirdness</title><link>https://martin-thoma.com/java-puzzle-13-absolute-value-weirdness/</link><description>&lt;p&gt;What does the following snippet output?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SomeClass&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2147483648&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// -2147483648 == -2**31&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|a| &amp;lt; -1"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|a| &amp;gt;= -1"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|b| &amp;lt; -1 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 19 Oct 2012 17:00:00 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-19:/java-puzzle-13-absolute-value-weirdness/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Java Puzzle #12: Control-flow</title><link>https://martin-thoma.com/java-puzzle-12-control-flow/</link><description>&lt;p&gt;What is the output of the following &lt;strong&gt;HelloWorld.java&lt;/strong&gt;?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloWorld&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Yes"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.
.
.
.
.
.
.
.
.
.
.&lt;/p&gt;
&lt;h2 id="answer"&gt;Answer&lt;/h2&gt;
&lt;p&gt;The output is "Yes". &lt;/p&gt;
&lt;h2 id="explanation"&gt;Explanation&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;;&lt;/code&gt; means, that no block is executed. The &lt;code&gt;{ ... }&lt;/code&gt; is just a code block and not really related to the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 17 Oct 2012 17:00:19 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-17:/java-puzzle-12-control-flow/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Learning Java</title><link>https://martin-thoma.com/learning-java/</link><description>&lt;p&gt;I've just found some YouTube clips by &lt;a href="//www.youtube.com/user/thenewboston"&gt;thenewboston&lt;/a&gt; in which he explains how to program in Java. I didn't watch them, but I took a look at some of them. Seems to be very easy to understand.&lt;/p&gt;
&lt;p&gt;He starts right from the beginning (that means: how do I install Java …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 15 Oct 2012 17:00:04 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-15:/learning-java/</guid><category>Programming</category><category>learning</category><category>Java</category></item><item><title>Java Puzzle #11: Change argument of foreach</title><link>https://martin-thoma.com/java-puzzle-11-change-argument-of-foreach/</link><description>&lt;p&gt;What is the output of the following HelloWorld.java?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.LinkedList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloWorld&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 14 Oct 2012 21:15:43 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-14:/java-puzzle-11-change-argument-of-foreach/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Java Generics</title><link>https://martin-thoma.com/java-generics/</link><description>&lt;p&gt;Some months ago, I had to improve some Java code for university. They gave us a model of a windows like file system and we had to make the code "cleaner". I think I've overdone the application of generics, but it's a nice example for generics ;-)&lt;/p&gt;
&lt;p&gt;You can download the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 10 Oct 2012 12:18:42 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-10:/java-generics/</guid><category>Java</category><category>Generics</category></item><item><title>Python Puzzle #3: Associativity</title><link>https://martin-thoma.com/python-puzzle-3-associativity/</link><description>&lt;p&gt;What is the output of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and what is the output of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;([]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.&lt;/p&gt;
&lt;h2 id="answer"&gt;Answer&lt;/h2&gt;
&lt;p&gt;The first expression evaluates to &lt;code&gt;False&lt;/code&gt;, because it gets evaluated as &lt;code&gt;(1 in []) and ([] in 'a')&lt;/code&gt; (&lt;a href="http://docs.python.org/reference/expressions.html#not-in"&gt;Manual&lt;/a&gt;, &lt;a href="http://stackoverflow.com/a/12660938/562769"&gt;Source&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The second two expressions are invalid; they …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 02 Oct 2012 21:31:50 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-10-02:/python-puzzle-3-associativity/</guid><category>Programming</category><category>Python</category><category>puzzle</category></item><item><title>Sizes in LaTeX</title><link>https://martin-thoma.com/sizes-in-latex/</link><description>&lt;p&gt;Here is an overview of sizes in LaTeX:&lt;/p&gt;
&lt;h2 id="tikz"&gt;TikZ&lt;/h2&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/09/tikz-sizes.png"&gt;&lt;img alt="TikZ thicknes" class="size-full" src="../images/2012/09/tikz-sizes.png" style="max-width:500px;max-height:503px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;TikZ thicknes&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Usage example:
&lt;code&gt;\draw[ultra thick, blue,dashed](a -| current plot begin) -- (a);&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ultra thin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;very thin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;semithick&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thick&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;very thick&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ultra thick&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tex.stackexchange.com/q/106742/5645"&gt;more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="text"&gt;Text&lt;/h2&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="../images/2012/09/text-sizes-latex.png"&gt;&lt;img alt="Text sizes in LaTeX" class="size-full wp-image-45921 aligncenter" height="110" src="../images/2012/09/text-sizes-latex.png" title="Text sizes in LaTeX" width="512"/&gt;&lt;/a&gt;&lt;/p&gt;
Usage example:
&lt;code&gt;\Huge &lt;span class="math"&gt;\(\varepsilon\)&lt;/span&gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\tiny&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\scriptsize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\footnotesize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\small&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\normalsize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\large&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\Large&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\LARGE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\huge&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\Huge …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 29 Sep 2012 18:23:38 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-09-29:/sizes-in-latex/</guid><category>LaTeX</category><category>Tikz</category></item><item><title>Code golf</title><link>https://martin-thoma.com/code-golf/</link><description>&lt;blockquote&gt;Code golf is a type of recreational computer programming competition in which participants strive to achieve the shortest possible code that solves a certain problem.&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a href="http://en.wikipedia.org/wiki/Code_golf"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently found some very interesting code golf examples on &lt;a href="http://codegolf.stackexchange.com"&gt;codegolf.stackexchange.com&lt;/a&gt;:&lt;/p&gt;
&lt;h2 id="snake"&gt;Snake&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://codegolf.stackexchange.com/q/7241/5240"&gt;Task&lt;/a&gt;: Recreate the classic snake Game. &lt;/p&gt;
&lt;p&gt;The shortest answer …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 27 Sep 2012 08:47:50 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-09-27:/code-golf/</guid><category>Python</category><category>Code golf</category><category>J</category></item><item><title>How to check if a point is inside a rectangle</title><link>https://martin-thoma.com/how-to-check-if-a-point-is-inside-a-rectangle/</link><description>&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/09/rectangle.png"&gt;&lt;img alt="A rectangle" class="size-full wp-image-43611 " src="../images/2012/09/rectangle.png" style="max-width:512px;max-height:409px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;A rectangle&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I've just found this interesting question on &lt;a href="http://math.stackexchange.com/q/190111/6876"&gt;StackExchange&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;If you have a rectangle ABCD and point P. Is P inside ABCD?&lt;/p&gt;
&lt;h2 id="the-idea"&gt;The idea&lt;/h2&gt;
&lt;p&gt;The idea how to solve this problem is simply beautiful.&lt;/p&gt;
&lt;p&gt;If the point is in the rectangle, it divides it into four triangles:&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/09/rectangle-2.png"&gt;&lt;img alt="Divided rectangle" class="size-full wp-image-43651 " src="../images/2012/09/rectangle-2.png" style="max-width:512px;max-height:409px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Divided rectangle …&lt;/figcaption&gt;&lt;/figure&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 07 Sep 2012 21:28:38 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-09-07:/how-to-check-if-a-point-is-inside-a-rectangle/</guid><category>Python</category><category>Geometry</category></item><item><title>Java Puzzle #10: Multiple Interfaces</title><link>https://martin-thoma.com/java-puzzle-10-multiple-interfaces/</link><description>&lt;p&gt;You have to following source code:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;methodA&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;methodB&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;B.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;methodB&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;methodC&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;test.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;t …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 16 Aug 2012 17:00:25 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-16:/java-puzzle-10-multiple-interfaces/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Project Euler: Problem 26</title><link>https://martin-thoma.com/project-euler-problem-26/</link><description>&lt;p&gt;The task in &lt;a href="http://projecteuler.net/problem=26"&gt;Problem 26&lt;/a&gt; of Project Euler is:&lt;/p&gt;
&lt;blockquote&gt;Find the value of d &amp;lt; 1000 for which $\frac{1}{d}$ contains the longest recurring cycle in its decimal fraction part.&lt;/blockquote&gt;
&lt;h2 id="how-to-solve"&gt;How to solve&lt;/h2&gt;
&lt;p&gt;Think about how you divide with pen and paper. How do you recognize that you have a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 13 Aug 2012 17:00:49 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-13:/project-euler-problem-26/</guid><category>Challenge</category><category>mathematics</category><category>Project Euler</category><category>brute-force</category></item><item><title>Java Puzzle #9: Template method pattern</title><link>https://martin-thoma.com/java-puzzle-9-template-method-pattern/</link><description>&lt;p&gt;The following Java Puzzle is an example for the &lt;a href="http://en.wikipedia.org/wiki/Template_method_pattern"&gt;template method pattern&lt;/a&gt;. It is a design pattern by the &lt;a href="http://en.wikipedia.org/wiki/Design_Patterns"&gt;Gang of Four&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What is the output of the following snippet:
&lt;strong&gt;AbstractClass.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AbstractClass&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;templateMethod&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;simpleOperation1&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;simpleOperation2&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;simpleOperation1&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;simpleOperation2&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;ConcreteClass.java …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 10 Aug 2012 17:00:33 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-10:/java-puzzle-9-template-method-pattern/</guid><category>Programming</category><category>Java</category><category>SWT I</category><category>puzzle</category><category>Design Pattern</category></item><item><title>Java Puzzle #8: Interfaces and Visibility</title><link>https://martin-thoma.com/java-puzzle-8-interfaces-and-visibility/</link><description>&lt;p&gt;What is the output of the following snippets:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shape.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Shape&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;calculateArea&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Rectangle.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Rectangle&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;Shape&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Rectangle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 09 Aug 2012 17:00:42 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-09:/java-puzzle-8-interfaces-and-visibility/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Java Puzzle #7: Inheritance and Visibility</title><link>https://martin-thoma.com/java-puzzle-7-inheritance-and-visibility/</link><description>&lt;p&gt;You are given the following two classes:
&lt;strong&gt;Animal.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Tiger.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Tiger&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is the output of the following three snippets:
&lt;strong&gt;test1.java&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test1&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Tiger&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 05 Aug 2012 17:00:38 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-05:/java-puzzle-7-inheritance-and-visibility/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Java Puzzle #6: Double Arithmetic</title><link>https://martin-thoma.com/java-puzzle-6-double-arithmetic/</link><description>&lt;p&gt;What is the output of the following snippet?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.3378901234567877&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0008901234567876&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mf"&gt;1.337&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hallo doubles!"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Oh no! Comparison failed!"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
&lt;h2 id="solution"&gt;Solution&lt;/h2&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Oh no! Comparison …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 04 Aug 2012 17:00:27 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-04:/java-puzzle-6-double-arithmetic/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Java Puzzle #5: Parallel Programming, Part 2</title><link>https://martin-thoma.com/java-puzzle-5-parallel-programming-part-2/</link><description>&lt;p&gt;What is the output of the following script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;globalVar&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;globalVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;MyParallelClass&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyParallelClass&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;MyParallelClass&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyParallelClass&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;globalVar&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyParallelClass&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Runnable …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 03 Aug 2012 17:00:58 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-03:/java-puzzle-5-parallel-programming-part-2/</guid><category>Programming</category><category>Java</category><category>SWT I</category><category>puzzle</category></item><item><title>Java Puzzle #4: Parallel Programming</title><link>https://martin-thoma.com/java-puzzle-4-parallel-programming/</link><description>&lt;p&gt;What is the output of the following Java Snippet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyParallelClass&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Runnable&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;myParallelTry&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;MyParallelClass&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyParallelClass&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;MyParallelClass&lt;/span&gt; &lt;span class="n"&gt;b …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 02 Aug 2012 11:00:36 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-02:/java-puzzle-4-parallel-programming/</guid><category>Programming</category><category>Java</category><category>SWT I</category><category>puzzle</category></item><item><title>Python Puzzle #2: None and False</title><link>https://martin-thoma.com/python-puzzle-2-none-and-false/</link><description>&lt;p&gt;Python automatically casts to boolean if you use another type of variable for a boolean expression.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Crazy, "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"this "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"is "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"also "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;"a string"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"true."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 01 Aug 2012 17:00:55 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-08-01:/python-puzzle-2-none-and-false/</guid><category>Programming</category><category>Python</category><category>puzzle</category><category>boolean expression</category></item><item><title>Plotting graphs with PGFplots (LaTeX and Tikz)</title><link>https://martin-thoma.com/plotting-graphs-with-pgfplots-latex-and-tikz/</link><description>&lt;p&gt;I guess many of you might need to plot functions or data once. So I've made one example that shows much of the features you might need:
&lt;ul&gt;
&lt;li&gt;You can see how to change the axis' from normal linear scale to logarithmic scale.&lt;/li&gt;
&lt;li&gt;Some axis-manipulations were used.&lt;/li&gt;
&lt;li&gt;I have used a …&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 24 Jul 2012 17:00:28 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-24:/plotting-graphs-with-pgfplots-latex-and-tikz/</guid><category>LaTeX</category><category>Tikz</category></item><item><title>Swing II: How to arrange Objects</title><link>https://martin-thoma.com/swing-ii-how-to-arrange-objects/</link><description>&lt;h2 id="without-gui"&gt;Without GUI&lt;/h2&gt;
&lt;p&gt;Objects can be arranged with &lt;a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridBagLayout.html"&gt;GridBagLayout&lt;/a&gt; and &lt;a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridBagConstraints.html"&gt;GridBagConstraints&lt;/a&gt;. This is an example:
&lt;img alt="GridBag example (Java Swing)" class="size-full wp-image-33451" height="199" src="../images/2012/07/java-swing-grid-bag.png" title="GridBag example (Java Swing)" width="198"/&gt;&lt;/p&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.GridBagConstraints&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.GridBagLayout&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.Insets&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.MouseInfo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.Point&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.JButton&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.JFrame&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.JPanel&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 21 Jul 2012 17:00:44 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-21:/swing-ii-how-to-arrange-objects/</guid><category>Programming</category><category>Java</category><category>Swing</category></item><item><title>Swing I: How to use Swing</title><link>https://martin-thoma.com/how-to-use-swing/</link><description>&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Swing_(Java)"&gt;Swing&lt;/a&gt; is a Java package for creating graphical user interfaces (GUI). I will give you complete, runnable examples how you could use Swing. All examples are done in &lt;code&gt;test.java&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="basic-examples"&gt;Basic examples&lt;/h2&gt;
&lt;h3 id="jframe"&gt;JFrame&lt;/h3&gt;
&lt;p&gt;The basic class is &lt;a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/JFrame.html"&gt;JFrame&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.JFrame&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 20 Jul 2012 17:00:41 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-20:/how-to-use-swing/</guid><category>Programming</category><category>Java</category><category>Swing</category></item><item><title>How to parse command line arguments in Java</title><link>https://martin-thoma.com/how-to-parse-command-line-arguments-in-java/</link><description>&lt;p&gt;If you are using Eclipse, you might want to add your arguments. To specify them, go to:
Run &amp;rarr; Run Configurations ... &amp;rarr; Arguments&lt;/p&gt;
&lt;h2 id="args4j"&gt;args4j&lt;/h2&gt;
&lt;blockquote&gt;args4j is a small Java class library that makes it easy to parse command line options/arguments in your CUI application.&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a href="http://args4j.kohsuke.org/"&gt;args4j.kohsuke.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lets see how …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 19 Jul 2012 17:00:04 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-19:/how-to-parse-command-line-arguments-in-java/</guid><category>Programming</category><category>Java</category></item><item><title>How to parse command line arguments in Python</title><link>https://martin-thoma.com/how-to-parse-command-line-arguments-in-python/</link><description>&lt;h2 id="argparse"&gt;Argparse&lt;/h2&gt;
&lt;blockquote&gt;The &lt;a href="http://docs.python.org/library/argparse.html"&gt;argparse module&lt;/a&gt; makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and argparse will figure out how to parse those out of sys.argv. The argparse module also automatically generates help and usage messages and issues errors when users give the program …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 18 Jul 2012 17:00:03 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-18:/how-to-parse-command-line-arguments-in-python/</guid><category>Python</category><category>command line arguments</category></item><item><title>Java Puzzle #3: Rounding</title><link>https://martin-thoma.com/java-puzzle-3-rounding/</link><description>&lt;h2 id="the-puzzle"&gt;The puzzle&lt;/h2&gt;
&lt;p&gt;What is the output of the following script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.4999999999999999&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.49999999999999992&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.49999999999999994&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" rounded is "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;round&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" rounded is "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;round&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;System …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 17 Jul 2012 17:00:53 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-17:/java-puzzle-3-rounding/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>Java Puzzle #2: Integers and Floats</title><link>https://martin-thoma.com/java-puzzle-2-integers-and-floats/</link><description>&lt;h2 id="basics"&gt;Basics&lt;/h2&gt;
&lt;p&gt;As you might know, Americans measure the temperature in &lt;a href="http://en.wikipedia.org/wiki/Fahrenheit"&gt;Fahrenheit&lt;/a&gt;. I'm not quite sure, but I guess the rest of the world uses &lt;a href="http://en.wikipedia.org/wiki/Celsius"&gt;Celsius&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;0&amp;deg; C is the temperature when water freezes.
100&amp;deg; C is the temperature when water boils.&lt;/p&gt;
&lt;p&gt;0&amp;deg; F is the lowest temperature of the winter …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 16 Jul 2012 17:00:35 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-16:/java-puzzle-2-integers-and-floats/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>GOTO in Python, Java and C++</title><link>https://martin-thoma.com/goto-in-python-java-and-c/</link><description>&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Goto"&gt;GOTO&lt;/a&gt; is a statement of the early beginnings of programming. It is rarely used in high-level code today. Code that makes use of it is called &lt;a href="http://en.wikipedia.org/wiki/Spaghetti_code"&gt;Spaghetti code&lt;/a&gt; by some people. I have almost never seen goto statements in code, so I've been curious about them.&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/07/xkcd-goto.png"&gt;&lt;img alt="GOTO from xkcd.com" class=" wp-image-30341 " src="../images/2012/07/xkcd-goto.png" style="max-width:533px;max-height:145px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;GOTO from xkcd.com …&lt;/figcaption&gt;&lt;/figure&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 12 Jul 2012 22:04:01 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-12:/goto-in-python-java-and-c/</guid><category>Python</category><category>C</category><category>Java</category><category>GOTO</category></item><item><title>Java Puzzle #1: Pre- and Postincrement</title><link>https://martin-thoma.com/java-puzzle-1-pre-and-postincrement/</link><description>&lt;h2 id="the-puzzle"&gt;The puzzle&lt;/h2&gt;
&lt;p&gt;What is the output of the following piece of code?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"i = "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 11 Jul 2012 16:07:02 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-11:/java-puzzle-1-pre-and-postincrement/</guid><category>Programming</category><category>Java</category><category>puzzle</category></item><item><title>My LaTeX Tikz Template</title><link>https://martin-thoma.com/my-latex-tikz-template/</link><description>&lt;p&gt;Sometimes I would like to create a single picture with Tikz for later usage on Wikipedia or my Blog. This is my LaTeX Tikz template I use in such a situation:&lt;/p&gt;
&lt;h2 id="the-templates"&gt;The templates&lt;/h2&gt;
&lt;h3 id="latex-documenttex"&gt;latex-document.tex&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[varwidth=true, border=2pt]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;standalone&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;tikz&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usetikzlibrary&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;arrows,positioning&lt;span class="nb"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;tikzpicture …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 07 Jul 2012 17:38:13 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-07:/my-latex-tikz-template/</guid><category>LaTeX</category><category>Tikz</category></item><item><title>C++ Operator overloading</title><link>https://martin-thoma.com/cpp-operator-overloading/</link><description>&lt;p&gt;Operator overloading is heavily used in math. One of the most famous examples I know is "+". If you add two elements from &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; you will use the same character "+" as you use for adding two numbers from &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;. You even use the plus-sign if you add matrices (which …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 06 Jul 2012 16:00:22 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-06:/cpp-operator-overloading/</guid><category>CPP</category></item><item><title>How to create your own Python module</title><link>https://martin-thoma.com/how-to-create-your-own-python-module/</link><description>&lt;p&gt;A python module is a container for some definitions and statements. You generally call it like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or like that&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ceil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;mymath&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Python modules can also be written in C or C++, but I'll only explain how to write the module …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 04 Jul 2012 16:11:54 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-07-04:/how-to-create-your-own-python-module/</guid><category>Python</category></item><item><title>Complex LaTeX visualizations (Tikz)</title><link>https://martin-thoma.com/complex-latex-visualizations-tikz/</link><description>&lt;p&gt;You can create some very complex visualizations with LaTeX. Take a look at these:&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/06/circumscribed-polygons-and-circles.png"&gt;&lt;img alt="Circumscribed polygons and circles" class="size-full wp-image-28871" src="../images/2012/06/circumscribed-polygons-and-circles.png" style="max-width:322px;max-height:322px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Circumscribed polygons and circles&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Used matlab
Source: &lt;a href="http://www.texample.net/tikz/examples/circumscribed-polygons-and-circles/"&gt;texample.net&lt;/a&gt;&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/06/mosaik-from-pompeii.png"&gt;&lt;img alt="Mosaic from Pompeii" class="size-full wp-image-28881" src="../images/2012/06/mosaik-from-pompeii.png" style="max-width:400px;max-height:400px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Mosaic from Pompeii&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Source: &lt;a href="http://www.texample.net/tikz/examples/mosaic-from-pompeii/"&gt;texample.net&lt;/a&gt;&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/06/dandelin-spheres.png"&gt;&lt;img alt="Plane Sections of the Cylinder - Dandelin Spheres" class="size-full wp-image-28891" src="../images/2012/06/dandelin-spheres.png" style="max-width:400px;max-height:400px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Plane Sections of the Cylinder - Dandelin Spheres&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Source: &lt;a href="http://www.texample.net/tikz/examples/dandelin-spheres/"&gt;texample.net&lt;/a&gt;&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/06/dipolar-magnetic-field.png"&gt;&lt;img alt="Example: Dipolar magnetic field" class="size-full wp-image-28901" src="../images/2012/06/dipolar-magnetic-field.png" style="max-width:472px;max-height:343px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Example: Dipolar magnetic field&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Source: &lt;a href="http://www.texample.net/tikz/examples/dipolar-magnetic-field/"&gt;texample.net&lt;/a&gt;&lt;/p&gt;
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2012/06/gamma-interaction.png"&gt;&lt;img alt="Gamma interaction" class="size-full wp-image-28921" src="../images/2012/06/gamma-interaction.png" style="max-width:408px;max-height:322px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Gamma interaction&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Source: &lt;a href="http://www.texample.net/tikz/examples/gamma-interaction/"&gt;texample …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 29 Jun 2012 18:38:27 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-29:/complex-latex-visualizations-tikz/</guid><category>LaTeX</category><category>Tikz</category></item><item><title>Perfect number check and ROT-13 encryption in MIPS-assembly code</title><link>https://martin-thoma.com/perfect-number-check-and-rot-13-encryption-in-mips-assembly-code/</link><description>&lt;h2 id="perfect-number-check"&gt;Perfect number check&lt;/h2&gt;
&lt;p&gt;The perfect number check in MIPS is quite easy to realize. Here is some pythonic Pseudocode&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;             &lt;span class="c1"&gt;# read a positive integer n from the user&lt;/span&gt;
&lt;span class="n"&gt;sumOfDivisors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;   &lt;span class="c1"&gt;# go from 1 to n-1&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="c1"&gt;# if i is a …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 22 Jun 2012 10:43:49 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-22:/perfect-number-check-and-rot-13-encryption-in-mips-assembly-code/</guid><category>Assembly language</category><category>MIPS</category></item><item><title>Part I: Performance of Matrix multiplication in Python, Java and C++</title><link>https://martin-thoma.com/matrix-multiplication-python-java-cpp/</link><description>&lt;div class="info"&gt;This is Part I of my matrix multiplication series. &lt;a href="../matrix-multiplication-python-java-cpp/"&gt;Part I&lt;/a&gt; was about simple matrix multiplication algorithms and &lt;a href="../strassen-algorithm-in-python-java-cpp/"&gt;Part II&lt;/a&gt; was about the Strassen algorithm.
&lt;a href="../part-iii-matrix-multiplication-on-multiple-cores-in-python-java-and-c/"&gt;Part III&lt;/a&gt; is about parallel matrix multiplication.&lt;/div&gt;
&lt;p&gt;This post is about simple implementations of matrix multiplications. The goal of this post is to find out …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 18 Jun 2012 21:37:46 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-18:/matrix-multiplication-python-java-cpp/</guid><category>Python</category><category>CPP</category><category>Java</category><category>Linear algebra</category><category>NumPy</category><category>Boost</category><category>SciPy</category><category>matrix multiplication</category></item><item><title>Python Puzzle #1: List multiplication</title><link>https://martin-thoma.com/python-puzzle-1-list-multiplication/</link><description>&lt;h2 id="basic-concepts"&gt;Basic concepts&lt;/h2&gt;
&lt;p&gt;Image you had to multiply two small matrices in Python. You could just use the definition of a matrix product:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(A, B \in \mathbb{R}^{n \times n}\)&lt;/span&gt;:
&lt;span class="math"&gt;\(C = A \cdot B, C \in \mathbb{R}^{n \times n}\)&lt;/span&gt; where the components of C are definied by
&lt;span class="math"&gt;\(c_ …&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 18 Jun 2012 15:06:48 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-18:/python-puzzle-1-list-multiplication/</guid><category>Programming</category><category>Python</category><category>puzzle</category></item><item><title>How to print MIPS assembly code in LaTeX</title><link>https://martin-thoma.com/how-print-mips-assembly-code-latex/</link><description>&lt;p&gt;If you like to print highlighted MIPS assembly code in LaTeX, you can use the listings package. Sadly, no MIPS language file exits by default in LaTeX, but awg has created one and provides it on his blog. Just download &lt;a href="../images/2012/06/mips.sty_.zip"&gt;mips.sty&lt;/a&gt; (thanks to &lt;a href="http://blog.xvx.ca/typesetting-mips-assembly-with-latex"&gt;Adam Gordon&lt;/a&gt;!) and place it in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 16 Jun 2012 11:33:11 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-16:/how-print-mips-assembly-code-latex/</guid><category>LaTeX</category><category>Assembly language</category><category>MIPS</category></item><item><title>Add MIPS syntax highlighting to gEdit</title><link>https://martin-thoma.com/add-mips-syntax-highlighting-gedit/</link><description>&lt;p&gt;I have to code some little programs in MIPS assembly language for university. So I liked to have some syntax highlighting for my favorite editor: gEdit.&lt;/p&gt;
&lt;p&gt;The following steps were tested on Ubuntu 10.04.4 LTS.&lt;/p&gt;
&lt;p&gt;This adds MIPS syntax highlighting to gEdit and every editor, that uses gtksourceview …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 16 Jun 2012 10:27:09 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-16:/add-mips-syntax-highlighting-gedit/</guid><category>Assembly language</category><category>MIPS</category></item><item><title>Functional Programming in Python</title><link>https://martin-thoma.com/functional-programming-in-python/</link><description>&lt;p&gt;Python has a few functional programming tools: Lambda functions and the three higher-order functions map, filter and reduce. I'll explain them now and I'll give some usage examples.&lt;/p&gt;
&lt;h2 id="lambda"&gt;lambda&lt;/h2&gt;
&lt;p&gt;A lambda creates an &lt;a href="http://en.wikipedia.org/wiki/Anonymous_function"&gt;anonymous function&lt;/a&gt;, that means a function without a name. A lambda may have any number of arguments …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 12 Jun 2012 17:00:09 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-12:/functional-programming-in-python/</guid><category>Programming</category><category>Python</category></item><item><title>Cool features of Python</title><link>https://martin-thoma.com/cool-features-of-python/</link><description>&lt;p&gt;A friend wanted to know why I enjoy programming in Python so much more than programming in other languages. So I will describe some special features of Python which make it much easier to quickly implement algorithms.&lt;/p&gt;
&lt;p&gt;I also made drafts how the tasks would be solved in most programming …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 08 Jun 2012 17:30:10 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-06-08:/cool-features-of-python/</guid><category>Programming</category><category>Python</category></item><item><title>Vectors in C++</title><link>https://martin-thoma.com/vectors-in-cpp/</link><description>&lt;h2 id="minimal-example"&gt;Minimal Example&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// create an empty vector&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// insert one element&lt;/span&gt;
    &lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// insert another element&lt;/span&gt;
    &lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// insert more elements&lt;/span&gt;
    &lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31415&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// insert an element which was there …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 28 May 2012 12:40:52 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-28:/vectors-in-cpp/</guid><category>CPP</category><category>STL</category><category>Vector</category></item><item><title>Sets in C++</title><link>https://martin-thoma.com/sets-in-c/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iterator&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// create an empty set of integers&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mySet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// insert one element&lt;/span&gt;
    &lt;span class="n"&gt;mySet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// insert another element&lt;/span&gt;
    &lt;span class="n"&gt;mySet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// insert more elements&lt;/span&gt;
    &lt;span class="n"&gt;mySet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;mySet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;mySet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31415&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// insert an element which was there …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 28 May 2012 12:08:58 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-28:/sets-in-c/</guid><category>STL</category><category>Set</category><category>CPP</category></item><item><title>Stacks in C++</title><link>https://martin-thoma.com/stacks-in-cpp/</link><description>&lt;h2 id="minimum-example"&gt;Minimum Example&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stack&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;



&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;myStack&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;myStack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Size of stack: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;myStack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;myStack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// get the element on the top&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Top: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;myStack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// it does NOT automatically pop!&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Top: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;myStack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// pop has …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 28 May 2012 11:45:40 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-28:/stacks-in-cpp/</guid><category>CPP</category><category>Stack</category><category>STL</category></item><item><title>C Puzzle #1</title><link>https://martin-thoma.com/c-puzzle-1/</link><description>&lt;p&gt;What is the output of the following programm?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;g&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x = %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x = %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="short-answer"&gt;Short Answer&lt;/h2&gt;
&lt;p&gt;It depends on your compiler …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Mon, 21 May 2012 13:15:41 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-21:/c-puzzle-1/</guid><category>Programming</category><category>C</category><category>Assembly language</category><category>puzzle</category></item><item><title>How do Bitmasks work?</title><link>https://martin-thoma.com/how-do-bitmasks-work/</link><description>&lt;h2 id="what-are-bitmasks"&gt;What are Bitmasks?&lt;/h2&gt;
&lt;p&gt;In computer science, a &lt;a href="http://en.wikipedia.org/wiki/Mask_(computing)"&gt;mask&lt;/a&gt; is data that is used for bitwise operations. Essentially it is a variable.&lt;/p&gt;
&lt;p&gt;They are very often used in C programs.&lt;/p&gt;
&lt;h2 id="bit-operators"&gt;Bit operators&lt;/h2&gt;
&lt;p&gt;These are the bit operators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;~ Bitwise NOT (not to be confused with Logical NOT &amp;lsquo;!&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;&amp;amp; Bitwise AND (not to be …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 18 May 2012 23:02:55 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-18:/how-do-bitmasks-work/</guid><category>C</category><category>OS</category><category>Operating Systems</category></item><item><title>How to visualize Graph algorithms with LaTeX</title><link>https://martin-thoma.com/how-to-visualize-graph-algorithms-with-latex/</link><description>&lt;p&gt;Tkiz is a very powerful TeX package. You can easily create visualizations of graphs and graph algorithms (if you have a template ;-) ). This post should give you a template to visualize graph algorithms with LaTeX.
I recently found a great animation of Prim's algorithm done by &lt;a href="http://www.texample.net/tikz/examples/prims-algorithm/"&gt;Kjell Magne Fauske&lt;/a&gt;. I've …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 16 May 2012 13:16:29 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-16:/how-to-visualize-graph-algorithms-with-latex/</guid><category>LaTeX</category><category>Tikz</category></item><item><title>Google Code Jam 2012 – Round 1C 2012</title><link>https://martin-thoma.com/google-code-jam-2012-round-1c-2012/</link><description>&lt;p&gt;4230 tried the first problem, but only 3189 people are listed in the &lt;a href="http://code.google.com/codejam/contest/1781488/scoreboard?c=1781488"&gt;scoreboard&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Problem 1 (&lt;a href="http://code.google.com/codejam/contest/1781488/dashboard#s=p0"&gt;Diamond Inheritance&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 3077/4230 users (73%)&lt;/li&gt;
&lt;li&gt;Large Set: 2387/3044 users (78%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem 2 (&lt;a href="http://code.google.com/codejam/contest/1781488/dashboard#s=p1"&gt;Out of Gas&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 471/766 users (61%)&lt;/li&gt;
&lt;li&gt;Large Set: 73/253 users (29%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem 3 (&lt;a href="http://code.google.com/codejam/contest/1781488/dashboard#s=p2"&gt;Box …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 06 May 2012 14:03:54 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-06:/google-code-jam-2012-round-1c-2012/</guid><category>Programming</category><category>Python</category><category>Google</category><category>Google Code Jam</category><category>competition</category></item><item><title>Google Code Jam 2012 – Round 1B 2012</title><link>https://martin-thoma.com/google-code-jam-2012-round-1b-2012/</link><description>&lt;p&gt;5614 tried the first problem, but only 3281 people are listed in the scoreboard. So quite a lot tried to solve a problem, but couldn't even solve one. I think these problems were much harder than the ones from &lt;a href="../google-code-jam-2012-round-1a-2012/" title="Google Code Jam 2012 &amp;ndash; Round 1A 2012"&gt;Round 1A 2012&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Problem 1 (&lt;a href="http://code.google.com/codejam/contest/1836486/dashboard#s=p0"&gt;Safety in Numbers&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 2695 …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 05 May 2012 21:20:45 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-05-05:/google-code-jam-2012-round-1b-2012/</guid><category>Programming</category><category>Python</category><category>Google</category><category>C</category><category>Google Code Jam</category><category>competition</category></item><item><title>How to print Source Code with LaTeX</title><link>https://martin-thoma.com/how-to-print-source-code-with-latex/</link><description>&lt;p&gt;I often need to print source code. Some years ago for a German competition called "Bundeswettbewerb Informatik", now for projects at my university. If you use LaTeX, you can simply include the source code into your document! Here are three examples with listings and minted. I've also included example PDF …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 29 Apr 2012 12:04:32 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-04-29:/how-to-print-source-code-with-latex/</guid><category>LaTeX</category><category>Documentation</category></item><item><title>Google Code Jam 2012 – Round 1A 2012</title><link>https://martin-thoma.com/google-code-jam-2012-round-1a-2012/</link><description>&lt;p&gt;3691 people are listed in the scoreboard, but 3851 tried the first problem. So I guess the number of contestants might even be higher.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Problem 1 (&lt;a href="http://code.google.com/codejam/contest/1645485/dashboard#s=p0"&gt;Password Problem&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 3511/3851 users (91%)&lt;/li&gt;
&lt;li&gt;Large Set: 2329/3376 users (69%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Problem 2 (&lt;a href="http://code.google.com/codejam/contest/1645485/dashboard#s=p1"&gt;Kingdom Rush&lt;/a&gt;):
  &lt;ul&gt;
&lt;li&gt;Small Set: 1912/3466 users (55 …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 28 Apr 2012 06:11:22 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-04-28:/google-code-jam-2012-round-1a-2012/</guid><category>Programming</category><category>Python</category><category>Google</category><category>Google Code Jam</category><category>competition</category></item><item><title>Software Versioning Cheat Sheet</title><link>https://martin-thoma.com/software-versioning-cheat-sheet/</link><description>&lt;p&gt;This &lt;a href="../images/2012/04/versioning-cheat-sheet.pdf"&gt;Software Versioning Cheat Sheet&lt;/a&gt; has very basic information aboout the installation and usage of Subversion and Git. (The &lt;a href="../images/2012/04/versioning-cheat-sheet.zip"&gt;LaTeX Source Code&lt;/a&gt; is here.)&lt;/p&gt;
&lt;p&gt;If you're at the KIT and you have SWT, then you'll probably need this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;svn checkout https://svn.ipd.kit.edu/lehre/vorlesung/SWT1/SS12 …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 18 Apr 2012 07:00:59 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-04-18:/software-versioning-cheat-sheet/</guid><category>cheat sheet</category><category>software versioning</category><category>svn</category><category>git</category></item><item><title>Google Code Jam 2012 - Qualification Round</title><link>https://martin-thoma.com/google-code-jam-2012-qualification-round/</link><description>&lt;p&gt;I've passed the &lt;a href="https://code.google.com/codejam/contest/1460488/dashboard"&gt;Qualification Round&lt;/a&gt; of Google Code Jam 2012. I've learned, that I am not allowed to submit the large dataset after the first 8 minutes. &lt;/p&gt;
&lt;p&gt;18,365 programmers took part in this contest. 15,692 had at least 20 points and advanced to the First Rounds.&lt;/p&gt;
&lt;p&gt;These are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 15 Apr 2012 13:35:40 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-04-15:/google-code-jam-2012-qualification-round/</guid><category>Programming</category><category>Python</category><category>Google</category><category>Google Code Jam</category><category>competition</category></item><item><title>PHP: A strange language</title><link>https://martin-thoma.com/php-a-strange-language/</link><description>&lt;h2 id="automatic-conversion"&gt;Automatic conversion&lt;/h2&gt;
&lt;h3 id="strings-to-numbers"&gt;Strings to numbers&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$ php -a&lt;/span&gt;
&lt;span class="x"&gt;php &amp;gt; var_dump(123 == '123ax');&lt;/span&gt;
&lt;span class="x"&gt;bool(true)&lt;/span&gt;

&lt;span class="x"&gt;php &amp;gt; var_dump('123' == '123ax');&lt;/span&gt;
&lt;span class="x"&gt;bool(false)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="md5-hashes"&gt;MD5 hashes&lt;/h3&gt;
&lt;div class="info"&gt;This one seems to be fixed. It doesn't work in PHP Version 5.4.6-1ubuntu1.2 (released 16.08.2012). It was a problem in PHP 5.3.5 …&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 12 Apr 2012 16:24:32 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-04-12:/php-a-strange-language/</guid><category>Programming</category><category>PHP</category></item><item><title>Project Euler: Problem 142</title><link>https://martin-thoma.com/project-euler-problem-142/</link><description>&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Project_Euler"&gt;Project Euler&lt;/a&gt; is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve. Although mathematics will help you arrive at elegant and efficient methods, the use of a computer and programming skills will be required to solve most problems.&lt;/p&gt;
&lt;p&gt;The motivation for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 08 Apr 2012 22:40:43 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-04-08:/project-euler-problem-142/</guid><category>Challenge</category><category>mathematics</category><category>Project Euler</category></item><item><title>Get your programs assembly code and more information</title><link>https://martin-thoma.com/get-your-programs-assembly-code-and-more-information/</link><description>&lt;p&gt;I've talked today with a fellow student about some system internals and we weren't sure what actually happens. So I needed the assembly code of some example programs.&lt;/p&gt;
&lt;h2 id="general-information"&gt;General Information&lt;/h2&gt;
&lt;p&gt;It is important to know that I will use &lt;strong&gt;AT&amp;amp;T syntax&lt;/strong&gt; in this article!
This is AT&amp;amp;T Syntax …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 01 Mar 2012 19:40:43 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-03-01:/get-your-programs-assembly-code-and-more-information/</guid><category>C</category><category>Assembly language</category></item><item><title>Linux Memory Consumption</title><link>https://martin-thoma.com/linux-memory-consumption/</link><description>&lt;h2 id="free"&gt;free&lt;/h2&gt;
&lt;p&gt;I've you want to check your memory consumption on a Linux machine, you can use free.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;moose@pc07:~$ free -m
             total       used       free     shared    buffers     cached
Mem:          &lt;span class="m"&gt;3952&lt;/span&gt;       &lt;span class="m"&gt;2832&lt;/span&gt;       &lt;span class="m"&gt;1119&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="m"&gt;117&lt;/span&gt;       &lt;span class="m"&gt;1565&lt;/span&gt;
-/+ buffers/cache:       &lt;span class="m"&gt;1150&lt;/span&gt;       &lt;span class="m"&gt;2802&lt;/span&gt;
Swap:         &lt;span class="m"&gt;8656&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt;       &lt;span class="m"&gt;8656&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means: I have a total of 3952 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 10 Feb 2012 21:04:45 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2012-02-10:/linux-memory-consumption/</guid><category>Linux</category><category>Command Line</category><category>Memory</category></item><item><title>Wandering through the depths of find</title><link>https://martin-thoma.com/wandering-through-the-depths-of-find/</link><description>&lt;p&gt;find is a very mighty tool. It allows you to apply a very detailed search syntax. Every Linux user should know how to use it.&lt;/p&gt;
&lt;h2 id="very-basic-usage"&gt;Very basic usage&lt;/h2&gt;
&lt;p&gt;&lt;a href="../images/2011/09/find-basic1.png"&gt;&lt;img alt="&amp;lt;span class=" math"="" src="../images/2011/09/find-basic1.png"&gt;\( find  /home -iname &amp;amp;#039;Tux*&amp;amp;#039;" title="\)&lt;/img&gt;&lt;/a&gt;&lt;/p&gt; find  /home -iname 'Tux*'" width="500" height="100" class="alignnone size-full wp-image-2671" /&amp;gt;
&lt;p&gt;I told you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 28 Dec 2011 16:01:18 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-12-28:/wandering-through-the-depths-of-find/</guid><category>Linux</category><category>Command Line</category><category>Bash</category></item><item><title>Surprising C errors</title><link>https://martin-thoma.com/surprising-c-errors/</link><description>&lt;p&gt;Those errors might be surprising and a good exercise for C beginners:&lt;/p&gt;
&lt;h2 id="empty-printf"&gt;Empty printf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;error: zero-length gnu_printf format string
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="macros"&gt;Macros&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define MY_MACRO printf("Hello World\n");&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;MY_MACRO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Crazy, huh?&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;macro …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 28 Dec 2011 15:18:43 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-12-28:/surprising-c-errors/</guid><category>Programming</category><category>learning</category><category>C</category></item><item><title>vrms - virtual Richard M. Stallman</title><link>https://martin-thoma.com/vrms-virtual-richard-m-stallman/</link><description>&lt;figure class="alignright"&gt;
&lt;a href="../images/2011/12/Richard-Stallman-200x300.jpg"&gt;&lt;img alt="Richard Stallman" class="size-medium wp-image-10141 " src="../images/2011/12/Richard-Stallman-200x300.jpg" style="max-width:200px;max-height:300px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Richard Stallman&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I've just installed vrms - the virtual richard Stallman :D&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Richard_Stallman"&gt;Richard Stallman&lt;/a&gt; is an American software freedom activist and computer programmer. He launched the GNU Project to create a free Unix-like operating system, and he has been the project's lead architect and organizer. With the launch of the GNU …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 23 Dec 2011 01:38:37 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-12-23:/vrms-virtual-richard-m-stallman/</guid><category>Cyberculture</category><category>Linux</category><category>OpenSource</category></item><item><title>How to use magic rescue</title><link>https://martin-thoma.com/how-to-use-magic-rescue/</link><description>&lt;p&gt;I've just searched an image I have created some time ago. I knew that I've put it on one of my USB-Sticks, but it seems as if I had deleted it. So how could I get the image back? Magic rescue is a program for recovering deleted files. It doesn't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 17 Dec 2011 13:02:47 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-12-17:/how-to-use-magic-rescue/</guid><category>Data Recovery</category></item><item><title>Comparing programming languages</title><link>https://martin-thoma.com/comparing-programming-languages/</link><description>&lt;figure class="alignright"&gt;
&lt;a href="../images/2011/12/compare-programming-languages.png"&gt;&lt;img alt="Compare programming languages" class="size-full wp-image-9801 " src="../images/2011/12/compare-programming-languages.png" style="max-width:128px;max-height:128px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Compare programming languages&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you want to compare programming languages, I can recommend the following links:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.literateprograms.org/"&gt;literateprograms.org&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;&lt;a href="http://rosettacode.org/wiki/Rosetta_Code"&gt;Rosetta Code&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.99-bottles-of-beer.net/abc.html"&gt;99-bottles-of-beer.net&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Comparison_of_programming_languages_(basic_instructions)"&gt;Comparison of programming languages (basic instructions)&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Comparison_of_programming_languages"&gt;Comparison of programming languages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;In particular, I like the following pages:
&lt;ul&gt;
&lt;li&gt;Fibonacci numbers (&lt;a href="http://en.literateprograms.org/Fibonacci_numbers_%28Python%29"&gt;literateprograms&lt;/a&gt;, &lt;a href="http://rosettacode.org/wiki/Fibonacci_sequence"&gt;rosettacode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hello World (&lt;a href="http://en.literateprograms.org/Hello_World_%28Python%29"&gt;literateprograms&lt;/a&gt;, &lt;a href="http://rosettacode.org/wiki/Hello_world"&gt;rosettacode&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;If you want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 11 Dec 2011 11:50:59 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-12-11:/comparing-programming-languages/</guid><category>Programming</category></item><item><title>for loops in different programming languages</title><link>https://martin-thoma.com/for-loops-in-different-programming-languages/</link><description>&lt;p&gt;If you have to learn a new programming language it is most of the time quite easy. You know the structures and the way you have to think if you want to solve a problem. The first time it might be hard, but the more languages you learn the more …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sun, 04 Dec 2011 11:19:54 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-12-04:/for-loops-in-different-programming-languages/</guid><category>Programming</category><category>learning</category></item><item><title>Checkstyle</title><link>https://martin-thoma.com/checkstyle/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I have to go to a programming course at KIT at the moment where we are taught how to program with Java. They create exercises which get evaluated automatically. One part of the evaluation is checkstyle.&lt;/p&gt;
&lt;p&gt;So it is a good idea to test the files on my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 30 Nov 2011 21:59:40 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-11-30:/checkstyle/</guid><category>KIT</category><category>Java</category></item><item><title>Python Generators</title><link>https://martin-thoma.com/python-generators/</link><description>&lt;p&gt;Python has a quite mighty tool: Generators.&lt;/p&gt;
&lt;p&gt;Generators help you to program iterators. They look almost like normal functions, but they have yield as a special keyword. yield is used instead of return.&lt;/p&gt;
&lt;p&gt;Imagine you wanted to display n Fibonacci numbers. This could be your normal approach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 10 Nov 2011 08:24:00 +0100</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-11-10:/python-generators/</guid><category>Python</category></item><item><title>Understanding Python Lists</title><link>https://martin-thoma.com/understanding-python-lists/</link><description>&lt;p&gt;This article is about Python lists. I just want to show you some examples of the unexpected behavior (for non-python-programmers) of lists in Python.&lt;/p&gt;
&lt;p&gt;Imagine you have the following Python source code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;copy&lt;/span&gt;

&lt;span class="n"&gt;example1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],[],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;example2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;example1 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 22 Oct 2011 23:01:55 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-10-22:/understanding-python-lists/</guid><category>Python</category></item><item><title>Search Engine Autodiscovery</title><link>https://martin-thoma.com/search-engine-autodiscovery/</link><description>&lt;p&gt;Recently I read a very good post about search engine autodiscovery &lt;a href="http://www.knallisworld.de/blog/2011/04/14/autodiscovery-der-searchengine-in-google-chrome-opensearch/"&gt;by Jan Phillip&lt;/a&gt;. Did you know that many browsers can detect an internal search engine automatically? 
Firefox gives you the possibility to add such a search engine to your browser:
&lt;figure class="aligncenter"&gt;
&lt;a href="../images/2011/10/firefox-add-search-engine.png"&gt;&lt;img alt="Firefox: Add search engine detected via autodiscovery" class="size-full wp-image-6921" src="../images/2011/10/firefox-add-search-engine.png" style="max-width:294px;max-height:236px"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Firefox: Add search engine detected via autodiscovery&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id="opensearch"&gt;OpenSearch&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/OpenSearch"&gt;OpenSearch …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 22 Oct 2011 11:12:07 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-10-22:/search-engine-autodiscovery/</guid><category>Chrome</category><category>Firefox</category><category>Web Development</category><category>HTML5</category></item><item><title>Create LaTeX timetable</title><link>https://martin-thoma.com/create-latex-timetable/</link><description>&lt;p&gt;LaTeX is a quite cool document markup language and document preparation system. You can easily create mathematical formulas.&lt;/p&gt;
&lt;p&gt;Today I've created a LaTeX timetable. Well, to be honest I have only used the timetable package from Pascal Gwosdek found on &lt;a href="http://www.planetk.de/index.php/Stundenplan"&gt;planetk.de&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is the LaTeX-Code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[a4paper,10pt]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;report …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 18 Oct 2011 16:10:55 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-10-18:/create-latex-timetable/</guid><category>LaTeX</category></item><item><title>Comparing Dates in PHP and MySQL</title><link>https://martin-thoma.com/comparing-dates-in-php-and-mysql/</link><description>&lt;p&gt;Sometimes you need to know compare PHP dates. You need to know what is later or if both dates are the same.&lt;/p&gt;
&lt;h2 id="php"&gt;PHP&lt;/h2&gt;
&lt;h3 id="time-formats-and-functions"&gt;time formats and functions&lt;/h3&gt;
&lt;p&gt;PHP knows these time / date formats:
&lt;ul&gt;
&lt;li&gt;UNIX Timestamp: Integer - The number of seconds after 1970. Related functions are 
    &lt;ul&gt;
&lt;li&gt;int &lt;a href="http://www.php.net/manual/en/function.mktime.php"&gt;&lt;code&gt;mktime([ int \$hour = date …&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Tue, 04 Oct 2011 20:22:12 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-10-04:/comparing-dates-in-php-and-mysql/</guid><category>PHP</category><category>MySQL</category></item><item><title>Colorize your scripts output</title><link>https://martin-thoma.com/colorize-your-scripts-output/</link><description>&lt;p&gt;The bash is very nice if you want to know exactly what your scripts are doing. Unfortunately, its almost always white colored text on a black background, without any accentuation. No bold text, nothing underlined and no colors are used.&lt;/p&gt;
&lt;p&gt;You can change this standard behaviour. You can add color …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Fri, 30 Sep 2011 08:59:59 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-30:/colorize-your-scripts-output/</guid><category>Command Line</category><category>Bash</category><category>Scripting</category><category>C</category></item><item><title>Joke: Electrical Engineering vs. Computer Science</title><link>https://martin-thoma.com/joke-electrical-engineering-vs-computer-science/</link><description>&lt;figure class="alignright"&gt;
&lt;a href="../images/2011/09/Nerd-Crossing.jpg"&gt;&lt;img alt="Nerd-Crossing" class="size-full wp-image-2071" src="../images/2011/09/Nerd-Crossing.jpg" style="max-width:128px;max-height:127px;"/&gt;&lt;/a&gt;
&lt;figcaption class="text-center"&gt;Nerd-Crossing&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I've just stumbled upon this joke on &lt;a href="http://wilk4.com/humor/humore2.htm"&gt;wilk4.com&lt;/a&gt;. This is the reason why I didn't use OOP in any of my (small) projects and why I don't understand those people who want every piece of code in OOP-style:&lt;/p&gt;
&lt;p&gt;Once upon a time, in a kingdom not far from …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 24 Sep 2011 22:29:05 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-24:/joke-electrical-engineering-vs-computer-science/</guid><category>funny</category><category>Joke</category><category>Object Orientation</category><category>Computer science</category></item><item><title>Python: Check Wiki-references for citation template</title><link>https://martin-thoma.com/python-check-wiki-references-for-citation-template/</link><description>&lt;p&gt;Wikipedia articles are full of references. Those references should be formatted the same way. It is much easier to use a template for citations than trying to guess the right way how to cite. Unfortunately most Wikipedia users don't know the &lt;a href="http://en.wikipedia.org/wiki/Template:Citation" title="Template:Citation"&gt;Template:Citation&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;So I try to fix all manual …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 24 Sep 2011 11:39:40 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-24:/python-check-wiki-references-for-citation-template/</guid><category>Python</category><category>Wikipedia</category><category>RegEx</category></item><item><title>PHP: PEAR MDB2</title><link>https://martin-thoma.com/php-pear-mdb2/</link><description>&lt;p&gt;PEAR is short for &lt;strong&gt;P&lt;/strong&gt;HP &lt;strong&gt;E&lt;/strong&gt;xtension and &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;R&lt;/strong&gt;epository. It provides a very easy method to get some common classes.&lt;/p&gt;
&lt;p&gt;PEAR MDB2 is a database class. It is a successor of PEAR DB. I took a look at version 1.4.1 which is currently the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Sat, 24 Sep 2011 01:38:35 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-24:/php-pear-mdb2/</guid><category>PHP</category><category>Web Development</category><category>PEAR</category><category>Database</category></item><item><title>Getting Hardware Information in Ubuntu</title><link>https://martin-thoma.com/getting-hardware-information-in-ubuntu/</link><description>&lt;p&gt;I'm using Ubuntu now for many years, but I always have to look the commands for retrieving hardware information up. Now I will not Google any longer but search in my own little cheat sheet.&lt;/p&gt;
&lt;p&gt;I guess most commands will work in every Linux distribution, but I tried it only …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 22 Sep 2011 20:44:21 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-22:/getting-hardware-information-in-ubuntu/</guid><category>cheat sheet</category><category>Linux</category><category>Ubuntu</category><category>Hardware</category></item><item><title>Benchmarking PHP</title><link>https://martin-thoma.com/benchmarking-php/</link><description>&lt;p&gt;I used ApacheBenchmark (&lt;a href="http://httpd.apache.org/docs/2.0/programs/ab.html" rel="nofollow"&gt;ab&lt;/a&gt;) to make a few Benchmark tests I was interested in. &lt;/p&gt;
&lt;p&gt;If you like to view some more, go to &lt;a href="http://www.phpbench.com/" rel="nofollow"&gt;www.phpbench.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The most important options are:
&lt;ul&gt;
&lt;li&gt;-n: Number of requests to perform&lt;/li&gt;
&lt;li&gt;-c: Number of multiple requests to make&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;An empty file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;moose@pc07:~$ ab …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Thu, 22 Sep 2011 13:06:12 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-22:/benchmarking-php/</guid><category>PHP</category><category>Benchmark</category><category>Web Development</category></item><item><title>Converting Files with Linux</title><link>https://martin-thoma.com/converting-files-with-linux/</link><description>&lt;p&gt;The following tips work under a Linux terminal and were tested with Ubuntu 10.04 LTS.&lt;/p&gt;
&lt;p&gt;I guess they will also work with other systems, as the programs are available for them.&lt;/p&gt;
&lt;p&gt;If you know some further file conversions, please let me know.&lt;/p&gt;
&lt;p&gt;I am also very interested in Web …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 21 Sep 2011 22:10:08 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-21:/converting-files-with-linux/</guid><category>cheat sheet</category><category>conversion</category><category>Linux</category><category>Ubuntu</category><category>Command Line</category><category>PDF</category></item><item><title>Tricks with .htaccess</title><link>https://martin-thoma.com/tricks-with-htaccess/</link><description>&lt;p&gt;If your Website is running on an Apache2 Webserver, you can change the behavior of this server with .htaccess-files. &lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;h2 id="enable-htaccess-files"&gt;
Enable htaccess-files&lt;/h2&gt;
&lt;p&gt;Set &lt;a href="http://httpd.apache.org/docs/2.0/mod/core.html#allowoverride" rel="nofollow"&gt;AllowOverride&lt;/a&gt; to "All":&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo gedit /etc/apache2/sites-available/default
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart Apache:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /etc/init.d/apache2 reload
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="enable-expireson-mod_rewrite"&gt;
Enable ExpiresOn / mod_rewrite&lt;/h2&gt;
&lt;p&gt;This is for Ubuntu …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 21 Sep 2011 22:02:59 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-21:/tricks-with-htaccess/</guid><category>htaccess</category><category>Apache</category></item><item><title>Polyglots - Crazy Programming Stuff</title><link>https://martin-thoma.com/polyglots-crazy-programming-stuff/</link><description>&lt;p&gt;Have you ever heard of polyglots? This is so crazy. A &lt;a href="http://en.wikipedia.org/wiki/Polyglot_(computing)"&gt;polyglot&lt;/a&gt; is a program which can be interpreted as many programming languages. You don't believe me that something crazy like that is possible? Here is an example I've made:     &lt;/p&gt;
&lt;p&gt;See &lt;a href="https://gist.github.com/MartinThoma/4bc57260c36dea4ce9ce90999f4e81f7"&gt;public gist&lt;/a&gt;, as Jekyll keeps crashing with this.&lt;/p&gt;
&lt;p&gt;You …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Thoma</dc:creator><pubDate>Wed, 21 Sep 2011 19:28:02 +0200</pubDate><guid isPermaLink="false">tag:martin-thoma.com,2011-09-21:/polyglots-crazy-programming-stuff/</guid><category>Brainfuck</category><category>Esoteric programming language</category><category>Programming</category><category>Whitespace</category><category>Python</category></item></channel></rss>